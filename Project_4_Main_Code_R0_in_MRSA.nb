(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    430836,       8397]
NotebookOptionsPosition[    418919,       8196]
NotebookOutlinePosition[    419261,       8211]
CellTagsIndexPosition[    419218,       8208]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Giant Manipulate", "Subsection",
 CellChangeTimes->{{3.7954586162911453`*^9, 3.795458634066639*^9}, {
  3.7954587141415834`*^9, 
  3.795458716921113*^9}},ExpressionUUID->"4210d16c-fa1b-4e69-9b2b-\
98f36f244ccc"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", " ", 
  RowBox[{
   RowBox[{
    RowBox[{"param", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"e0", "\[Rule]", " ", "0.12"}], ",", " ", 
       RowBox[{"e1", "\[Rule]", " ", "0.25"}], ",", " ", 
       RowBox[{"thu", "\[Rule]", " ", "0.617"}], ",", " ", 
       RowBox[{"thua", "\[Rule]", " ", "0.349"}], ",", " ", 
       RowBox[{"thc", "\[Rule]", " ", "0.003"}], ",", " ", 
       RowBox[{"thca", "\[Rule]", " ", "0.031"}], ",", " ", 
       RowBox[{"gu", "\[Rule]", " ", "0.2"}], ",", 
       RowBox[{"gua", "\[Rule]", " ", "0.2"}], ",", " ", 
       RowBox[{"gc", "\[Rule]", " ", "0.06"}], ",", " ", 
       RowBox[{"gca", "\[Rule]", " ", "0.055"}], ",", " ", 
       RowBox[{"ap", "\[Rule]", " ", "0.0435"}], ",", " ", 
       RowBox[{"bp", "\[Rule]", " ", "0.42"}], ",", 
       RowBox[{"bpa", "\[Rule]", " ", 
        RowBox[{"0.42", "*", "1.67"}]}], ",", " ", 
       RowBox[{"bh", "\[Rule]", " ", "0.2"}], ",", " ", 
       RowBox[{"bha", "\[Rule]", " ", "0.25"}], ",", " ", 
       RowBox[{"n", "\[Rule]", " ", "0.4"}], ",", " ", 
       RowBox[{"muc", "\[Rule]", " ", "24"}], ",", " ", 
       RowBox[{"vp", "\[Rule]", " ", "235"}], ",", " ", 
       RowBox[{"vpa", "\[Rule]", " ", "470"}], ",", " ", 
       RowBox[{"vh", "\[Rule]", " ", "235"}], ",", " ", 
       RowBox[{"kp", "\[Rule]", " ", "0.000004"}], ",", " ", 
       RowBox[{"kpa", "\[Rule]", " ", "0.000005"}], ",", " ", 
       RowBox[{"kh", "\[Rule]", " ", "0.00001"}], ",", " ", 
       RowBox[{"np", "\[Rule]", " ", "23"}], ",", " ", 
       RowBox[{"nh", "\[Rule]", " ", "23"}]}], "}"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"theta", "[", "t", "]"}], " ", "=", " ", 
     RowBox[{
      RowBox[{"gu", "*", 
       RowBox[{"pu", "[", "t", "]"}]}], " ", "+", " ", 
      RowBox[{"gc", "*", 
       RowBox[{"pc", "[", "t", "]"}]}], " ", "+", 
      RowBox[{"gua", "*", 
       RowBox[{"pua", "[", "t", "]"}]}], " ", "+", " ", 
      RowBox[{"gca", "*", 
       RowBox[{"pca", "[", "t", "]"}]}]}]}], ";", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"epsilon", "[", "t", "]"}], " ", "=", " ", 
     RowBox[{"e0", "*", 
      RowBox[{"(", 
       RowBox[{"1", "+", 
        RowBox[{"e1", "*", 
         RowBox[{"Sin", "[", 
          RowBox[{
           FractionBox[
            RowBox[{"2", "Pi"}], "365"], "*", 
           RowBox[{"(", 
            RowBox[{"t", "-", "240"}], ")"}]}], "]"}]}]}], ")"}]}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"sol1", " ", "=", " ", 
     RowBox[{"NDSolve", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"{", " ", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"pu", "'"}], "[", "t", "]"}], "\[Equal]", " ", 
           RowBox[{
            RowBox[{"thu", "*", 
             RowBox[{"theta", "[", "t", "]"}]}], " ", "-", " ", 
            RowBox[{"ap", "*", "bp", "*", 
             RowBox[{"(", 
              RowBox[{"1", "-", "n"}], ")"}], "*", 
             RowBox[{"pu", "[", "t", "]"}], "*", 
             RowBox[{"hc", "[", "t", "]"}]}], "-", 
            RowBox[{"kp", "*", 
             RowBox[{"pu", "[", "t", "]"}], 
             RowBox[{"be", "[", "t", "]"}]}], "-", 
            RowBox[{"gu", "*", 
             RowBox[{"pu", "[", "t", "]"}]}], "-", 
            RowBox[{
             RowBox[{"epsilon", "[", "t", "]"}], "*", 
             RowBox[{"pu", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{"pc", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
           RowBox[{
            RowBox[{"thc", "*", 
             RowBox[{"theta", "[", "t", "]"}]}], " ", "+", 
            RowBox[{"ap", "*", "bp", "*", 
             RowBox[{"(", 
              RowBox[{"1", "-", "n"}], ")"}], "*", 
             RowBox[{"pu", "[", "t", "]"}], "*", 
             RowBox[{"hc", "[", "t", "]"}]}], "+", " ", 
            RowBox[{"kp", "*", 
             RowBox[{"pu", "[", "t", "]"}], 
             RowBox[{"be", "[", "t", "]"}]}], "-", 
            RowBox[{"gc", "*", 
             RowBox[{"pc", "[", "t", "]"}]}], " ", "-", " ", 
            RowBox[{
             RowBox[{"epsilon", "[", "t", "]"}], "*", 
             RowBox[{"pc", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{"pua", "'"}], "[", "t", "]"}], "\[Equal]", " ", 
           RowBox[{
            RowBox[{"thua", "*", 
             RowBox[{"theta", "[", "t", "]"}]}], " ", "-", " ", 
            RowBox[{"ap", "*", "bpa", "*", 
             RowBox[{"(", 
              RowBox[{"1", "-", "n"}], ")"}], "*", 
             RowBox[{"pua", "[", "t", "]"}], "*", 
             RowBox[{"hc", "[", "t", "]"}]}], " ", "-", " ", 
            RowBox[{"kpa", "*", 
             RowBox[{"pua", "[", "t", "]"}], "*", 
             RowBox[{"be", "[", "t", "]"}]}], " ", "-", " ", 
            RowBox[{"gua", "*", 
             RowBox[{"pua", "[", "t", "]"}]}], " ", "+", 
            RowBox[{
             RowBox[{"epsilon", "[", "t", "]"}], "*", 
             RowBox[{"pu", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{"pca", "'"}], "[", "t", "]"}], "\[Equal]", " ", 
           RowBox[{
            RowBox[{"thca", "*", 
             RowBox[{"theta", "[", "t", "]"}]}], " ", "+", " ", 
            RowBox[{"ap", "*", "bpa", "*", 
             RowBox[{"(", 
              RowBox[{"1", "-", "n"}], ")"}], "*", 
             RowBox[{"pua", "[", "t", "]"}], "*", 
             RowBox[{"hc", "[", "t", "]"}]}], " ", "+", " ", 
            RowBox[{"kpa", "*", 
             RowBox[{"pua", "[", "t", "]"}], "*", 
             RowBox[{"be", "[", "t", "]"}]}], " ", "-", " ", 
            RowBox[{"gca", "*", 
             RowBox[{"pca", "[", "t", "]"}]}], " ", "+", 
            RowBox[{
             RowBox[{"epsilon", "[", "t", "]"}], "*", 
             RowBox[{"pc", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{"hu", "'"}], "[", "t", "]"}], " ", "\[Equal]", "  ", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "ap"}], "*", "bh", "*", 
             RowBox[{"(", 
              RowBox[{"1", "-", "n"}], ")"}], "*", 
             RowBox[{"pc", "[", "t", "]"}], "*", 
             RowBox[{"hu", "[", "t", "]"}]}], " ", "-", " ", 
            RowBox[{"ap", "*", "bha", "*", 
             RowBox[{"(", 
              RowBox[{"1", "-", "n"}], ")"}], "*", 
             RowBox[{"pca", "[", "t", "]"}], "*", 
             RowBox[{"hu", "[", "t", "]"}]}], " ", "-", " ", 
            RowBox[{"kh", "*", 
             RowBox[{"hu", "[", "t", "]"}], "*", 
             RowBox[{"be", "[", "t", "]"}]}], "+", 
            RowBox[{"muc", "*", 
             RowBox[{"hc", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
          " ", 
          RowBox[{
           RowBox[{
            RowBox[{"hc", "'"}], "[", "t", "]"}], " ", "\[Equal]", "  ", 
           RowBox[{
            RowBox[{"ap", "*", "bh", "*", 
             RowBox[{"(", 
              RowBox[{"1", "-", "n"}], ")"}], "*", 
             RowBox[{"pc", "[", "t", "]"}], "*", 
             RowBox[{"hu", "[", "t", "]"}]}], " ", "+", " ", 
            RowBox[{"ap", "*", "bha", "*", 
             RowBox[{"(", 
              RowBox[{"1", "-", "n"}], ")"}], "*", 
             RowBox[{"pca", "[", "t", "]"}], "*", 
             RowBox[{"hu", "[", "t", "]"}]}], " ", "+", " ", 
            RowBox[{"kh", "*", 
             RowBox[{"hu", "[", "t", "]"}], "*", 
             RowBox[{"be", "[", "t", "]"}]}], "-", 
            RowBox[{"muc", "*", 
             RowBox[{"hc", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{"be", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
           RowBox[{
            RowBox[{"vp", "*", 
             RowBox[{"pc", "[", "t", "]"}]}], "+", " ", 
            RowBox[{"vpa", "*", 
             RowBox[{"pca", "[", "t", "]"}]}], "+", 
            RowBox[{"vh", "*", 
             RowBox[{"hc", "[", "t", "]"}]}], "-", 
            RowBox[{"gb", "*", 
             RowBox[{"be", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"pu", "[", "0", "]"}], "\[Equal]", " ", "4"}], ",", " ", 
          RowBox[{
           RowBox[{"pua", "[", "0", "]"}], "\[Equal]", "6"}], ",", 
          RowBox[{
           RowBox[{"pc", "[", "0", "]"}], "\[Equal]", " ", "7"}], ",", " ", 
          RowBox[{
           RowBox[{"pca", "[", "0", "]"}], "\[Equal]", "6"}], ",", " ", 
          RowBox[{
           RowBox[{"hu", "[", "0", "]"}], "\[Equal]", "17"}], ",", " ", 
          RowBox[{
           RowBox[{"hc", "[", "0", "]"}], "\[Equal]", "6"}], ",", " ", 
          RowBox[{
           RowBox[{"be", "[", "0", "]"}], "\[Equal]", "1000"}]}], "}"}], "/.",
         " ", "param"}], ",", "\[IndentingNewLine]", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"pu", "[", "t", "]"}], ",", " ", 
         RowBox[{"pua", "[", "t", "]"}], ",", 
         RowBox[{"pc", "[", "t", "]"}], ",", " ", 
         RowBox[{"pca", "[", "t", "]"}], ",", " ", 
         RowBox[{"hu", "[", "t", "]"}], ",", " ", 
         RowBox[{"hc", "[", "t", "]"}], ",", " ", 
         RowBox[{"be", "[", "t", "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"t", ",", " ", "0", ",", "1000"}], "}"}]}], 
      "\[IndentingNewLine]", "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"Evaluate", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"pu", "[", "t", "]"}], ",", " ", 
          RowBox[{"pua", "[", "t", "]"}], ",", 
          RowBox[{"pc", "[", "t", "]"}], ",", " ", 
          RowBox[{"pca", "[", "t", "]"}]}], " ", "}"}], "/.", 
        "\[InvisibleSpace]", "sol1"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "1000"}], "}"}], ",", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "1000"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "10"}], "}"}]}], "}"}]}], ",", " ", 
      RowBox[{"PlotStyle", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"Blue", ",", "Red", ",", "Purple", ",", " ", "Yellow"}], 
        "}"}]}], ",", 
      RowBox[{"AxesLabel", "\[Rule]", " ", 
       RowBox[{"{", 
        RowBox[{"\"\<Time (days)\>\"", ",", " ", "\"\<Number\>\""}], 
        "}"}]}]}], "]"}]}], ",", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"gb", ",", " ", "0.7"}], "}"}], ",", "0.6", ",", "1"}], "}"}]}],
   "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.7954587257405677`*^9, 3.795458769123545*^9}, {
  3.795458827458619*^9, 3.7954588314040375`*^9}, {3.7954589088220625`*^9, 
  3.7954589097994537`*^9}, {3.795458997489071*^9, 3.7954589982290688`*^9}, {
  3.795459035436615*^9, 3.7954590957872133`*^9}, {3.795459143609377*^9, 
  3.7954591809295883`*^9}, {3.7954598655931416`*^9, 
  3.7954599409566574`*^9}},ExpressionUUID->"1b62ed40-bd77-438b-bf0f-\
9859c235286f"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`gb$$ = 1., Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`gb$$], 0.7}, 0.6, 1}}, Typeset`size$$ = {
    360., {101., 106.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`gb$113356$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`gb$$ = 0.7}, 
      "ControllerVariables" :> {
        Hold[$CellContext`gb$$, $CellContext`gb$113356$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, 
      "Body" :> ($CellContext`param = {$CellContext`e0 -> 
          0.12, $CellContext`e1 -> 0.25, $CellContext`thu -> 
          0.617, $CellContext`thua -> 0.349, $CellContext`thc -> 
          0.003, $CellContext`thca -> 0.031, $CellContext`gu -> 
          0.2, $CellContext`gua -> 0.2, $CellContext`gc -> 
          0.06, $CellContext`gca -> 0.055, $CellContext`ap -> 
          0.0435, $CellContext`bp -> 0.42, $CellContext`bpa -> 
          0.42 1.67, $CellContext`bh -> 0.2, $CellContext`bha -> 
          0.25, $CellContext`n -> 0.4, $CellContext`muc -> 
          24, $CellContext`vp -> 235, $CellContext`vpa -> 
          470, $CellContext`vh -> 235, $CellContext`kp -> 
          4.*^-6, $CellContext`kpa -> 5.*^-6, $CellContext`kh -> 
          0.00001, $CellContext`np -> 23, $CellContext`nh -> 
          23}; $CellContext`theta[$CellContext`t] = $CellContext`gu \
$CellContext`pu[$CellContext`t] + $CellContext`gc \
$CellContext`pc[$CellContext`t] + $CellContext`gua \
$CellContext`pua[$CellContext`t] + $CellContext`gca \
$CellContext`pca[$CellContext`t]; $CellContext`epsilon[$CellContext`t] = \
$CellContext`e0 (
          1 + $CellContext`e1 
           Sin[(2 (Pi/365)) ($CellContext`t - 240)]); $CellContext`sol1 = 
        NDSolve[
          
          ReplaceAll[{
           Derivative[
             1][$CellContext`pu][$CellContext`t] == $CellContext`thu \
$CellContext`theta[$CellContext`t] - ((($CellContext`ap $CellContext`bp) (
                1 - $CellContext`n)) $CellContext`pu[$CellContext`t]) \
$CellContext`hc[$CellContext`t] - ($CellContext`kp \
$CellContext`pu[$CellContext`t]) $CellContext`be[$CellContext`t] - \
$CellContext`gu $CellContext`pu[$CellContext`t] - \
$CellContext`epsilon[$CellContext`t] $CellContext`pu[$CellContext`t], 
            Derivative[
             1][$CellContext`pc][$CellContext`t] == $CellContext`thc \
$CellContext`theta[$CellContext`t] + ((($CellContext`ap $CellContext`bp) (
                 1 - $CellContext`n)) $CellContext`pu[$CellContext`t]) \
$CellContext`hc[$CellContext`t] + ($CellContext`kp \
$CellContext`pu[$CellContext`t]) $CellContext`be[$CellContext`t] - \
$CellContext`gc $CellContext`pc[$CellContext`t] - \
$CellContext`epsilon[$CellContext`t] $CellContext`pc[$CellContext`t], 
            Derivative[
             1][$CellContext`pua][$CellContext`t] == $CellContext`thua \
$CellContext`theta[$CellContext`t] - ((($CellContext`ap $CellContext`bpa) (
                1 - $CellContext`n)) $CellContext`pua[$CellContext`t]) \
$CellContext`hc[$CellContext`t] - ($CellContext`kpa \
$CellContext`pua[$CellContext`t]) $CellContext`be[$CellContext`t] - \
$CellContext`gua $CellContext`pua[$CellContext`t] + \
$CellContext`epsilon[$CellContext`t] $CellContext`pu[$CellContext`t], 
            Derivative[
             1][$CellContext`pca][$CellContext`t] == $CellContext`thca \
$CellContext`theta[$CellContext`t] + ((($CellContext`ap $CellContext`bpa) (
                 1 - $CellContext`n)) $CellContext`pua[$CellContext`t]) \
$CellContext`hc[$CellContext`t] + ($CellContext`kpa \
$CellContext`pua[$CellContext`t]) $CellContext`be[$CellContext`t] - \
$CellContext`gca $CellContext`pca[$CellContext`t] + \
$CellContext`epsilon[$CellContext`t] $CellContext`pc[$CellContext`t], 
            Derivative[
             1][$CellContext`hu][$CellContext`t] == ((((-$CellContext`ap) \
$CellContext`bh) (
                 1 - $CellContext`n)) $CellContext`pc[$CellContext`t]) \
$CellContext`hu[$CellContext`t] - ((($CellContext`ap $CellContext`bha) (
                1 - $CellContext`n)) $CellContext`pca[$CellContext`t]) \
$CellContext`hu[$CellContext`t] - ($CellContext`kh \
$CellContext`hu[$CellContext`t]) $CellContext`be[$CellContext`t] + \
$CellContext`muc $CellContext`hc[$CellContext`t], 
            Derivative[
             1][$CellContext`hc][$CellContext`t] == ((($CellContext`ap \
$CellContext`bh) (
                 1 - $CellContext`n)) $CellContext`pc[$CellContext`t]) \
$CellContext`hu[$CellContext`t] + ((($CellContext`ap $CellContext`bha) (
                 1 - $CellContext`n)) $CellContext`pca[$CellContext`t]) \
$CellContext`hu[$CellContext`t] + ($CellContext`kh \
$CellContext`hu[$CellContext`t]) $CellContext`be[$CellContext`t] - \
$CellContext`muc $CellContext`hc[$CellContext`t], 
            Derivative[
             1][$CellContext`be][$CellContext`t] == $CellContext`vp \
$CellContext`pc[$CellContext`t] + $CellContext`vpa \
$CellContext`pca[$CellContext`t] + $CellContext`vh \
$CellContext`hc[$CellContext`t] - $CellContext`gb$$ \
$CellContext`be[$CellContext`t], $CellContext`pu[0] == 4, $CellContext`pua[0] == 
            6, $CellContext`pc[0] == 7, $CellContext`pca[0] == 
            6, $CellContext`hu[0] == 17, $CellContext`hc[0] == 
            6, $CellContext`be[0] == 1000}, $CellContext`param], {
           $CellContext`pu[$CellContext`t], 
           $CellContext`pua[$CellContext`t], 
           $CellContext`pc[$CellContext`t], 
           $CellContext`pca[$CellContext`t], 
           $CellContext`hu[$CellContext`t], 
           $CellContext`hc[$CellContext`t], 
           $CellContext`be[$CellContext`t]}, {$CellContext`t, 0, 1000}]; Plot[
         Evaluate[
          ReplaceAll[{
            $CellContext`pu[$CellContext`t], 
            $CellContext`pua[$CellContext`t], 
            $CellContext`pc[$CellContext`t], 
            $CellContext`pca[$CellContext`t]}, $CellContext`sol1]], \
{$CellContext`t, 0, 1000}, PlotRange -> {{0, 1000}, {0, 10}}, 
         PlotStyle -> {Blue, Red, Purple, Yellow}, 
         AxesLabel -> {"Time (days)", "Number"}]), 
      "Specifications" :> {{{$CellContext`gb$$, 0.7}, 0.6, 1}}, 
      "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{411., {149., 155.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.795459101323445*^9, 3.7954591467140627`*^9, 3.795459181419278*^9, {
   3.795459872049881*^9, 3.7954598815794015`*^9}, 3.7954599176559567`*^9},
 CellLabel->"Out[77]=",ExpressionUUID->"6e7d653e-5e3b-4d1b-84a1-8b7cbb908c67"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Figure 4 and 5 ", "Subsection",
 CellChangeTimes->{{3.7931438840877943`*^9, 3.793143905443008*^9}, {
  3.7931439491836214`*^9, 3.793143954536168*^9}, {3.793152697697586*^9, 
  3.793152698989122*^9}},ExpressionUUID->"e9256344-6958-4a82-bd0b-\
1756cb35fb84"],

Cell[BoxData[
 RowBox[{
  RowBox[{"param", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"e0", "\[Rule]", " ", "0.12"}], ",", " ", 
     RowBox[{"e1", "\[Rule]", " ", "0.25"}], ",", " ", 
     RowBox[{"thu", "\[Rule]", " ", "0.617"}], ",", " ", 
     RowBox[{"thua", "\[Rule]", " ", "0.349"}], ",", " ", 
     RowBox[{"thc", "\[Rule]", " ", "0.003"}], ",", " ", 
     RowBox[{"thca", "\[Rule]", " ", "0.031"}], ",", " ", 
     RowBox[{"gu", "\[Rule]", " ", "0.2"}], ",", 
     RowBox[{"gua", "\[Rule]", " ", "0.2"}], ",", " ", 
     RowBox[{"gc", "\[Rule]", " ", "0.06"}], ",", " ", 
     RowBox[{"gca", "\[Rule]", " ", "0.055"}], ",", " ", 
     RowBox[{"gb", "\[Rule]", " ", "0.7"}], ",", " ", 
     RowBox[{"ap", "\[Rule]", " ", "0.0435"}], ",", " ", 
     RowBox[{"bp", "\[Rule]", " ", "0.42"}], ",", 
     RowBox[{"bpa", "\[Rule]", " ", 
      RowBox[{"0.42", "*", "1.67"}]}], ",", " ", 
     RowBox[{"bh", "\[Rule]", " ", "0.2"}], ",", " ", 
     RowBox[{"bha", "\[Rule]", " ", "0.25"}], ",", " ", 
     RowBox[{"n", "\[Rule]", " ", "0.4"}], ",", " ", 
     RowBox[{"muc", "\[Rule]", " ", "24"}], ",", " ", 
     RowBox[{"vp", "\[Rule]", " ", "235"}], ",", " ", 
     RowBox[{"vpa", "\[Rule]", " ", "470"}], ",", " ", 
     RowBox[{"vh", "\[Rule]", " ", "235"}], ",", " ", 
     RowBox[{"kp", "\[Rule]", " ", "0.000004"}], ",", " ", 
     RowBox[{"kpa", "\[Rule]", " ", "0.000005"}], ",", " ", 
     RowBox[{"kh", "\[Rule]", " ", "0.00001"}], ",", " ", 
     RowBox[{"np", "\[Rule]", " ", "23"}], ",", " ", 
     RowBox[{"nh", "\[Rule]", " ", "23"}]}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.79314398385992*^9, 3.793144005456154*^9}, {
  3.793144036112743*^9, 3.7931444435917625`*^9}},
 CellLabel->"In[20]:=",ExpressionUUID->"90837d4b-ed86-46f1-9297-686a8a0d96e0"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"theta", "[", "t", "]"}], " ", "=", " ", 
   RowBox[{
    RowBox[{"gu", "*", 
     RowBox[{"pu", "[", "t", "]"}]}], " ", "+", " ", 
    RowBox[{"gc", "*", 
     RowBox[{"pc", "[", "t", "]"}]}], " ", "+", 
    RowBox[{"gua", "*", 
     RowBox[{"pua", "[", "t", "]"}]}], " ", "+", " ", 
    RowBox[{"gca", "*", 
     RowBox[{"pca", "[", "t", "]"}]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"epsilon", "[", "t", "]"}], " ", "=", " ", 
   RowBox[{"e0", "*", 
    RowBox[{"(", 
     RowBox[{"1", "+", 
      RowBox[{"e1", "*", 
       RowBox[{"Sin", "[", 
        RowBox[{
         FractionBox[
          RowBox[{"2", "Pi"}], "365"], "*", 
         RowBox[{"(", 
          RowBox[{"t", "-", "240"}], ")"}]}], "]"}]}]}], ")"}]}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.7931446062763968`*^9, 3.7931446599143934`*^9}, {
   3.7931448071382914`*^9, 3.7931448365601206`*^9}, {3.793144871461584*^9, 
   3.793144942726204*^9}, 3.7931449784164047`*^9},
 CellLabel->"In[1]:=",ExpressionUUID->"8de4868f-c5bf-410d-aa71-2fffc1704a0e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"sol1", " ", "=", " ", 
   RowBox[{"NDSolve", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"{", " ", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"pu", "'"}], "[", "t", "]"}], "\[Equal]", " ", 
         RowBox[{
          RowBox[{"thu", "*", 
           RowBox[{"theta", "[", "t", "]"}]}], " ", "-", " ", 
          RowBox[{"ap", "*", "bp", "*", 
           RowBox[{"(", 
            RowBox[{"1", "-", "n"}], ")"}], "*", 
           RowBox[{"pu", "[", "t", "]"}], "*", 
           RowBox[{"hc", "[", "t", "]"}]}], "-", 
          RowBox[{"kp", "*", 
           RowBox[{"pu", "[", "t", "]"}], 
           RowBox[{"be", "[", "t", "]"}]}], "-", 
          RowBox[{"gu", "*", 
           RowBox[{"pu", "[", "t", "]"}]}], "-", 
          RowBox[{
           RowBox[{"epsilon", "[", "t", "]"}], "*", 
           RowBox[{"pu", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"pc", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
         RowBox[{
          RowBox[{"thc", "*", 
           RowBox[{"theta", "[", "t", "]"}]}], " ", "+", 
          RowBox[{"ap", "*", "bp", "*", 
           RowBox[{"(", 
            RowBox[{"1", "-", "n"}], ")"}], "*", 
           RowBox[{"pu", "[", "t", "]"}], "*", 
           RowBox[{"hc", "[", "t", "]"}]}], "+", " ", 
          RowBox[{"kp", "*", 
           RowBox[{"pu", "[", "t", "]"}], 
           RowBox[{"be", "[", "t", "]"}]}], "-", 
          RowBox[{"gc", "*", 
           RowBox[{"pc", "[", "t", "]"}]}], " ", "-", " ", 
          RowBox[{
           RowBox[{"epsilon", "[", "t", "]"}], "*", 
           RowBox[{"pc", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"pua", "'"}], "[", "t", "]"}], "\[Equal]", " ", 
         RowBox[{
          RowBox[{"thua", "*", 
           RowBox[{"theta", "[", "t", "]"}]}], " ", "-", " ", 
          RowBox[{"ap", "*", "bpa", "*", 
           RowBox[{"(", 
            RowBox[{"1", "-", "n"}], ")"}], "*", 
           RowBox[{"pua", "[", "t", "]"}], "*", 
           RowBox[{"hc", "[", "t", "]"}]}], " ", "-", " ", 
          RowBox[{"kpa", "*", 
           RowBox[{"pua", "[", "t", "]"}], "*", 
           RowBox[{"be", "[", "t", "]"}]}], " ", "-", " ", 
          RowBox[{"gua", "*", 
           RowBox[{"pua", "[", "t", "]"}]}], " ", "+", 
          RowBox[{
           RowBox[{"epsilon", "[", "t", "]"}], "*", 
           RowBox[{"pu", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"pca", "'"}], "[", "t", "]"}], "\[Equal]", " ", 
         RowBox[{
          RowBox[{"thca", "*", 
           RowBox[{"theta", "[", "t", "]"}]}], " ", "+", " ", 
          RowBox[{"ap", "*", "bpa", "*", 
           RowBox[{"(", 
            RowBox[{"1", "-", "n"}], ")"}], "*", 
           RowBox[{"pua", "[", "t", "]"}], "*", 
           RowBox[{"hc", "[", "t", "]"}]}], " ", "+", " ", 
          RowBox[{"kpa", "*", 
           RowBox[{"pua", "[", "t", "]"}], "*", 
           RowBox[{"be", "[", "t", "]"}]}], " ", "-", " ", 
          RowBox[{"gca", "*", 
           RowBox[{"pca", "[", "t", "]"}]}], " ", "+", 
          RowBox[{
           RowBox[{"epsilon", "[", "t", "]"}], "*", 
           RowBox[{"pc", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"hu", "'"}], "[", "t", "]"}], " ", "\[Equal]", "  ", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "ap"}], "*", "bh", "*", 
           RowBox[{"(", 
            RowBox[{"1", "-", "n"}], ")"}], "*", 
           RowBox[{"pc", "[", "t", "]"}], "*", 
           RowBox[{"hu", "[", "t", "]"}]}], " ", "-", " ", 
          RowBox[{"ap", "*", "bha", "*", 
           RowBox[{"(", 
            RowBox[{"1", "-", "n"}], ")"}], "*", 
           RowBox[{"pca", "[", "t", "]"}], "*", 
           RowBox[{"hu", "[", "t", "]"}]}], " ", "-", " ", 
          RowBox[{"kh", "*", 
           RowBox[{"hu", "[", "t", "]"}], "*", 
           RowBox[{"be", "[", "t", "]"}]}], "+", 
          RowBox[{"muc", "*", 
           RowBox[{"hc", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
        " ", 
        RowBox[{
         RowBox[{
          RowBox[{"hc", "'"}], "[", "t", "]"}], " ", "\[Equal]", "  ", 
         RowBox[{
          RowBox[{"ap", "*", "bh", "*", 
           RowBox[{"(", 
            RowBox[{"1", "-", "n"}], ")"}], "*", 
           RowBox[{"pc", "[", "t", "]"}], "*", 
           RowBox[{"hu", "[", "t", "]"}]}], " ", "+", " ", 
          RowBox[{"ap", "*", "bha", "*", 
           RowBox[{"(", 
            RowBox[{"1", "-", "n"}], ")"}], "*", 
           RowBox[{"pca", "[", "t", "]"}], "*", 
           RowBox[{"hu", "[", "t", "]"}]}], " ", "+", " ", 
          RowBox[{"kh", "*", 
           RowBox[{"hu", "[", "t", "]"}], "*", 
           RowBox[{"be", "[", "t", "]"}]}], "-", 
          RowBox[{"muc", "*", 
           RowBox[{"hc", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"be", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
         RowBox[{
          RowBox[{"vp", "*", 
           RowBox[{"pc", "[", "t", "]"}]}], "+", " ", 
          RowBox[{"vpa", "*", 
           RowBox[{"pca", "[", "t", "]"}]}], "+", 
          RowBox[{"vh", "*", 
           RowBox[{"hc", "[", "t", "]"}]}], "-", 
          RowBox[{"gb", "*", 
           RowBox[{"be", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"pu", "[", "0", "]"}], "\[Equal]", " ", "4"}], ",", " ", 
        RowBox[{
         RowBox[{"pua", "[", "0", "]"}], "\[Equal]", "6"}], ",", 
        RowBox[{
         RowBox[{"pc", "[", "0", "]"}], "\[Equal]", " ", "7"}], ",", " ", 
        RowBox[{
         RowBox[{"pca", "[", "0", "]"}], "\[Equal]", "6"}], ",", " ", 
        RowBox[{
         RowBox[{"hu", "[", "0", "]"}], "\[Equal]", "17"}], ",", " ", 
        RowBox[{
         RowBox[{"hc", "[", "0", "]"}], "\[Equal]", "6"}], ",", " ", 
        RowBox[{
         RowBox[{"be", "[", "0", "]"}], "\[Equal]", "1000"}]}], "}"}], "/.", 
      " ", "param"}], ",", "\[IndentingNewLine]", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"pu", "[", "t", "]"}], ",", " ", 
       RowBox[{"pua", "[", "t", "]"}], ",", 
       RowBox[{"pc", "[", "t", "]"}], ",", " ", 
       RowBox[{"pca", "[", "t", "]"}], ",", " ", 
       RowBox[{"hu", "[", "t", "]"}], ",", " ", 
       RowBox[{"hc", "[", "t", "]"}], ",", " ", 
       RowBox[{"be", "[", "t", "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", " ", "0", ",", "1000"}], "}"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7931444518909254`*^9, 3.793144485833975*^9}, {
  3.7931445777673607`*^9, 3.7931445824051485`*^9}, {3.7931449849216886`*^9, 
  3.793145023099779*^9}, {3.7931458478317647`*^9, 3.79314592774765*^9}, {
  3.7931460132406645`*^9, 3.7931460512351522`*^9}, {3.7931462840082674`*^9, 
  3.793146310980627*^9}, {3.793146369297439*^9, 3.7931466434670076`*^9}, {
  3.79314672654883*^9, 3.7931470139021697`*^9}, {3.7931470572529955`*^9, 
  3.793147233410972*^9}},
 CellLabel->"In[4]:=",ExpressionUUID->"4eabee48-600c-48bc-855c-bcbb3c22aeb3"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"pu", "[", "t", "]"}], ",", " ", 
       RowBox[{"pua", "[", "t", "]"}], ",", 
       RowBox[{"pc", "[", "t", "]"}], ",", " ", 
       RowBox[{"pca", "[", "t", "]"}]}], " ", "}"}], "/.", 
     "\[InvisibleSpace]", "sol1"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "1000"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "Automatic"}], ",", " ", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Blue", ",", "Red", ",", "Purple", ",", " ", "Yellow"}], "}"}]}],
    ",", 
   RowBox[{"AxesLabel", "\[Rule]", " ", 
    RowBox[{"{", 
     RowBox[{"\"\<Time (days)\>\"", ",", " ", "\"\<Number\>\""}], "}"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.7931472359086947`*^9, 3.7931472461148243`*^9}, {
  3.7931472787458563`*^9, 3.7931473037449007`*^9}},
 CellLabel->"In[5]:=",ExpressionUUID->"29741bad-8731-4164-a4c4-81be4e85bfeb"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0, 0, 1], AbsoluteThickness[1.6], Opacity[1.], 
      LineBox[CompressedData["
1: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
1/GWfxL8ycIS9ExXED8ujQmK+c3CltFTzGbi/Q6mXBN/WLi7pjt0gHhKkJ7m
wcXGhNze3r/E6ZX9kt08bDi+7y+XJe9LweXq2R18bBw6qjG9ifiOSPjqB3PZ
yLSQvexFvPOu0R1tITa01J2fHiVm0rrb5ETYeDu9wG6cWPJ+ieOxhWzUSvA1
KpL5veYT+EVYgo1iNe98R+Luh0I8kww2AuYrZXcSBwZ1pHstZmPv/cs3FpF4
Elp6huqVZkPmrpjufmLNCO21D+XYqLo7dnSSuEWRr2bjMjZeOuft20zi0/Xl
c+PS5WxsT0vJOU58RMVzf54KG6MlZ/VM3GlQ6lIbmr+aDVvtv6XFxPWsv6Hx
a9koSeNLm0vyYaQ3N/OgBhusW8ERL4lZHOfFfVps2KguTNcj+SOlpVpitZGM
/2wl/1Vi08MPanXBxkBOr0o2yb/zht+HRUzZmKdpps4h+Rt2aO3222ZsfM6c
7ZUi+W2a41PqvJ2Nj3nPE278O18b/BRw04oNw4Luqs+kPmik9vzYs4+NtW5t
d5JI/RAoX2TH68zGRcM7ctqkvrx+Y1t91ZWNS6WF0SPEsavaorgOkPGM+Am7
BdLw6HkTd3EQG64nPx+MC6HhxM85LttD2bAQ2GO7k9S3Q3IGjdPh5P0aTqsu
J/VvYdAd9rZYNv5+e3Wqm9THPZKlwt9S2LhiUO8WEk3DkEMeTaeQjadPJXNc
WaSesDtCPpxmo846/X7gv/p7Xbwz4xwbIfvEm9mkPq/nzjjRf5HMP1egc1UK
qW/n4mWTKth4yArMMcmgQeTrQaW2x2x4aqc1yh2n4Z34xdTIp2yEbjsz5kPW
hwqdwa8KrWzEam7vqz1Bw+6M/ddC29nwckrjPVBAQ9FaazXpt2ws43uoNnyG
xHuYnq7ndzaiTt26eP4aDUfn7495P8VG2ZctOuKlNHw/E1e3/ycbB8/G/00g
61Xls0YDu1k22vuVxXwrSD2S37bFVCAJ5mFvNxyspsGoxXa7ilQSnnsUKP0i
66GNgr/TmGESzFidSe7vaLh1+8iZQ1uSMMP1YFTjPQ2M7RUDn4yTENxtv0No
kMxP+A+3fvMkvCjbMXH7Mw37WqMPtNkmQTxZKVHnGw2eEamBFQeT8Htu1NhT
Ljoin59lhR1NwqnYHgthOTrOveo0/5STBI1b3vkrFch+p3c+fffxJJQldcZY
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
YnZ68q9VFh2vu80m/+pnojjkwhePdDr+B399UCE=
       "]]},
     Annotation[#, "Charting`Private`Tag$14096#1"]& ], 
    TagBox[
     {RGBColor[1, 0, 0], AbsoluteThickness[1.6], Opacity[1.], 
      LineBox[CompressedData["
1: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
3WNI5mPohreVuVuYWMxgHy0n8zmju0hecxuTrEOqv8xUSX9nbivrdGXimMJ5
vx/ET5telEh7MnHFdKePJekPGjZPCs7uYkI/oeWGmjoFyx85S+z2MFGyXcxh
jNhnv03eaAgTW3/M67tF+k/Bi4cc3UgmZAoqZpxJfxp3b055kMSEwfLswts6
FG4G14Z+KmCip4v740ZDCjsS3NtcDjGRs0b7mCYo8GVzqT4pYuLE2Z5zK40o
bDlt2ne7lIl8jQ0XxI0pjH7qcD94igmBr5m/5M0oqLoMWFrcZmJN3qBCpx2F
ZwE5p+rrmPiS65P925705yh1Pu275H0Xvl8i60ih9UD0Xdn7TLxgfQyPdaLg
38a77k87E1Vac+XsXcj7MJZSuPiJCZNSxspsHwpmjvUpCr1MWLh0Dvf4kn7o
6d1ztJ/Uj/2JE+v8KegnnjqaMciEYeGT08OBFN7c1FriPUl+r1uuLyWYgshq
m38igskQ/hZerBpL6kcs8XWsRjLunFp4MPoAhaCT+QtWrE2GgNmfFZsKSb9f
XWX4VCcZGevfJYseIt83eVKxUj8Zj+NPJdQdIetfiGz4c7NkJNz806tWRuHK
/fsCq92T0a7cZ5J/mcI7hvCGD+nJ6A50VJPqIP3t6fFSs65kTM34Kn0Vo2F4
+pjiRFoKgg03X/e4SEOQZe1ZN5lUxN4R74mSouPDmnWSvPKp6L9dsCJfmux3
Ra9nnV6RCkbtQMM5ig6jnss7J1RSoThl9PU9neTVqNMr87RT8Ux3tENfgeST
E4dPNlqlomzd712dq0g++xV1VDkqFT/ErRBsQEdm95jA05hUvLudER9qSMdM
Y3hsdFwq+h5WPg8DHV9zgl2amKm4I6DQEbaRjjp5/+UenFRsagx66W9KR6D9
lgP7j6fi7G6ZZjlbkl+qNDlTD1Mxcy7f770bHfd+Fb4J+y8ViU+/ml51p+O+
1ZTSQHsqogK2rmd70NH243ZL13NyP+UHXZQ8yX5Xx5SvsTsV3PlZ9r5kP8nV
si1532gqLmzesfUc2W+a9CdEy0qkweCqRl1iJB3mej33j0qlIXnzyU2aUSSP
Z29cJkpLw5Opu029xFvU5l2bJ5+Gsj7uKssYOvxj8ka/r0rD2asu/XPJfjid
/+SeG0Zp2LGfdn92v/xQscXHemcatD8Pe/Bk0XHwu75ezW7yuZtG9X5in0tX
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

       "]]},
     Annotation[#, "Charting`Private`Tag$14096#1"]& ], 
    TagBox[
     {RGBColor[0.5, 0, 0.5], AbsoluteThickness[1.6], Opacity[1.], 
      LineBox[CompressedData["
1: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
OxQYv4lWR1jRkcUbXeWm+xSIVt6rpWBJR19iue7vbKDAg9QVu9P24/iVeoyv
PaJA+lXLc7P76OhKorfjuWYK9Co1yTEs6GiXmuZ3njYK1Gcmufpj7v30Ozi6
gwICDwRZi+Z05Jf6fHnyGQVe7VnbnIWZQ/tCqkc3zn/n6pHtmC9+dd3w4SUF
WgMf2b4zw/XLVC236qGASEYffxLmdoMFlZa3FEgK3ihkgPk4o+2B9jsK1AZY
Oi3upaPp81km1f0UMOmTm2vGnArHe2QGKPBtwf1jNuZNE4rHz3+igL7yM34/
zPcLpul8QxQYa1ydsO/f+ZvZ09DYYQrkL8/v0cT8bTrtD3sE1w+MbeQwx5Qd
Tvf6ToG8gWuXpDCvs9oi+pFBAQ3xCSSD+frCjwobFgV8bV4qbMMMlQ+3t/2g
wPArbnsDzO/tkht0p3B/Fah02/87j/tju/cmQYHb5k0pkZh5bmx8u/knBQyW
gzIuYS4+ynC6MIfzITP5vg+zJve9sZWLeL+iLL+1OP7ntXHhcUu4n6027DmM
2dV5P8fMbwqkKkq7VmCeWyma4cNBhT1C9W2zmM/e/yo2yEkFcd8M/4M43/Ie
ty4f4KFCdemhYw8wPxI+rdbBR4U88UcZ8rh+Bx+bPtIXoEKsYRhXIWayyGCv
rDAVHipefFyC6y/WetXl4loqWDV6/FHB+qgJDGMJbqDCGhtIasU8+EyAc1ac
Cr84+ez5sb7CwvvP+m2kwuwfybIHmAW2XJIYkqaCcGaMShDWo260vsYzWSr8
+FTFO2+D9a7I82SXAhXe992zf4b17PnfG4varVRQHzg3Uob1nqPq61qgSoXo
0L2P/Q7SkdLAzh9CalQ4b+LMdxz3SzPlb2SiBhV8c7uz7XE/TQ7lZZ3SoUKB
irKz6xE6otDcNw7rUUHqlktZKO5HKb0dV+13UeHyT1eZsw50tP9cx1NDoIK7
geubj7ifK01+Tgjvp8LbyYT5D3geRPlr2DZYUSHJ+TT/fjd8/YXAWndbKjR9
l2trd8fr0cdC6+2p4HXAcud7PE900j/PHzuB8zUxPRmE5xH/PUlHbncqnLyc
ZLgjkI4+fjraeMuTCucO/Kc+F0RH8dt7YzlOUoHTqZPzMp5nXW86V1SFU0FE
/zAEx9BR4SKXh20kFa4nL5bHnKEjf1nj9oXTVEhrvV+eHU9Ha8MfUS3jqbAt
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
5jmXb2Oi/wE1gomx
       "]]},
     Annotation[#, "Charting`Private`Tag$14096#1"]& ], 
    TagBox[
     {RGBColor[1, 1, 0], AbsoluteThickness[1.6], Opacity[1.], 
      LineBox[CompressedData["
1:eJwV2nc8Vl8cB3BRZkZD2c99kLJnWdGnyB6RCil7lTIfq+KxHusxEiorCpWW
SvkRLaKJJFISKm0VJVL5HX/1er9u3HvPPed7vp/zQvcKdvTl5ODgcOfi4Jj7
99P4Hxszv5/GNz7wdfJwiCGsKkbbtOLJuma5FeKcS8URLfDFT7zi9TozHhNW
/aw4dE2l63JDv6xTqOs7cnxQAvuuV3PMr5hYxyP5duBdrSSePzc+uS59al3o
F+7IO5FSMPjVa7sv9O+6x/2xFbka0vh7OMl2upwLS1QyjxQkyEClupNaLsoN
uz1f7zSJ0+BWJ/lDJ50Xm3ilBitP0sC+7d/u+JcfHI+/tb8TpdDUdbkoJFQQ
Uo9Sbd03U/g8OLsn+60wLC6rS8awKWRPVlG9KotwWiroc/gtCtfnj09MlC/B
nSXOkv9odPQKHHnJ+WIpquu1T3NY0TG22Lh9kegy/H0Yv+F+CB3cEm9qKfvl
iOj+b112Ph0y9Iwi9XQx9L3ZEnzgCh1rVmkkG7eIIy1IfkHbEzrs1Hv32P6V
wImputpDX+nwW7N/m5uuFNQ4U2uF+WRxwEh2/e5Qacy72v3Kg5JFvuldpdgz
Mph/VqfjzGpZnLXeuzT9LQ27C82GF1vKwkuRf/ZBDoX7qlXeV11lMabyMvyJ
Ch0r+YWq63bJIlaj9v3ze3R86ixZphQjC26dpB0jfrL4GhnrqsmSRZ7u1u4P
XHK4039xz+uDspAxVDT/Xi6HtKfW57eVyKLG+M+1KSN5hOw5zl1ZJYs1Gzo1
OF7Iw3OT3M+Bc7K4vfF4FU/0Cpx80VMmekUWdpYMCWFRBazl1ZhyvyaL5zYW
OcsuKcD72eq2hzdl4bdJcr6M/Ursaim5vPuOLMY3j0Wv+LwSbqX3dlvfk0Xc
tltfVNJXYRt7W0XMQ1nwb8/30lFQRHrwQlmuTlkU7vTvM2xRxJeQt8MTXbKQ
9TKwMfFQQljtYpFt3bI47yt4y+qvEiqVrkrpPpGFQeDQasciZRz6R90tJW4L
ulzjoquCpjeGKvnEjiEsmmePCs5TXvdliV+Gu+QHhKrC4YJ2ngP5fQFRKnwh
Qmo4uFP288rHsvgRO3sg6owaDN99un2WPA8zrns8zkId2qcNM0YfyWJhYpU/
6606BncKmr94IIuHG9aOma3XQMK3jMO55P3yWqtO3c/RgMLjv40C7WS870ZL
d6toQtBc+azfLVm8sRzp27JPEwMzBub218n4P7DO67+niVO7OF2EyXiu6ZTh
GfbTwtO3re7ydWS8e1u/fS3XxmGBPo3flbKIf7XDRWhSG9/1r5VXlMui9v3k
LRVrHUT7Of3TId9z0cyqQ4E/dXCC+9IdxUOy6KFlrX5tuQbLlmz4kMaUhWvg
ltjecT20raEbZJL5lBk2NvLDXB9uHBZLH2+RRdO+VOslpfq4kGcoIOkgC+ns
BqlN5gbY/tnlbbO5LIYuSd+4V2yItvorSnZkvvr/ecvVbGqM0NILlh8XyeLI
gvigF0eNYV5U8bpKUBZ3hcSeTo8ZQ7DpS/8uMv+V6FbVa46uQzC1UX7RPFn8
kt0m/ywSkOCy3tz1jY5G82ttDg/WY9kF3ofLu+nAwSSBjRGmCL/kcmdHMR3t
g8uMOUtM4e+2WWDPEbLeVGpCbrSQ68rh3xML6NjR3vVUf8lGZGoGmt/OoSP2
r3S52qWNuHoqpZGdTEdd4H86Yt/M8PeKwkLjYDpWbfiy49NuSyzgj/mSbEHH
hRxm7qlDlrjRvswEZmR9v1zS4nvNEh3GIy2zJnRsjDZYNcRvhdGRk9yZ6+jw
Op863nPaCjoCVj1da+gokZBNvf7OGtJjEkELFehYNLG19qC3Hdazdvi+5Sb1
YwfdKTXDDpF7Yj8uWUCHSvunX/sv2iEp9tGgKRcdFsXMdQGzdnDiPv313CyF
OJOaDuNie+Tabb5UPEVh8l7cJCNwE9K9T9oMfqTgLdG9VK7CARvixXc96KJg
fC3a4YCIE0qkw/PmV1Cguj90lK1wwvmrARr7jlGY98HV5qaBEwLf/+SZKKXQ
uszInMvXCeMz17aOFlGwCptnlN7gBJkOMdqLfApbFTNWFXhtwdpSPZ6ZNArB
h4tnz9ZtBbV5nIs7jEJ5+PVzA84uyJFMC15iTmF6zFGpIMgFlaWco8MbKTju
eldty3TB2olNRhdNKcz3FCm/ftIFs5nOBx03UAiw88orn3RBxsdHo8eMKGgo
ckf55LtCuGC3uJ8OhRuDtvjcuR2/XkiwTslSEHMdaap8vR3J1wqXF9AphDyN
1N/xazsydJdfSKQoyD48ptUh44YdJ7UnPWQosBq+y9fucYPl1BERJQkKdvkF
fBECOyBTdHbg6yIKg5Yvu2fMdkK5y/byFk4Ki0/+/e3qthNayRv0HedRMJsv
I9cYuhNTh+21N3FQOHd9Z3h0yU683fhTvOIPDfu1h5b8/L4TV/YsWt32gwZx
6ddOYyXuOPhoReAJUsdtYrkO2F5yx9a9v3QevaaB2SdXdbbdHb/VMlb/Hqbh
/UGfn7vG3ZHpVPx+xyAN27km7k/IeUBU81WxTR8NStERu0NiPNB4xdHzwT0a
WquTZ2nJHrBbNH5V6S4NO5/mH+rM9oDijH9WVhsNeVpXrqlVeqDk5sPOHS00
TH/+KfClwwN1sm+UFJtpuOsZdTZQ3hO7MqIVgi/S4JWbCnF1T4inBZzhraXh
z/XDPXf1PfHjft1U1Xka1KX++7PS3hNb9gn+/XSGhsLeKZvRGE98LBWWra6m
wdc69otXpyfKQtOCektooNY/Kx3q94T53errl4tpGFizxm7nG3Ld69BEfhEN
jrLj512mPRHVrbrE+wgNmA4M2STnhfMXWllq+eT+Y+1Uh6oXzN0u2SgfoqH+
zYrH1npeCBr9LaySR4Na17Cmua0X6EfCivRzaZA66TJhFOUFUV+XRSlsGp6V
1J+4luCFu2cqlx7PpOFQnqiTPtsLe248V2nJoIE/7nGdToUXHnlfPrkonYYp
J8tI5QdeuLD8Cf9QCg11VicVTj/1wtN09l9p4mAs6FMY8kLPvj9iHsk0jCrf
0pX96YX0iOgn3xJpeMKpPy1G80ZmsNJRUyYN2VOFpwsVvYELG5dUxtNgNfbD
ZamON/Y5n23nIb7ZX9sobOkNX8fOty8OkPnTKbQ7a7M3Ep3vONoQ694JkhTY
6Y0F2rEct/bTcL521X7ucG+IdR2Sr99Hw65qlkryAW8st9Aq0yNeUfJmYF6a
N1xmOd2vx9JQklpu9LfEGxJnzzf1xtDgfODfl9iT3ngfdMwtkHhJuFvZ1EVv
3JWKtOQgztgpNjvR5g2tu/sEDaNpMHOKvBD62BuTnHGjg1E0zLPqcf/6whvr
ziwUSSWOXp178+M3b/TeZji/iaRBR3ksJGDGGztC5WKOEn+lbOijC3xQvX3+
mCOx30LexGEJH/AEXOrrZtAgy+mn5b7CB/Rz1rZHiV/+ahkZUPeBz0U5cR/i
I1/oh1wNfNDgk2aoTez0Ot7kmakP+Orb67iJhftfTmyx98G6I+opgxE03O8w
rHzi4gOTKcFzjcSs1qNODj4+mG2rVSkmXt/4a37nXh+s/eU7n0ms5/VO50i0
D86JCBTtItbg7/PxTPRBxX7nX87EKy+15SuxfeD1m0fKmljG9WrrRIEP9C2f
8KwnFuWs/tF0zAehqyIaDYgX1hTIs077wGlbpbYeMZdjipP9ZR+oFEiH6xP/
no5IFmv2wfqKo9HGxN8rfOqG23zwyqDbxJz4vaXTm5ouH2yiJ/RsJh76brI0
4rkPLqZ7KPkQ9x3VNjV644OrriIbo4k71stFcI/5YPJ4l1wucduHxZWdv3zQ
S++6c4a4+SBnz5F5vmgqNFJ6QFynP87lJeALgVvmm8aIzwwPayuL+kLJQ1pX
lIzn8fTH3j9kfBGn/eXlOuKjmrcONa/yRdDvtyZ7iXP7a1tYWr5wjlgTUE6c
mlA+Yb/WF6c8BK16ieMUc+XEzXzxcUXpe2HyvffEBCedcfHFrw/D27KJfeju
lyO8fRF+7uuKJ8Ru9+xeG+3xRdXdR2ckyXyyElcz6WL6wteqoL+eeP0t6fCj
Gb4QefIgToDMR71AwRNe+b44/Suo14tYoeEz58+Tvhh2Tj8sReavtOeA1vWL
vlBu2fYvjngp30Ov1Gvk/T/wLH5LzOly5rZ4py8WiJ3VayLr49VUYKLxpC94
mwTsC8n66i13ucTD4YdkKf4PomT9dVhYjnTx+eHcnaX0o8RNR1Zt8Jb2w+GO
Ye+aODI/9d7NSzP1Q5tQwdQvst5zhno1Hez8UPWxyiI/gcy/tDZPCWc/mA6p
rdAh9YHxrOrW2d1+6NhgGRuXROpftE/C4zzy83eYjkYsGgT+G+aQHPaD4AYl
P09Sv75tOsyq/+SHkuGkzeZZNPR8sFnoNOmHPZbn9DWzaSiV/G95loA/TOWy
h0VI/VOPz1abXe2PeIM+1VlSLzebGbq9zvDHWdLs5JN6rPfq23B8gT/ESu/V
1peSehld7S9V7o8nAxU/BstoeHt6UfiWK/6wDbBl6VXQECX4Pr39lT+qH2y3
WU7qe3FPfv0ZnQAkVP2cjSP7A3OPlZHFugAciZlIeUH2Dx9ujpY3lgHYqRIb
bHiZBlW93R3S7gEQC3i3dcFVGm4Ur3+bkx6AHwkhL29eo+G119jiiMEA5BqV
9D9up0H5u/netWmB2Ord7KU1QvbLtTnh8nmBmLlyMLqb7JdBqb3RC0sC8Wrb
0ZcRZD89K+2bNHAhEPI6xcyb72lQsUo8sr8vEBmXbhSFfSX7w4mm200Ku5A2
05Nq9JcGrS2ay43u7EJGeVmevCAFgwaJm0acQSjwP7wuRYXCBUv3FW3Be3HI
rYb/7F4Kzfwi/xalh2DrCRnnnjoKYb6smD9ZIehotD//4AqFVTf//BjNC8Hi
zhOM21cp5DE+fLpWEoJhvmDH8/+Rfmbodr9vbQj6Mk/R4psoLL3KuNLQFwKR
HaVvuFopBHm+CPJUCIWzX+yxg92kX2lyeG+tHAp6n8iFiCcU+pbd9V6jEYr4
Wxl823oobHhY5ypgEIoa+2dF4r2k/9HNtrhiG4o+8W+LCvsptCxcL8/HCIVl
pdC+3UMUJP6rflHbEoqR/ZeuJXwh/YsAB+eCe6EIVWs23zFG3menyyqXjlBU
i5wc0P1KcuX8hYx5/aEIU7SU/viNwj6HUCHHsVBoeS4f2vCDwsBHw/UTYmHg
t9ld1vqbQpn04+rVe8OQJfPmLycPHfdDlB6lh4fhxesN483Eky1JEy+jw+Bq
8aMnipf057vWgJUUBr7IMq/3fHTMXi3u7z0ShgXLjNhNC+nw2OS3MLolDPM4
Y1I0FtMhmzQT2igWDt2TXbMbpOh41bCv+qd0OKo+HX3QR1zybea5hlw4livN
i9stTceynX9MTqqGo33xQH6ODB38+n9F8zeQ6183xd2n6Pg+9q9hT1A4zqsE
vudfQcf5FfFjp0LDMWuY8TmLeJfbrOybyHDoHRvvEib9+pt7s5muCeEQXiuh
L7KSjmeVHDvNC8Nxb9PmA1yKdNx05eSk3wyH0mXX3Mskhx84mLjG7U44pN42
hMqr0mFwl3P34fvh2KJirZZPXLeaq0fwaTjUan7qhqjRcUpkfvXvD+FYKBDP
ktCgI6dtgVXPkgiE2xY+09Wmw+ZvSpyweARSa/7ZFRLz6nBftpIh15fVlkwQ
J1ZwS91aFYFYyDXX6NARuZ9n7JxRBO6/ub5QgOSPnVp8ean+Efj9Ka/xkB4d
+hscWQFBEVj/wWzfc+KljsWxlqEROC2/SZfSp+NeqKq3wL4IXI8ZKT9FrHPR
QScnOwJLjqSuOWdAh/CtolUhhyKQkODX8Yn4Y9drKYcjEej6VuShaEhH+TfG
giXHIzCWnBxeQSygUdRbeCUCy2YMNqWspWN03ev7UY0RGCk4Xn+N+Ka9yg3n
GxHYF5Mp9p04Mvj6SYl7ERBqT2hzNqJj5PxIdNlABJjqvl2SxnQ0X1feEz9M
7t9qOM+K+EhHhKfHKHmf3z1KUcS2Y9xWst8iMOP/zb+D+D9VZclqLgYe/xhI
DSH57JBRhHAqLwOXOc7sLyTea9vMFSDIwCXSBl8jlttj/1lxOQNiLTwqnKDj
3/4jQ/xSDGRUYZ488TP2cM8nigE14d0dpsTZZ8ObzykxIJ3vuCmJOLCp6WK2
OgPhzWPzK4hNHy6oDtZhQCjD4GIz8fSnw9maxgyciD71bYK4Z2YocbEJA0lf
G5IE15P5KKAUNWHOwK6yTUIKxD7KTe5XHBgI6x3lcyJeZ7jAqXArA9VT3bGB
xBLWdhZR2xngSZF+fYD4h+vhtc4eDNDuNm04SNy5a0hD35eBSKGTR08Q18Qq
rpDYxcDhyu53dcTJGWHiM3sZEOhbrXqH2KBmPmdzNANLTPaXjhCLNtpOlh5g
oFHU5u5X4m/3Cj/GJTJgRFP9OEP8oP/VoHsqAw6+0lw8G+io/rDqCdgMmPFL
LllEnDAd2k4/yMCqVlkJCWI3vmvXOAsZ4LTUFJMlXiM+v/Z1EQNDdiaCisSL
FG0rW48x0Jm5ZVqN2EszxkS4ioFYl6UGOsR1+lUjLjUMHMgVMtEjXrDhcULl
BQaO/lu31JB4q9Vf6msdAzmhlefWEp9yVLyp38iAXL2usBHxtOsW9+QbDIiW
/tSbu27lnfCvo5WBld/7lQyIS3afKxW/z4BUwtCbNcRj4f1rfToZWNPF769F
vG7/goHzPQyUvXO/qEKcm6y5b7qfAbszr1tWEI+wd0iYviLzY/ZomTSxTkF6
Q/YbBhTbWeuXEqeUXnHu/8CAwrtzZ/mIe6uGf8l9ZUDEZMnQXzKeq84LHt77
g4Gu640vvhHHXtVf0zBNfr/xqWNz3+PBdd+nXLMMMKpeKT8hlmo/GGE3PxKq
z3yYt4n3djYvOcoXCY9Gw9Ja4pt9Hy69ForEpHpAYinxoiFRR7WlkbBfO6ae
Tlz3bU9ui0wkftXrvXEj5p4+qi4kHwnXseWfTIm3zWvrcFaMBGd4UqMy8e9F
MoJj2pHo99C4/JPMX2h3pItZRuLQcT3BfcR5hr9XedtFYhntsYsL8WsThbvn
NkfC8uW24DXELKc4bpOdkegr8/z5may3hwy1pD3hkWBFJAZbE8vEucr+Fx0J
7euMBRRxMIt1izMuElTwd58Jsp4XHx6cPZwWib+tvcxCYuf/svffLo1ES0SN
WgepFzU3GyUFT0TCU0VryVHimbujjdtORcKF88stL+KyfuPpz5cicTd4f9w4
qTdvfo8xlt+NxDy/PVFcxMFG9sFB45G4k3Ij6ROpf4Myph1uvyKxrvrx5Eli
Ow59Vds/kXhle2eHN7FKi+wnVe4oOC9/ztNH6ulHi0m/r+JRuNgT1XVRl6xf
p9KdYeuj8Ph2lsPq1WS9r85r9jKLgs/S74uHSb02WZ4qtdk6Cgs/HrifSSz7
POS59pYoVEu2SQ2S+v7K3XTrz4AobNxL4pMWHa67P9lG50bhxra3Kgx1Uq9t
hs4GFERheC3NT4RYT+2pgEtRFDhoCUdqyP6y/Pv1e/qVUSgRLfvwguw/PZF5
G2fqo6Ad5GuiRfYr+0R9o7hXUdid6MRzfhWpV0dTVZLVorEgd7byNdkvlcLd
1wxqR8N9ZoXDZmIRW13o6Ucj93l39y0aHQMc7zZ/NonG/E3hzsVkv40IMNvn
5BKNL4evRoPsz5W6C+7LJ0dDzZAzfPNyOub3Jvrf6Y/G4LTk2DGy33+84BpK
exWNbeG6Rp8E6OhK19oX8yYaji3NYauJS4xGslW/RuPcEPNQG+kXdKrWXy2Y
H4PTG0yvv+Am4xvBscBPPQYc/2m5dXPQ0bo47jh3SgzM1vQumZygYNi1v9E8
IwZhk+/T5IgvZe3rTsuJgeufx9ybxikc443hFCiKAdddNlVN+p3Yf+Fewhdi
cEHuwKgZ6Zc0PwbKivXHYKXkiaPbR0m/c2vLcUXVWJS93N71rI9CVIjqcZun
sdggNb3Uj/R7FaJL8jmF9yOvJf3Dnihy/dlVYznvA9gtaSVVpUahHEoJ4gEH
8GhETadMlfRbp0pbhPccAHNV0b3DpP+Uikm2+BN5AK+W1kaxlSjcFHd0fJpx
AKeusZX3K1Dg3/7FN/XSAYTOl7KIkiHP81Iu69O8ODRsbTL+KkShfePhzmHu
OFiZFKz9S/rbb+f4Fz8TiMNo/RahhcQmcd8LW0Xj8IIdoqciQOG9zI3yUsU4
LP5gOx7JQ97Xw7XO3iEOK/UanfU4KLSO5L64XB6H2byz22fekHynpqxysCoO
auLvxneSflwv9s7+vTVxMBF92do6TPrxRb+lFevicMRBXuXwIA358PYoa4/D
ioXG2duekXxQtvpt2lgcbEwHH1k9JHn6Y+dqv4k4SP2Nsem5T8Oz1btYJlNx
yOwUcvC4R/r/R2Ur/82LR76b6b/4Nhp0/vDsCheNR+HWFv/BmzTMd30+tmNt
PJ73cWyXJPnielXEOsP18WgpG7TvrKMh+rtQrphZPA5U1IuwSB75nGai+cQ+
HhwHzXn+kPzSU3823MI7Hk6e2w35z9JQKRo/pZURj2T+HPXLx2nY6SluKZIT
j8dXpNsLSB4SO3f56JdD8fikmxO4r5wGtul7g1Ol8bBzcnppT/JTRLjDAemL
8dgzNf1auogG08dynLzP4sHodI11yCP5T7Tir93LeChW+Rc4HqSh2kVmumCE
PP8NkZRtJL/xjIh9k/sSj1PCnuNBJN/5TnN/pc1jQiZre0hbBhn/4jtBLVxM
7Dw8UDyaTkOhUfJHP24mfg2mNfATtyXMGz0nwMQOa4f+nak0rOL/M2C4jIlL
C7wFdJNpwNlG11diTPSUjqyMIvnT2S7mWaIkE3sPF2+6RvJpet7kk3sUE1/2
6nXbk/z6UeL7/W3KTBSfLRg9TfIuZ/MFixlVJpZ+tbzCTyzpvretTIMJiYLy
6mCSj21OfLr1djUTu1JW/t5I8vQ55dH/wsGEv5XRCXmSt9seVa5ZbsLEoT9V
d6pJHh8M9q5r3MjEPrvDUqrEQnVDF+ZZMxHYpxRiNpfvtx5TrbJlQkhNMKQ/
ioZ1UzvOWGxiQn1H6JkQ4pC1L6pztjDx+/SSF2ciaUgbPCqv7Uyu/97XbU9c
znQ+3uvKxGRqo8AUg4bHrU9LpT2YqJUSttpC/NEvX/KWFxMH90s58hNz8m0+
6uNLxudhfEVLBMmLtl35Z3YxcUPgjbgJsdXX7MX2e5hYMHzJlI/Y+6Bt7ngw
Ga/w8MYn4XPnvwuFCsOYaK1fuP84cf7T+5n6DCYGjvlmMIjPRqXzvYxiIonm
O2pD3CpukcqMZcLDcjx3FfHANe4F8geYWF1cl8FL/HPHncT2eCYeRr978jmM
jA9HMsfuRCbe7G4OekqscHxDnFAKE8b/ArbcJjY2nffnYioTRQ1S2ZeJt47e
iNmSwUT9SoHlp4n3psX9mmIz4dTt9+04caqSEaMkhwktEy+JCuLyhzPj6/KY
WDRfo+AE8X97G0Ne5zOx8s0Czxpi9wM7OlwOM0Hb7l1aR8zN5lDpOsrE1caz
xXP3P190It2shIny1ujtPcRbTpu9aypjIs9g58AH4j/1H0y1K5jA4IQ0F3m/
yjb28dMnyHwO7aJRxNZP1TmoaiaOXckYBvH46+4dhaeYaAhq8PIlPjrOuLbw
DPn/zhPHs4gxT1w86RwTGww6KxqI3ws3RU5fYGKKer/zA3GOjHtP8CUmxLLi
+qXI91qjyqk1WseE5J1iESfiQcOqHLd68j48llw5xCoun6wsm5ioq4heLkLm
wxP/7FM3rjPBihTU3UocG6nJveYWk+z/24Tmzr/uHYq6JdvGxOk/akPGZL6F
HJegHb3LRFll57NDxGIXm/cLP2Cif1g+5fPc+WcHl96fTiYOTPFMnCLzV/Bl
dUFYNxM2UXkXF5L5XvfJcuJ9D1mv3L3SEcRcfLnnn/YzIXI8YdqWrI9yE6kV
F16T+/nrH1LdR4O5443EFaNkvASECs4Tj3l4DRW/J/Ofo0FXm6w/o7hTxWlf
mPjH77PNnKzP5//pLPb6xUTs5KO2ongaEtr7gp9NM+Gzd2mhHpPUi97YR3Z/
mDje/vRnP3HUxM00w3kJ0FHS2bmS1IelarazSwUSsEpwPvszqSfX1n5zyxRM
wDPNmeLqFBq8rA81zhNJwLbU6lU+LBouBvQzxpYmQItr9NwHUo/sTvh+bpdJ
wCjPDhmZTFJvxOL6Y7USUDzYP0+J1MegE3kLFVYnYH7SzHO1Q+T/q51c91g3
Ae0X/ubr5pP7m3ZVrTQi978tWeRUSENZsGxYj3kC7pzi2dtE6u2ltjZ+tR0J
aGtXsF5XSdafwwujfvcEHHSJXMasIu8z8DUk2SsBnYyE6NZqGtaOi/U9909A
TZjGl22naWiX3n0iNSwB8QrFPKfPk/UYIbx2ODUBLRuaN39tIPvLrFwwOyMB
KeHrRf2v0VCRoXdcN4vcb3bf8pEm8n3LPXmz8xLgyljbPnyDhu8PLvcYlCbg
Yt9lbR6yf3HLOe/Jv5SAa6fWLH3bTYPG4/Iy85cJOJJsLXR7jIYXj+46j75K
QFwouzbrGw2s+98Wp4yQ8TQ+Xr99nDxPC1Jvv0vAjuS8F/9+knp3dSjYaDwB
i8bWPfL4S8NQMbVemycRKe8zvppxU8j1K38to5kIg+ECc41lpB+YObZqMjkR
B9M8KzboUQiyajzjRk9C9DK9io37KDSf1M6cup+EUxnrDh+7SeH2dMHz0EdJ
kA1aZnzwFoU26ynFT51JqD/w0yTxNoWOr013X/YkYWzxU3+vVgqDumbcLYNJ
yNZ0/iJxlwLHXeeErPEkBHy4NLK7k4Lp+wNRshLJqLR4V5vykoKFwVBbsVQy
nCy5/noMUrBhb1gmSkvG2eK3yYavKGzR4LnCI58M5jF+07EhCn7RueOfVZPh
/Y/H3+oNhVTeE3vq1yfDQXnXvoGPpJ9addfbJjAZx2oGpjx/USj8bGTQsDsZ
rBpJC9oUBe/ayyIKe5OxUz/51gviP7rHmmfDyM/nOGk4/qagbh65/PL+ZPDW
//ms85dCvq/8A/HcZCx/eMP1MScdO48ztd5dTQZ3cyyHlyDpj/0meZ0akjGQ
rRrOJUTHL8WgVzevJSPhvfK/E8S5F7exi24mY124w/YRYTpabqqN2t5PBqe+
toLTYpL3Xg0crXuZDC/xz6UCpD/+Lqk/L3F+CtgXf6Od9NdT26lzcjwpqEl6
KbGV9N8cJTwud/hSoFKn/nSuPxeR6q3lFU4Bf86JDzN0OjSkwj1yxFPQ2WaR
KiNPR4jUuRslain4fiJzvSrp76Pd8ncba6bgnkjaz9PEzJJ9y4e0U5D/ViZ5
hSJ5XimrYDn9FEg9f60urkQn++Q7mRqTFBRHmDSMK9PxVYoeV++cgrD8LfZ7
Sd6YdONVctmeAuNlLWnPiP+VfH36e0cKnkevOrJegw4h6euqxt4pGPEe1hXR
pENNevvL1j0paA7QjzhG8sxe6YK13YkpmFxWVpNC8lHkjv3vw1NScLv8k8JL
4rhS73zRtBSIqeUztNfQkS2t9dk5KwXHeLTTB4jPS3cWvzqcgroTm5Ipkr++
SPPNfD6bArWeR+XBBnQk3+9heV5IgfOFd2UXiCWiyhf3XkzBcseF+WPEFl26
SjeupsAr/a9XoCHJK4l+LgdvpqDqj06uI8mDhupabxe0pOCdg6tJBnH3i78h
sXdS8Kry6OebxByrC9K875PnG+OgK5N8uf1dS/3qnhQ8sNcXniAeP5RjUtOb
gsLQGyGyJK+mYXunTD+5/6Xa9k3EV4+Oj/IMpsB36sCWmrl8a0Nf9vwd+b6x
vmObSP49PfW5wu5jCi6Gjk5FEaPqP9WWzynQdV0xVTp3fvXPfuPZ7ykIPFjR
M0p8rzYuIm4mBccbleYHkbztscOKY+Iv+b4m4pcziCf5lrH9OVio5Ny29RSx
vPe5E5sWsPBsMjVmiPiacIz6HR4Wnou6T/8mdmwyvabPz0Kdse2epST/M0UH
umWFWahJWKM5dz6w/PbJnYcXkd+XIprgOnd+tTf8o8BSFhrOPGkNJh5o5+f8
KcYC57FnKw8Th0f0ZgVKshDVvsT8NDE//bj4oDQLCkuWuTYS68bqa7bLsgDK
aXs/cYfCgmbDFSxcepdg+W7uPOxJl0XtShZ2D7oq/yCeiS/pkVdiIYTnGQfH
BjryVAI8jqqwcNt3/B4/sWK/9mdBdRb8/hxnzZ2/3EyZjUrUZMG9Y2TN3PnM
Nq0HXL+0WagdrHkuP3feM1iYs3sNCzs0foQqz53XZHpJDumxENBW/0eDWEpP
7aSTIQseqt9iVxNffjOtdc+IheGVFZ/nzqOsDt65bgQWvKMeOMydRw0bHbS6
tIGFt9/21sydN0V/dOtV2EiuB2ZOzlno8CqvYnMWBq5Qa+ZcZfLji7AVC3Zn
1ALnzqOigzTtG2xYEGlfaaY79/sL9tZ62bNwqDb73dx5lNT1M4sWOrIgpOlt
qzr3/KPvw644sXB1UVWUwtz7Civ07NzGwk1JJz+ZufHR817N60ruLxYiLkrs
41leeNGNhaddU7lz47Um4+UvV3cWrIXGHv4j48t7WcJlvhcLKokOj74TP3+x
rfGcD3meL+p5r4nPzi+Q3ObPwq3BPMke4njV7v0cu1hI/pgY2ELsuFV48HQQ
C6UnePdfJJaPt1m3OZgF+1KVzWXEd7va5lVHkPc5FmofQVw0zeVtH8XCmY4T
ETuIg2TXt07FsLA3s3Dnxrnzq4hrLOt4FubPvGIuIn5TMvXuRwILO3vMG+bO
o67eWW1ZlsxCeFre1WfErstrBb6ns6DW93u2iFgFX4KK2Cy4aBvbxM6d7wYo
dZjksFBUXrnDmfhEY2VuYT4LW8Vku0SIP+84Krr2GAvBXk9+hpH1dZ3VG/m2
ggVeVbk9FsS5F5Y8y65k4cSAfI0U8ep52UXDp1noc0ph3CLrOa4ykZZax4Lo
rbHNf0g92PToBlOjnoVPCYtn2ollJ/8M9zew0HS3KiCPuM08qlLlBhnPrxmH
5YiFP+1W7L7Hwq4+d3NdUm9GlpzO2PeQBfU/wiumSb2qWzv6Sb6TRfKp8P0G
Yudsj/NRPSzUc+zdpTt3Hq+5RVv6FQtrarN55Um904o2Ngr4wYLjNt6Xt3Xp
OCToEfdmkoXyRUsvRRL/OJ5ww2Oahdd1GdGKxFcfta53+Ufm9wPz55mk3hrK
WZtZ8abCRaf5pwmpz6Yd2+xVpFLhbch9KYHU8yrvmNxTMqmo/etwUV5r7jyx
6LE8PRV6L89WtpH6f1ducLO0Qire/XUJ4CG2jfFxFtJIharyqcD9ZP/YKh/q
+c0kFSNHzJN1VOiob8g7HmSWiqJZwcE2sv+I2de9fm+RijcKDurOxM9jfvkO
26YiQX5nQxTZr9w7D+zq3pYK7UL18BqyvwXEZoTX7U7FmUH/xkGyH+7rOpES
fSgV97m4KpPnzqf6ntm+L0jFpZnT5tOSpN4MCi5zPpKKB6bRk0HEsl+iqnVL
U6EkLhblIEGen8+mfbI6FRHz9YWFxehYavKDl9GYituXK767LSHr4YopO3Q4
FbyfHgSa8dHR2xTjNPyaPI+1sFEpLx2zLeelHEZTcaLBVnGCh6yPbrFzGp9S
cUBhyq6Em+z3Y58fff2Rilze04Ovucj4rioQ3subhkbN02yLfxReFr3N26We
hquLlZ2CxilskGFrCGulQUiw81LhdwrVFVodl3XSMDX9Q+zmNwohp+L5/uqn
oWG8bVb4K4X5V8WZOaZpiHdM2Vz5iYLyY9s9dS5p8HTfN3GM9FMxPFfN/yWl
wdsgIOvjUwqiEaw/B5+lQUZJ3X3JVQp8oRvcQyPTIToyGxsaQaF7/w4ZFj0D
5dOPBrcrk/7Ldc/UCvkMNPsq7jNXonBL70D3HYUMJARfOKetSKH2RwlrgUoG
zq8YHRZcSSE7aGAseU0GZo6dfnVPloK12/YbSdYZYN+unfaSoNBq6OKRwMiA
nzpLXIOfQpN4oAE9OgOl53prdPgoXP4VvfRWbAZKflzRM+ClcPzykbsczAyc
ch3bakH6X6byMw1mRga4f72ZDOGksFZy27z4YxnQWa0h+YX0z1d+Ox3ffy8D
lffezevuJ3lgo6Xb1wcZmLiZSTN5RsPtHKNlXh0ZWJH8tOJqLw0d8goZ5k8y
oF67+l3lE5I37X6FLn6ZAU3lZdNlj2iQOnF0/alvGVgvs9BZ8DYNx79kzUhM
ZMBTVP1H9U0aFPUSr2T9zICKht06E5IP1jzapRj+OwPykP6RRPLDpl+Gi4zn
Z2K6Z+NmhXoakq0Hh54sz4Tmb5eG8bM08Bd2F5lJZGJ3b4x9wxkaDg61OTVI
ZSKl8cyzxBqShxgX7pbRM9EesK1H5hTJ78eYtYHKmTjIaT0ce4KGzxOyzFnj
TMgXZV9sI3kpzHi5Qdj6TOTz6FhfP0rDdJrAjzcmmWj9rbm04QjJKzI//O9b
ZILWFbXhP5K3KIs79gWOmfBbkhv2kuS1zSX+NGW/TLjxvXx9h+S5pd6PzncH
ZCJJq9lyKIOGXkVt49jdmQiZSq/5l06Da/0/t3shmbi8WDjIPI3kxe6CIv99
mZD702bJR/Kj/NEZReG4TCTyJoyazP19lbtnw1VmJiwvMI4kJtEQ+EXl2QJW
JsTY5ywWkjwawtsqWpmbieqpXVoOJM9qdSpWWR/KhPrAz86zcTT8KMjRmSjI
hLCIVNFC4ii57Zs3FGeCZ/XF5mckH+t9vDnyoTQT+uwXknPnVb9rFcIOlmdi
cnZ57RWSp+OMx3OHqjJhzmecfCKWBixwptJOZeLH/Nd3KWLOh80X1M9kwvOD
iO1xks9ZLukdcbWZCBhxlr5E8ntWBLVQ+lomeFNGBReQvG9nyCpubSbjb3gy
qTKSBhHOz0pBNzPBWXfVzII4P6fe8tqdTEwVDzeWMGjYulW63+su+fmRhcG2
xGLSSQH8DzLRcaQ6kpO4pMYu1aWLvK+mHismgoadoXXL5j3JxNW3HrmGxJSe
RPWpp5lgLfYYn0c88i9+9aZnmRDxHjr7MJyGE3fetv56Tr53IvtmMbEP29rp
2MtMLJEWVgsmVth88bXZUCb2vlw8aTZ3viK+PHxsJBOmwRvE5YhrhvZzFr4l
zxdncWTuPCfo5MhBo/eZULzSGf4+jAa1vRb0tx8zIX4z8exj4m8652vZXzLx
j2OhyQ3iizNLoPONjLf6C92LxGG3YzpfjJPx8BrKOEmsk/5qZ9LPTBjzzhjO
nVdN2m8cU5rKxN1D/NZz51X/LTtzoPt3Jq4xxuoriWNfigjG/s2EDo2VeJZ4
bWVkCZ2DDYd5F2v+I/63a0D5Hicball2GveIb2puuBaygI132sZLBokTp05a
ifGysWSLx+ZfxKY3BJ/f4Gcj9HPSt6Xk/bhZ4YH+gmz8+zn+YQ1xu03/lJAI
G3blfcY7iMWYcgHpi9mAt9ZkMnHA5T19XKJsMBw9o2uJG0brzeKWs9EecrX1
FTG/BOfVKXE2BG8lPV9Mvo+rrc2KcCk25MwkGyzn/j6LWZj/RYaNIc5O92Ri
m3dK4SNybHw/+5hzAfn+pRKMETcFNiREov9aEY/Z3nDoW8WGeHllUz5xTt1m
jYeq5P3XZCRpk/k19K70mJkGG146N9PSiDUk3wvd0mLjr12k7TBxd8L+L1d0
2Ui+5yZSRuar3JU2Nw0DNizp/As5yXyOeC/ysGYtG9YpmrcDiUXtq2qOrWej
9jnD2XTu7wulOvzTrdnYb2Q6s4Ksn9P2Yn1cdmzkaFaVnCT+nehlFreJjHdi
9UcVst6KP0zKh28h42OBlA0HaBi8Shtxc2djSrIp/ihZz+ofAx36PNlwF+Pb
NHc+xZSuu+ngw0bsIZum58T0ZItjZoFsPHll5q5E6oGPQ6ibRjj5vmPT7B+k
flxJvvaghsGGyIvO3xdIfeH+b4Hhimg23g6s+r6XRcNJmSJxiQNsvNCe2P0r
lYaPn273cqWyIXC921KL1DNDmqBZXDobx4ZrzvCxaWA7brsylckGr4l8/Bti
1YZPh77ksmGmaxNcmU3qEWupQ18RG9vl1orbkvo4Sfk9qDlPvo/x2tPGpN4K
t7XcErvIhqHNfhuzYhpW7ab/x7rMxmUTcQGHEvL9rwxUev3Hxi/TjQ+Dy2i4
Ybk5TuI2Gwa/fGYeH6chLQyaGU/ZGNlzq28F2Q8kWiUOB/5h48IKz19fyf6i
HRid1fePDaUa+arNZP+xEepN2jgvC/PdNL82tJB65nwwhM6dhWxKyiy7jYbX
n3ms+oWzwCXxjbnlIQ1nRX/+sZDLwpHzMTquZP9b59/ptcoqCy51Bs2S46Q+
pZWpPbDJgmHfSMXYBKkHp/f83mOfBaPlqu9ayH6a+1kg77JTFpb7HollTJN6
E2pxy9g9C+8c7fhiOSiw9t+ibYnIwnYhz3oVsl93HLw8kFCWhe+iAW+sxSjs
bDq89cU4eT7dZe+bDCjord5nYpabjT4zKw6DOAq9+zYoLTiUjWZVmXl+8RQY
t/kWtRZk48qL7qaDTAqX7I8Mri/OxvyW2y7vEymo7LoSY1Sdjb+flw8fTKVA
Hft6QacpG0snpD48ySX9DJ+PlNz7bKgUb3nIeYLCKXtlrpGP2XCV5XCgV1Iw
Kxz/UP4lG543Ek3WVVFIlkuol5nIxslTewNjTlL4Z1TmKPEvG9x7uONHz1AY
D3uWtmhpDgTeBvMer6OQ23AsuGtZDnyMx8KvXqGgzuG/NUc8B2V8dNX7pJ8K
yvopJ0jLQZSBeMLX/yiMnlx8g1cpB+UDO/ZpNpP7jfVXtavkoN+ohMJ1CnKr
K9gs9RwEP5icb3eDgsdtddf5q3MQseBLkv8t8jy8v9Cim4O1fyQkw29TKLW/
vjLRIAcFivEfD7SQ/qcwRWi9EfGbgG+prRSeD9j8nF2Xg83JK5UP3qHwP1YU
U58=
       "]]},
     Annotation[#, "Charting`Private`Tag$14096#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"Time (days)\"", TraditionalForm], 
    FormBox["\"Number\"", TraditionalForm]},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 999.9999795918368}, {0., 9.413313154246941}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.7931473082687817`*^9},
 CellLabel->"Out[5]=",ImageCache->GraphicsData["CompressedBitmap", "\<\
eJztnG2MXNdZx2/23plde9fOJqb2xm6SLSHONq9bCIkbksYhL90mTbKEgg0C
aqvCbJAQq1IJf6q9IuCoRDiqCtsPXW2QKjkfKm0+NHalVmylfFhBBaMoQovU
DwMKZYQitKmiyqBSHeb3nPOc+9y32R3XKQJV8ozvnPu8/J/X8zKz9+mTn1v4
3T84+bnnP3Ny+uOfPbm48Pxn/mj6iT/8bH8ovSZJrllIkuTvphOuXf8yvLn+
P/c8b4wMd31U/kuTzsqp5NQp/xqR93aydLEnd/N7S8nFnhuRwaw8PCPDY4nr
rETOnXMfDsO9i0sRR19KA/VAIa3+ey+5uJQbtNJxyXCSfi64xUtaSTpuWAkN
w79UdLsiBWEqYxPiwFNLF5MeDtz++jZhu7bo9+FEJN7c6/3YSifGjmgAbUh5
twZxsOep0ElWTnlPDinuFhGwvxCMK7Gy4foBH5J9PiSOYKn9d8r7pA9iyS91
hjWMazbZ5PZFtkfIhxQXwxXDYxxyBfJsuKKVvYvJ0jYwGsabwjWslQ3jNlwS
rbtMASj8omdyHE3jsQBKWar6h5Sn4uryBvIhxfm+dp23kPzRJL4CSwdFZxg5
DeMDiulued9bcMLQWXqdz0wcUArPFRfQykosSps+V1BAEZo2mCsT9yEZmPJu
vdj5SRRSKVS3N8wH5PMVzAeHQxvV/L3CaapplrpCVLdacT/+NPKzIu5AXqSn
8ohdJRXJtiEbT8prH9srSmuRphWNruSKefPjrOT60RpumXTbUNTbLuLyWria
i7i6MMj7EVXc7wfaI8cTuwbw/m8rXeeifObTNdvIvj8a1Y/zijdqj9Gn/adl
jV/xY9vJvrHRYXsLY6InFmCxOcVi9Ndp2EsUlim5iJHQ1K2Dl5a8d/wSJB9f
WbEzDmiWotfg9yuqzGiX+z9Ro/2cNCqD+6pL8gK7R18ssnw8zskrXobfHbQq
cwxqg4mSBg4Lb+RtV6Nhe4Y2DCSZ+HdXoSWUVw56nRdOwRofor2xAHJ1JTj5
DjA6r389IJTjNWO7/5foforFtKSdVFWcKRkvtI98XtdekRbyzY8dGlBppk9U
8rw6rrILedsr7gF+moX/Z7AMlYX9Rrti+k6ckooLKN/C0kIXHFFQzPelhaku
BVdW6marsZipdt6MGdlZGX5S+4WasXt3SLfTsTq/ToWxzko+faRxLDd+r+UN
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
AJL4mQ8=\
\>"],ExpressionUUID->"9df23a78-53e0-4cf0-85bf-cb77751b4808"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"pc", "[", "t", "]"}], "/", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"pu", "[", "t", "]"}], "+", 
          RowBox[{"pua", "[", "t", "]"}], "+", 
          RowBox[{"pc", "[", "t", "]"}], "+", 
          RowBox[{"pca", "[", "t", "]"}]}], " ", " ", ")"}]}], ",", " ", 
       RowBox[{
        RowBox[{"pca", "[", "t", "]"}], "/", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"pu", "[", "t", "]"}], "+", 
          RowBox[{"pua", "[", "t", "]"}], "+", 
          RowBox[{"pc", "[", "t", "]"}], "+", 
          RowBox[{"pca", "[", "t", "]"}]}], "  ", ")"}]}], ",", " ", 
       RowBox[{
        RowBox[{"epsilon", "[", "t", "]"}], "/.", "param"}]}], "  ", "}"}], "/.",
      "\[InvisibleSpace]", "sol1"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "1000"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "Automatic"}], ",", " ", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Blue", ",", "Red", ",", "Purple"}], "}"}]}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", " ", 
    RowBox[{"{", 
     RowBox[{"\"\<Time (days)\>\"", ",", " ", "\"\<Number\>\""}], "}"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.793152294097542*^9, 3.7931523723336873`*^9}},
 CellLabel->"In[6]:=",ExpressionUUID->"61230ccf-2c6b-4a4d-a144-6f9caab89e36"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0, 0, 1], AbsoluteThickness[1.6], Opacity[1.], 
      LineBox[CompressedData["
1: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

       "]]},
     Annotation[#, "Charting`Private`Tag$14802#1"]& ], 
    TagBox[
     {RGBColor[1, 0, 0], AbsoluteThickness[1.6], Opacity[1.], 
      LineBox[CompressedData["
1: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
       "]]},
     Annotation[#, "Charting`Private`Tag$14802#1"]& ], 
    TagBox[
     {RGBColor[0.5, 0, 0.5], AbsoluteThickness[1.6], Opacity[1.], 
      LineBox[CompressedData["
1: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
mq9Z/9am4uA69bvvSF7tefDuaV0qJhMfPW6Q/jHg1rY016diiOpTlXwxMj7O
TrDeb6DilaViUgmkP/22XoTsTVSUf3nTMJb0f+LHoGatzVQ80nomkbaCgCua
H5hRSMVl2zxin0qQ9ntSbbjKgopFj3arLyX1NXTIt65xKxXVt77/uV+SgKV1
b65xb6dirXz92FpSn6p7K7TP2VNx609h3hpSv/DT/ZL1DiqO39HUNZAj7bOl
v6ZgDxVLzTLrqQoEZA2VKus7U3F/1wN+UCKgkupc1etKRYfvH9yWqBDwrP1F
uawXOZ+yneBrNQL07J8euxRCRYOQsjG99QTYfslf7hhGRXeNhKlwfQJ8j9gX
Th+iYm/hn96WDWQ+evGQYRRNxZMXdm3JMSZg1r0j7V4KFTWuXL83ZEmunyuD
60AaFSlpwrtPbSPXX2WevJRG2p8RVhxoS8DeD61xe3LI+VSytdftIIB5sDH8
7TFSj+ywL3FuBHgmuXe6nKBicWrneIInAfy5XFpPS6kYk3EqhOFDwJ4LVh/v
nKaiSFz/m+4gAqbfdrsXn6fiJe51i3hjCNBymbC1uUO+/0CBGC0i4Hlg/vnW
FipKFhasaSwm83PMen5DFhW37bhbc/okAQ+OHmYp3qWi3/DT7/lVBAR08m5a
6KJizbqPbSK3SPtZyKhce0tF7Wf6+w71ErBtV2uaygdSX6UUGYl+Aqa8fN6c
GqNi6NqmtHvDBJgknz+VNUlFQ8YN0V2fCHjNNFju84OKmVLl+n8WCBDXsf8n
LpKKs64Sp86qMiFbMvlVvF4qcnN5C31OY0Lo2aLFqhtScbzaS6gkmwkOOrXw
bGMqtpwe899ZyARxy6fn1pqkooux06+JcvL8O6QY2bMtFTXDL0y3NDDh5t27
wjruqTjBp/6ic4YJAxTRLSOZqciR1PVWjWiAln9Kh3JzUlGs4tA1z7gGOJOz
qWpjXipKWfE6Vac2QEClt2B+USq2zRxzdixqgG+PbvUYl6ei2UnJPRp1DcCv
5Bx27GYqJgzn/X473wC6zypPbxtMxVuuHk5vchuh/8l95w/Dqfj5nfpR/eJG
oD/8upw2moqqy/+FFVQ0wgAHM9kfU/FXauMFr5uNkHX7zSGT6VR0i7VeEdjX
CG9OyZvpC6ThZsJo67RKExQGVL6VW5+GChqnGVF3m+Dr7wq1uYw0bBZLmEyW
bIZQ28ZLbgrpOJn4vMHrYiuMrNu0mlc5HXfXrxSk1rfCXonbORdU0zGw7KFx
eVsrmL25ETynmY5R+o+mnva2wsqYC2sLDdNxVLkkKY+7DdrOlJzlbE9HAdee
9CLtNhCfjzmlEZOOWqUN1w0z2qC5Vp/x82E6Rq8/aBukzgL2/PHXEU/S8brB
8wo+HRbc3f5TfaIrHZ3FVh6r0GNB55c79wd70rE2c8nGB5tZMLTRip8zlI7t
Tivipu1ZwHXfOTVvOh1FOOXHj0ewwHIs6bCidAYG77k2/K6eBdbGb+6eksnA
9zOP+PgbWWCXa75SYk0GDl24f1exhQV7dAXqBZQz8FTs0C+HuywIiC2c/qyd
gVy11/ZF9LIgU/BsGGGWgaxm8H45y4KHavd97YIzcInAqQNzumwo/mxi3HAg
AwvqtoodMGCD7/VbYqoHM3DXJYszrzeyYWFjRfO/yAy81tx06KIpG9Zti1l1
KzED/U9qSSy2Y8Mxf+VHUoUZOPl90Z5ufzZ4qZ88Qy/KQOta+5npIDZoT4rG
zhzLQO0VGvJLQ9lwl/Jb+UlpBt6nJIgaRLJhPr07mXo2A80Nbl4ySWaDRxVV
7+PtDNzZkW5gcZwNGgFzgk4NGbg25eAm4RI2/FAPHW5rysCzN0djHp1kQ+GN
fbkn2zJwJvJewZZKNnDadD7YP8zA6OCAi30X2aA2PFBaN0juTyAu9HsLG75X
7QpXeJOBY/WvR9xYbGAF3LfKH81AopvfupWsj1ynbs0EfszATT2cFxH32ZD7
J8d+9bcMnDZxTst7xoZvq4240xbRkPZQrvLUKBt+7pe/oiRAQxtq5J/H79jA
VSbg0iFEw3ULfZNzH9ggJtN7XVCUhsZfmqMNJtigKxPlVSBFQ7ftUTV7Ztiw
yc118XoZGt5rTZDfTtaDWGbG7JajkefZlLARWS/ukBETW6lMw08GU/J/f7Eh
XOZKa5kODc9ZM99q8XAg1u3YAdP1NPwTIxb1npcD1LKEVW/0afhEVNmpmKxX
C2VsDykZ0XDQaN+fN4IcuC7zUe6iBQ3vZ4XmSolygOnW+XC7FQ2zna/aHCPr
4bay+phJaxri/CJTAbJefiqT0anrQMM9q5+3vhDnwBcZhWTCmYYZdY294tIc
mHMT1HDZT8PD6T9/7SDr8b9lX178cqdh/vYmoJH1+lLZFm1TXxoyrVjyvXIc
WOl+7tWwPw1HalWZ02s4IFeeS0sNomFJ0J4AAbL+15HdP9geRsMyWeG/kkoc
MHQ3zw4Ip+HnzRvfSihzwLRcfYNgFA2/rkzsFVbhgIPsz9ztsTSsGtg1PKDK
gYOyx7d0p9HQ2ZHfSkGDAzHuiWNRNBq2GjoEDpGcXO57TCKLhrEfQ7OOanIg
X1bvs3MeDfmE7Nvfa3Gg2F2q5FcBDc1btg2kaXPgdDmXZVkR+f4jxtQqHQ5c
le06NXyC9P+z1X/U13HgtvvtbaknSXt+WvujhuSW8vIZxXIaHi3/82G1Lgfu
DmZUtFfQsMig9lEWyZ2yodsDqmjoOQjVkyT3uu/+IXCOhgevzRyyXc+BoXLj
sxdqyfVe/qddQfKHQQXH7RdpmMq5MThB8qSs0O/Pl0nuCkrW1eNAxsMeuvc1
Uh9psWbBJEsfrlzee4OGupMd/06SfEMp9LRtHQ1DxeaYHSRbP92o0XqbhkJ3
G0M/kTycyHtbv4GGTq3d0vz/98PUu8zON9HwO02Is5rkJb0nn8i00HB74kZ/
DZKr0wJcjrSR6xs04/6/37Z5nd57Pg4NP7RIn/ifu/v/hMd3kPpcwlLVIjk4
68HC1D0a6h/B63Ikc204nuX7kIYLn27oC5N8YsRLvO8xDROOGN+YItejk69V
addFw+lXi9Ufk9xu/FOT9YyGolOBp6pI3v+RQ2zooWHc0xOCkSRPHy2wuNhL
w637Z8ONSc4ibz5yr2i4Az70/CbttWZSdf/Rfhrm8A4a3Cb5dun0B4EhGiou
cjkS/H//zaolMvENDcsjPoxLkPxuOvvv11EavnSUM28i/bPcTmHl64+kPTLX
f/5K+vfCz89nHMZpOPUvGVNJxnNMbc5nMt4V9x8X/r//9tdx6+VvNJSN17UU
JPXCd2n1M/nvNJw14KlMJPVUtu+j2/E5Um9nVnCNk3p7cD2ZkvybnG+t/rNr
pB693G25Zv7Q8NnPFEtBkueEVuYGctFx39vsNhdSv8q+V87u4KOj78Whlx/V
ONAkGreuQ4CO8Vqd0cok77pj2WQkTMeQpe0KrmvJfCAx0K0oSscVS0suXCfj
ZRW71uPEMjruj6JmPSPj6erBqHERcTouZacnTJDxNnBPmGdWko5rFiVUCyty
YGO80fp7inQMl3fUn5Ml9avK17xZhY5usq/eDpPx7ff8qfX1tXS8zM1PsMn4
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
ePvJpSMFZiz4D8BPm1c=
       "]]},
     Annotation[#, "Charting`Private`Tag$14802#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"Time (days)\"", TraditionalForm], 
    FormBox["\"Number\"", TraditionalForm]},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 999.9999795918368}, {0., 0.40927448496725827`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.793152373168562*^9},
 CellLabel->"Out[6]=",ExpressionUUID->"f96f3b29-7298-4c98-a706-87eacef1dbbd"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"be", "[", "t", "]"}], " ", "}"}], "/.", "\[InvisibleSpace]", 
     "sol1"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "1000"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "1000"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1000", ",", "7000"}], "}"}]}], "}"}]}], ",", " ", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", "Magenta", "}"}]}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", " ", 
    RowBox[{"{", 
     RowBox[{"\"\<Time (days)\>\"", ",", " ", "\"\<Number\>\""}], "}"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.793152632159461*^9, 3.7931526722161827`*^9}},
 CellLabel->"In[8]:=",ExpressionUUID->"93ef4fcc-fab7-41f1-8d09-396d21fa5c13"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[1, 0, 1], AbsoluteThickness[1.6], Opacity[1.], 
      LineBox[CompressedData["
1:eJwd2nk8VO8XB3BLiiSpZAlZSrak7AnHkn3J0kIiOyHrWIuxzNgGEVpQ2iRS
CvciKZSlBUlCSJJvRUSWlPI7fn/1er9mzNx753nOcz7nlZiLv7U7CxMTky8r
E9PKv+MzS2YGHnNa38I6D/RCBgTdjFDUv/pGOzm+XDLCvRDCOb97CFz9pP0t
tSV/6W8RqOoLV54N/K79cvxM8upjdyCqvohp1dWf2rYiW5TfOJRDf7/WLe3k
X9o31sYW+e14APsWesyjAv9qm29tsGfJq4BXyaqR7+WY4W7TuJXbq0r4ez7e
fLGQFUL4rEXM26pArqhDlI93NexyGixdvECAQ+XWWaVkdqjRmv52S58ERqNn
i/XftWD8iXj9p4uEus6KSwGBXCDcE8x50LgaJoaW/dI/c0Ot46L6Qmk1pM/f
FO2R44GG9W+T/P9VQ9Ff07WfPTZC35v7rxl6NVC/aubnz8JNcP5NQ8vFMzXQ
w3lhkOX9ZuA2fbsYdLcGJjdqtfDwboGog97G+e9qYLXgaLmoJR+ozlWwWv+u
ARGxlEu7k/nBuuPpnvN8taAipZCg1SQAvkX8/KBQCxa7e/zM/wrC63KhtD/6
teChcvqIg6oQwHqnzfaHa+GMpriOT6AwcLSmprxxq4Vs/VaZyFIRUCQqG14E
1MId01Obkz9vA6ujacdzI2vBRXrt8osMUfD+eu1BRFwtTMoNBr+RE4PPTE7a
95NqIVKh/Et/mxiMJW49759WC6uV4o+PeIhDrtzBxQ9nayFL9XDXV1YJ8Oav
L9x5rhZENKQNpwslgElWtMojuxZKtJYe/tLcDlJcaVo1aBXdDgWm99shSDem
ThXdeODazTXhO4Cbc6ZiIQvvz5giyM0rCWOuU+rrMmuh38woY8sDSYgIddSi
p+P9Hty6SsRyJwwGUgZCUmthxmYyfMfETqjMvFH0ObEWoo80fJdLloLrCVGv
R+NrYe2xbBclSWlw4hFwPxNTC7mOnu80mqTh+Xsvpxq8/7vuXA0mf2XAxe+q
sDY+n33ew8rWl2ThP5HgRxdO1kKzb0WJnaocPPi0UFSFz3Mw2C7bK3AXBLX8
AeujteAVJscRsF4eDt5y3DFoVQuzkctnwkrlodJSu1vHtBbWxd30pH/eDZnm
z7xKNPH5tIYLd8ntgV6LB8suYni/PU9/TBUqgpruIZsfYzUQ8+G43fp5RZg7
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
       "]]},
     Annotation[#, "Charting`Private`Tag$16163#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"Time (days)\"", TraditionalForm], 
    FormBox["\"Number\"", TraditionalForm]},
  AxesOrigin->{0, 1000},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 1000}, {1000, 7000}},
  PlotRangeClipping->True,
  PlotRangePadding->{{0, 0}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.7931526476838007`*^9, 3.793152672914315*^9}},
 CellLabel->"Out[8]=",ExpressionUUID->"2777defb-9445-453c-9b36-255271cd6f48"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Figure 6 ", "Subsection",
 CellChangeTimes->{{3.7931438840877943`*^9, 3.793143905443008*^9}, {
  3.7931439491836214`*^9, 3.793143954536168*^9}, {3.793152697697586*^9, 
  3.7931527123035192`*^9}},ExpressionUUID->"6ef9abae-3735-4baf-aeb1-\
273d82d89216"],

Cell[BoxData[
 RowBox[{
  RowBox[{"param2", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"e0", "\[Rule]", " ", "0.12"}], ",", " ", 
     RowBox[{"e1", "\[Rule]", " ", "0.25"}], ",", " ", 
     RowBox[{"thu", "\[Rule]", " ", "0.62"}], ",", " ", 
     RowBox[{"thua", "\[Rule]", " ", "0.38"}], ",", " ", 
     RowBox[{"thc", "\[Rule]", " ", "0."}], ",", " ", 
     RowBox[{"thca", "\[Rule]", " ", "0."}], ",", " ", 
     RowBox[{"gu", "\[Rule]", " ", "0.2"}], ",", 
     RowBox[{"gua", "\[Rule]", " ", "0.2"}], ",", " ", 
     RowBox[{"gc", "\[Rule]", " ", "0.06"}], ",", " ", 
     RowBox[{"gca", "\[Rule]", " ", "0.055"}], ",", " ", 
     RowBox[{"gb", "\[Rule]", " ", "0.7"}], ",", " ", 
     RowBox[{"ap", "\[Rule]", " ", "0.0435"}], ",", " ", 
     RowBox[{"bp", "\[Rule]", " ", "0.42"}], ",", 
     RowBox[{"bpa", "\[Rule]", " ", 
      RowBox[{"0.42", "*", "1.67"}]}], ",", " ", 
     RowBox[{"bh", "\[Rule]", " ", "0.2"}], ",", " ", 
     RowBox[{"bha", "\[Rule]", " ", "0.25"}], ",", " ", 
     RowBox[{"n", "\[Rule]", " ", "0.4"}], ",", " ", 
     RowBox[{"muc", "\[Rule]", " ", "24"}], ",", " ", 
     RowBox[{"vp", "\[Rule]", " ", "235"}], ",", " ", 
     RowBox[{"vpa", "\[Rule]", " ", "470"}], ",", " ", 
     RowBox[{"vh", "\[Rule]", " ", "235"}], ",", " ", 
     RowBox[{"kp", "\[Rule]", " ", "0.000004"}], ",", " ", 
     RowBox[{"kpa", "\[Rule]", " ", "0.000005"}], ",", " ", 
     RowBox[{"kh", "\[Rule]", " ", "0.00001"}], ",", " ", 
     RowBox[{"np", "\[Rule]", " ", "23"}], ",", " ", 
     RowBox[{"nh", "\[Rule]", " ", "23"}]}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.79314398385992*^9, 3.793144005456154*^9}, {
  3.793144036112743*^9, 3.7931444435917625`*^9}, {3.7931527306720657`*^9, 
  3.793152782132967*^9}},
 CellLabel->"In[9]:=",ExpressionUUID->"352cefe4-17c6-4e46-850d-9aa6accb9140"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"theta", "[", "t", "]"}], " ", "=", " ", 
   RowBox[{
    RowBox[{"gu", "*", 
     RowBox[{"pu", "[", "t", "]"}]}], " ", "+", " ", 
    RowBox[{"gc", "*", 
     RowBox[{"pc", "[", "t", "]"}]}], " ", "+", 
    RowBox[{"gua", "*", 
     RowBox[{"pua", "[", "t", "]"}]}], " ", "+", " ", 
    RowBox[{"gca", "*", 
     RowBox[{"pca", "[", "t", "]"}]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"epsilon", "[", "t", "]"}], " ", "=", " ", 
   RowBox[{"e0", "*", 
    RowBox[{"(", 
     RowBox[{"1", "+", 
      RowBox[{"e1", "*", 
       RowBox[{"Sin", "[", 
        RowBox[{
         FractionBox[
          RowBox[{"2", "Pi"}], "365"], "*", 
         RowBox[{"(", 
          RowBox[{"t", "-", "240"}], ")"}]}], "]"}]}]}], ")"}]}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.7931446062763968`*^9, 3.7931446599143934`*^9}, {
   3.7931448071382914`*^9, 3.7931448365601206`*^9}, {3.793144871461584*^9, 
   3.793144942726204*^9}, 3.7931449784164047`*^9},
 CellLabel->"In[10]:=",ExpressionUUID->"a7094d73-c8ab-4675-8f5f-575991ab0510"],

Cell[BoxData[
 RowBox[{
  RowBox[{"sol2", " ", "=", " ", 
   RowBox[{"NDSolve", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"{", " ", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"pu", "'"}], "[", "t", "]"}], "\[Equal]", " ", 
         RowBox[{
          RowBox[{"thu", "*", 
           RowBox[{"theta", "[", "t", "]"}]}], " ", "-", " ", 
          RowBox[{"ap", "*", "bp", "*", 
           RowBox[{"(", 
            RowBox[{"1", "-", "n"}], ")"}], "*", 
           RowBox[{"pu", "[", "t", "]"}], "*", 
           RowBox[{"hc", "[", "t", "]"}]}], "-", 
          RowBox[{"kp", "*", 
           RowBox[{"pu", "[", "t", "]"}], 
           RowBox[{"be", "[", "t", "]"}]}], "-", 
          RowBox[{"gu", "*", 
           RowBox[{"pu", "[", "t", "]"}]}], "-", 
          RowBox[{
           RowBox[{"epsilon", "[", "t", "]"}], "*", 
           RowBox[{"pu", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"pc", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
         RowBox[{
          RowBox[{"thc", "*", 
           RowBox[{"theta", "[", "t", "]"}]}], " ", "+", 
          RowBox[{"ap", "*", "bp", "*", 
           RowBox[{"(", 
            RowBox[{"1", "-", "n"}], ")"}], "*", 
           RowBox[{"pu", "[", "t", "]"}], "*", 
           RowBox[{"hc", "[", "t", "]"}]}], "+", " ", 
          RowBox[{"kp", "*", 
           RowBox[{"pu", "[", "t", "]"}], 
           RowBox[{"be", "[", "t", "]"}]}], "-", 
          RowBox[{"gc", "*", 
           RowBox[{"pc", "[", "t", "]"}]}], " ", "-", " ", 
          RowBox[{
           RowBox[{"epsilon", "[", "t", "]"}], "*", 
           RowBox[{"pc", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"pua", "'"}], "[", "t", "]"}], "\[Equal]", " ", 
         RowBox[{
          RowBox[{"thua", "*", 
           RowBox[{"theta", "[", "t", "]"}]}], " ", "-", " ", 
          RowBox[{"ap", "*", "bpa", "*", 
           RowBox[{"(", 
            RowBox[{"1", "-", "n"}], ")"}], "*", 
           RowBox[{"pua", "[", "t", "]"}], "*", 
           RowBox[{"hc", "[", "t", "]"}]}], " ", "-", " ", 
          RowBox[{"kpa", "*", 
           RowBox[{"pua", "[", "t", "]"}], "*", 
           RowBox[{"be", "[", "t", "]"}]}], " ", "-", " ", 
          RowBox[{"gua", "*", 
           RowBox[{"pua", "[", "t", "]"}]}], " ", "+", 
          RowBox[{
           RowBox[{"epsilon", "[", "t", "]"}], "*", 
           RowBox[{"pu", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"pca", "'"}], "[", "t", "]"}], "\[Equal]", " ", 
         RowBox[{
          RowBox[{"thca", "*", 
           RowBox[{"theta", "[", "t", "]"}]}], " ", "+", " ", 
          RowBox[{"ap", "*", "bpa", "*", 
           RowBox[{"(", 
            RowBox[{"1", "-", "n"}], ")"}], "*", 
           RowBox[{"pua", "[", "t", "]"}], "*", 
           RowBox[{"hc", "[", "t", "]"}]}], " ", "+", " ", 
          RowBox[{"kpa", "*", 
           RowBox[{"pua", "[", "t", "]"}], "*", 
           RowBox[{"be", "[", "t", "]"}]}], " ", "-", " ", 
          RowBox[{"gca", "*", 
           RowBox[{"pca", "[", "t", "]"}]}], " ", "+", 
          RowBox[{
           RowBox[{"epsilon", "[", "t", "]"}], "*", 
           RowBox[{"pc", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"hu", "'"}], "[", "t", "]"}], " ", "\[Equal]", "  ", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "ap"}], "*", "bh", "*", 
           RowBox[{"(", 
            RowBox[{"1", "-", "n"}], ")"}], "*", 
           RowBox[{"pc", "[", "t", "]"}], "*", 
           RowBox[{"hu", "[", "t", "]"}]}], " ", "-", " ", 
          RowBox[{"ap", "*", "bha", "*", 
           RowBox[{"(", 
            RowBox[{"1", "-", "n"}], ")"}], "*", 
           RowBox[{"pca", "[", "t", "]"}], "*", 
           RowBox[{"hu", "[", "t", "]"}]}], " ", "-", " ", 
          RowBox[{"kh", "*", 
           RowBox[{"hu", "[", "t", "]"}], "*", 
           RowBox[{"be", "[", "t", "]"}]}], "+", 
          RowBox[{"muc", "*", 
           RowBox[{"hc", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
        " ", 
        RowBox[{
         RowBox[{
          RowBox[{"hc", "'"}], "[", "t", "]"}], " ", "\[Equal]", "  ", 
         RowBox[{
          RowBox[{"ap", "*", "bh", "*", 
           RowBox[{"(", 
            RowBox[{"1", "-", "n"}], ")"}], "*", 
           RowBox[{"pc", "[", "t", "]"}], "*", 
           RowBox[{"hu", "[", "t", "]"}]}], " ", "+", " ", 
          RowBox[{"ap", "*", "bha", "*", 
           RowBox[{"(", 
            RowBox[{"1", "-", "n"}], ")"}], "*", 
           RowBox[{"pca", "[", "t", "]"}], "*", 
           RowBox[{"hu", "[", "t", "]"}]}], " ", "+", " ", 
          RowBox[{"kh", "*", 
           RowBox[{"hu", "[", "t", "]"}], "*", 
           RowBox[{"be", "[", "t", "]"}]}], "-", 
          RowBox[{"muc", "*", 
           RowBox[{"hc", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"be", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
         RowBox[{
          RowBox[{"vp", "*", 
           RowBox[{"pc", "[", "t", "]"}]}], "+", " ", 
          RowBox[{"vpa", "*", 
           RowBox[{"pca", "[", "t", "]"}]}], "+", 
          RowBox[{"vh", "*", 
           RowBox[{"hc", "[", "t", "]"}]}], "-", 
          RowBox[{"gb", "*", 
           RowBox[{"be", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"pu", "[", "0", "]"}], "\[Equal]", " ", "4"}], ",", " ", 
        RowBox[{
         RowBox[{"pua", "[", "0", "]"}], "\[Equal]", "6"}], ",", 
        RowBox[{
         RowBox[{"pc", "[", "0", "]"}], "\[Equal]", " ", "7"}], ",", " ", 
        RowBox[{
         RowBox[{"pca", "[", "0", "]"}], "\[Equal]", "6"}], ",", " ", 
        RowBox[{
         RowBox[{"hu", "[", "0", "]"}], "\[Equal]", "17"}], ",", " ", 
        RowBox[{
         RowBox[{"hc", "[", "0", "]"}], "\[Equal]", "6"}], ",", " ", 
        RowBox[{
         RowBox[{"be", "[", "0", "]"}], "\[Equal]", "1000"}]}], "}"}], "/.", 
      " ", "param2"}], ",", "\[IndentingNewLine]", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"pu", "[", "t", "]"}], ",", " ", 
       RowBox[{"pua", "[", "t", "]"}], ",", 
       RowBox[{"pc", "[", "t", "]"}], ",", " ", 
       RowBox[{"pca", "[", "t", "]"}], ",", " ", 
       RowBox[{"hu", "[", "t", "]"}], ",", " ", 
       RowBox[{"hc", "[", "t", "]"}], ",", " ", 
       RowBox[{"be", "[", "t", "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", " ", "0", ",", "1000"}], "}"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7931444518909254`*^9, 3.793144485833975*^9}, {
  3.7931445777673607`*^9, 3.7931445824051485`*^9}, {3.7931449849216886`*^9, 
  3.793145023099779*^9}, {3.7931458478317647`*^9, 3.79314592774765*^9}, {
  3.7931460132406645`*^9, 3.7931460512351522`*^9}, {3.7931462840082674`*^9, 
  3.793146310980627*^9}, {3.793146369297439*^9, 3.7931466434670076`*^9}, {
  3.79314672654883*^9, 3.7931470139021697`*^9}, {3.7931470572529955`*^9, 
  3.793147233410972*^9}, {3.793152778604621*^9, 3.79315278541535*^9}},
 CellLabel->"In[12]:=",ExpressionUUID->"e392140c-6c49-4fe4-b942-1813111fab6f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"pc", "[", "t", "]"}], "/", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"pu", "[", "t", "]"}], "+", 
          RowBox[{"pua", "[", "t", "]"}], "+", 
          RowBox[{"pc", "[", "t", "]"}], "+", 
          RowBox[{"pca", "[", "t", "]"}]}], " ", " ", ")"}]}], ",", " ", 
       RowBox[{
        RowBox[{"pca", "[", "t", "]"}], "/", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"pu", "[", "t", "]"}], "+", 
          RowBox[{"pua", "[", "t", "]"}], "+", 
          RowBox[{"pc", "[", "t", "]"}], "+", 
          RowBox[{"pca", "[", "t", "]"}]}], "  ", ")"}]}]}], "}"}], "/.", 
     "\[InvisibleSpace]", "sol2"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "1000"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "Automatic"}], ",", " ", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Blue", ",", "Red"}], "}"}]}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", " ", 
    RowBox[{"{", 
     RowBox[{"\"\<Time (days)\>\"", ",", " ", "\"\<Number\>\""}], "}"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.793152294097542*^9, 3.7931523723336873`*^9}, {
  3.7931528038569036`*^9, 3.7931528306881175`*^9}},
 CellLabel->"In[14]:=",ExpressionUUID->"076cab87-cdfa-403c-ac2f-389a1c95f591"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0, 0, 1], AbsoluteThickness[1.6], Opacity[1.], 
      LineBox[CompressedData["
1:eJwVmHc81e8bxo1oUCgJIathCxHFfRvZO2Vkb5K9M45xrCOkc2znHFtaKikq
KSOjKJXGN9LeKkpL9Xt+f3m9X855Ps9z3dd9P5/ryPhGOAZwcXBwXOPm4Pj/
3/dzi9amgd8M5MOWcuxPvgPRTUmaJnV3wKizq4HPZQIS+T4GitU9h+2npg93
Gt8GHRPJjpKojyAq0q+NxrfgYE8zx5K6edh1d4p74egYPHpk0AL5P+BFqf2H
4dkboPd90uZg1B/QGekKM3MchT/lWTY/2dyY/HHdj979Q6DcPC69bi0vDr98
9qFY8jq4d6z/qpW/DA8/MPJkvxyAwmtB1x3/rECt/Dl++2v9cOnW2arIqJWo
znx6XOZMH3yY/neg6KUAHp1d3nPh7DUoWmiSnlQWwrqTjJf3Bq5Cz5K5+Xn2
GqwxVE6WX9cLk3wVU1z/CaN0NWWwtrUHZlcbXBdaK4LiPO+eP9xxGXjFX7RL
263DTdqPc3a/ughSMgVVavmiaObaMZ3e3A3aW9SzDfrEcGEKRz8nd4Gt2uQB
mz/i2DLY/snB9wKk6ssa7o+SxBeqJyyWB3QC3WRIMfmYFB4o9K3blHYOjluF
C+e/3ID7/B/qX2nqAF+FFf9Gi6Wx62RQ2YtHZ2FWeSrmjrIMPr9jp3BB4iwk
q7e/eTQsgzc3+a8JDT0DvFpZHs8CZdHnTZXx9r7TILVDwewLWw5Fcp/xeh9p
hzaDxYs/9OUxtGSEHbW8HbSNxtU5/pPHqhYNLQnBU3BtV33T0sSNuNT5FnuP
5EmwtYgTF1i7Ce9Xnokq1D0Bj6zNi0XObEI3/p/fb/odh0D79Uuk7Dbjp6Zw
0Kk+BmnOVz8q52/BYrfPGvqqbbBiH91Xa5MCKvzm+OKSdxTKPIPu7+hTQC+B
8NmKD60g66tnbeytiI3SO9a4ubXCyYCVVy3/KKKuoGU59+0W0AuZ2eZYpYSc
Ws/P8dq3wGDY2TZXHWX8y5C3nJpshqkYV3pwlAp6S8xlrPvVBMEJyssjV6li
rVXd4XJGE3xN/peacEwV50Jfl8vpNAElbWIuzVwNl20X7XGbbgT+zKagnJdq
+Pj66fPPChrhhtHOWVNDddx1rOVF4M5GKO1vah0pVsfZe3N/y+caQGooUXJC
eSuOKK6Veby/AV5YPLu/5+BWXKXYEhqs2gBto1alD4e3osnoa+8jX+sh0uac
tYeoBnLSh7vkeupBe1xq6dNADTya/HvieUE9LNrnXfU/p4GNA7tC69zq4drE
l4NvuDWRIi7nr6JSD7aT/Z8/sTUxeVfZDa5HdZD+xMN11YIm+rc4KT5vr4P2
NwtXla20UDG+/KhdQR3MfClWtGJr4TWDj8aSgXUg9HvLkZBvWqhlp/tQzqQO
jJZc+51ruQ3v2gquNpCvg+iV+/ybWdsw+2AmnwVvHdzdcGjbcwttDPZbtff0
OBt4FDYxOVna6BmbLHu3kw3aGld4pb9qo/PV7TuiWWwI3OESYWChg9OH1q2J
yWdDucmX++5MHVR8Hzd4JZYNQzYFeHBeB/8q+n818mHDj71yRyvNt+O186fb
3tiywS1kT/Lk3Hb0+ux8zFGFDbTo2WdfzXSR8bMi4pskGy4dzLVaU6uLlmdr
ShIE2CBZ1CVhb6aHa9ZflBp4ywLbckdqeI0ecvj5rPG/zYI09vuPhV/00PtY
Bo97NwtmzkheGa7egYXK4VNcJSwQutS5+c3nHbjf4b4NLYUFRgN2JbymOzFt
iXL6hlAWNN7P8DH+vBOzQlKrlcxZcG9GfMRnlz7ufJ9plLOdBbzvzmpQqvRx
wiJV/owCC4IWX3JfNjHANe9YQjarWFDBkx72X6UBFs9ZvW3iZMHQKtF7P2cN
kOeZfFHDNyYoylg2a1cClmTebgl6woR9is9X7ZkFvDcteEDyHhMGxXoudskg
Gv4+9mjPKBO+yzrLP4hHpIb5Dmp0MaGkpcElqA7xTPQW35F2JmxR/ly4MIq4
hOfirZFWJrhsy/8mLGOIA06U1s+VTPjcdU+h0coQX14rUOc/woR8A1lPzXhD
lH+iei2lkAndZhcHHUYNcf/32znWFCY43lj6e+abIU4N+Eo3JjPhvb2TWqS0
EQpGRxQZxjFBwu1jeVGcEZ4X8tU23M+EjmndG5JsI1zIGKutDWSCtV8Ox4kR
IzxpHC+n5cuE1LANIaMbjDG56mk/jxsTRL7sr3WzNEY9i2NeO/cy4WTchdtv
Y43xkViPQKMjE6bTHPSWjRjj0ZONa/5ZMSGemxle/tUYnd1+Ts+aM0Eg7139
pg0maJgo17nMlAl4OItvV6wJyvKJZXcgE65Pixhw1Zhgv/tzzjADJtgqt0Ve
6TNBGtdIkPFOJkwm6TekvDfBnVfWXtXVY4LH9Vv3dNfswssbLTbYbmfCC2H/
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
Y+c47HgI99TWzsvWUvHB5cKfXxRJ/0xls/pZxC//DU+8IjwmGWYVWE/Fzgtu
j54TnvTY/X1pExUb+p4KvCU8XavXcLSFig9DOGMWCL+akrGzaqNiwMQ+bn6y
/kfJ5b8/HKdi4Uq3XgXC2SN3c3xOUVFs7/cpa8LiCezVk6epOPY7QjSB8Gm5
MKZlBxVVHoRHtBI2v6WjeKWTit39zGf/P/+TFO5OzS4qfqtqi5Im+sQrjBu2
XqSit5a+RBDhlZNVNyV6qJgSyvmsg3BjZqDr4V4q3hCpv7ac6L9DTeMlTx8V
x1ePXA4gPPHfn8jkASqu2C5/Z4hwSN7w4ux1Kv7y2selSerJsY2R5zdCxU3+
4laNhMufegs/uEFFfin+ExLED6pFymzrcbLfoP821xDe97rv/La7VPxanRHY
Tvw0d6TYuG2S9E+ai8Iu4rc83Dcu9ZD4P2Ev91PCnZVzr5ZOU/HfuOVvFeJX
G9Oe6JQZKj7vyRR9QvjFXP7fz8+oqPbS36qc+Hu1tYzIo9dUPPKj7bME6Yej
Pz7U2b6j4oc4e993hLHpgkrfByrqWsm96SH9E/7XbtfxL1TUlLqrmqpLh+H2
tNi031R8Rj1Ta0v6z9vDkmP+DxUHjbqanEh/LiwXKQziyMFh3rweH9K/8n4n
Gux5clB49rr0YUPS/2sfT8gK5KA+PKw2If2/7lqLZ7lQDubqbZHKMiN+C495
xyecgyO37pwYIvPi8fUVXN9Ec1BMlDYfbEUHnWTdrddlc9BJT5P/rz3x1yae
yzs25uB7iasfYsk88r9zy7x9cw6yDQcn53bToVQ52LtS+f+sPMDtTIfZ6bLi
/do52HVC+k+SBx2ajL9+FLDMwdoBmaDz+8m8Cttq12Wdg4+Web2+foAOlozw
dl+7HKxz9aqfiSDff/Um+pxTDib4JwwoxpL+L5j67uZF9vei9ahMKh2Gbg1y
Nsfm4Ae/4m2VJXSo+sntZ5eQg57uRhwqR+gQJmvY/yOJrC/y4fsQgw5CsRdz
rNJz8PxDmVCxajLf17XzfcnPwbybywwkmunwwaNy7U5WDrryu/a0Xib9ljMZ
/7IuB6/W2Tzu6SXz89SaB0WNObjr0JG1U3102MZZVPX0aA4+m168u3WEzIfG
zA25HTnI19nit/M+HQTe71eYGM7Bl1wry++S+1Ej0UA/+GsO7p2t28GrzoAj
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
       "]]},
     Annotation[#, "Charting`Private`Tag$17848#1"]& ], 
    TagBox[
     {RGBColor[1, 0, 0], AbsoluteThickness[1.6], Opacity[1.], 
      LineBox[CompressedData["
1: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
FiTdkqXSJmkJGk1cFoW/mIhU8VO2yN0SHlZfhwfvmMgoJZXbl9cKOP7yi5fm
M9GI/nDXH93LMBfBe4iiy0Sb8v/+trC8DCFqX2n7gIl0OSRlKr0ug3o7b9KQ
JhMV1F72Cci4DL+K1Zr1lZgo+MDY5oWfl2G42yInSIiJtkp8MJ3NsIZtH80N
1D4ykEKAr+u1wCtQvfPZN+4YBmrKi1yTirwCExOC61MiGOhyb8qt9oQr8CM+
9fTOEAZKVimtUs65Arq0DBMrHwZamV7gnWm7As6xl/VlLjMQ7SrhubPsVSBM
/TFdp8ZA9oZBMzbtVyFYNuDtgUk62n50IHNs8Co4P1XZXPGBjobU1Y0uf7wK
VxylzE6M0tFZ6bkX5itX4UisG8O7j45gxfnaGRkbUNALsNvxlo7E883ntQg2
0FCs+rv1ER0NZJQ9qiLaQNXtt9yNWXR0K1nYVJNiA/tM/4nVpdMRT0hnieoD
G9BzOn285RYdLZvq++9h2oC1W0b5oUg66mbTXBGVsoWphx0pTg50lLB8+8lt
eVs4M3F1ttWGjgxmf5kLqdpC1XkD40PWdFQ/WFQpoI//vn5JTs6Mjl4UyQVz
+djC5KcabTMDOoq9LLo232wL51DTP+59dHS0comj3cMOflaqebxioaODNl9U
7wbYAR/RSmv3Pxrax9NvdzXcDt471Es//ENDkhavm+ZT7cBk9arS00Ua+r3i
GylaYwchqWLK7DM0VKI5x27Daw97dyWJDryjoWfj4wf2CNvD1QLnyYIBGnoY
02n7S9IeJExK6mL6aOjmYFEjScUedLXehZ7roiH3QM+IZ+b2kH5QX3Yvg4Z2
VUyzLeTbw3I6RxNnFQ1JXB1SqX1pD1NaRS6HK2hIiLvFhlxlDxdJ5ayEMhpi
M3/2Zmu7PZzR/7WyVkxDo8vO4dqL9pD7LnjCrICG+rLNX61jcYBxrcV3Nc9o
qE1Pf6KD2wHeZu0qlXtKQ9V35Y7ZSjgA720Cl2A+Dd09+IU1WscBDux0+SD7
gIYSx/r2mxg5QITz9qLyLBoiRTdfFTNzAOeGjtNn79OQ30Buw3NXBwjNyZu7
nU5DZwPsiJ3JDvCQfSDL/jYN8ZaPs2wbdwD5nWKOW+Jp6MeZO6SyKQfYW1/q
/D2Ohnq+nuIzXXSA606pm9tjaShzW7lIPK8jDHzdZfwwmob2hiYor6k5QoHr
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
Q4mgRxC9vzWTjv4Due5VAw==
       "]]},
     Annotation[#, "Charting`Private`Tag$17848#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"Time (days)\"", TraditionalForm], 
    FormBox["\"Number\"", TraditionalForm]},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 999.9999795918368}, {0., 0.3741340493490773}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.793152373168562*^9, {3.7931528124948378`*^9, 3.793152831416169*^9}},
 CellLabel->"Out[14]=",ExpressionUUID->"17f9c2fa-88b3-4a78-93c5-9ce0770c6f86"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"be", "[", "t", "]"}], " ", "}"}], "/.", "\[InvisibleSpace]", 
     "sol2"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "1000"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "1000"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1000", ",", "7000"}], "}"}]}], "}"}]}], ",", " ", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", "Magenta", "}"}]}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", " ", 
    RowBox[{"{", 
     RowBox[{"\"\<Time (days)\>\"", ",", " ", "\"\<Number\>\""}], "}"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.793152632159461*^9, 3.7931526722161827`*^9}, {
  3.7931528384446545`*^9, 3.7931528386860065`*^9}},
 CellLabel->"In[15]:=",ExpressionUUID->"a178f6f2-cffb-42d4-9d66-fb67c1bc0ee2"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[1, 0, 1], AbsoluteThickness[1.6], Opacity[1.], 
      LineBox[CompressedData["
1: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
Nje6
       "]]},
     Annotation[#, "Charting`Private`Tag$18181#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"Time (days)\"", TraditionalForm], 
    FormBox["\"Number\"", TraditionalForm]},
  AxesOrigin->{0, 1000},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 1000}, {1000, 7000}},
  PlotRangeClipping->True,
  PlotRangePadding->{{0, 0}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.7931526476838007`*^9, 3.793152672914315*^9}, 
   3.7931528392606125`*^9},
 CellLabel->"Out[15]=",ExpressionUUID->"8cd5f063-f65f-46c9-9b66-c4e83d12c68b"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Figure 7 ", "Subsection",
 CellChangeTimes->{{3.7931438840877943`*^9, 3.793143905443008*^9}, {
  3.7931439491836214`*^9, 3.793143954536168*^9}, {3.793152697697586*^9, 
  3.7931527123035192`*^9}, {3.793152949613036*^9, 
  3.793152949960148*^9}},ExpressionUUID->"ed9072c5-bea8-44b9-9af8-\
d1bee7a119bb"],

Cell[BoxData[
 RowBox[{
  RowBox[{"param3", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"e0", "\[Rule]", " ", "0.12"}], ",", " ", 
     RowBox[{"e1", "\[Rule]", " ", "0.25"}], ",", " ", 
     RowBox[{"thu", "\[Rule]", " ", "1."}], ",", " ", 
     RowBox[{"thua", "\[Rule]", " ", "0."}], ",", " ", 
     RowBox[{"thc", "\[Rule]", " ", "0."}], ",", " ", 
     RowBox[{"thca", "\[Rule]", " ", "0."}], ",", " ", 
     RowBox[{"gu", "\[Rule]", " ", "0.2"}], ",", 
     RowBox[{"gua", "\[Rule]", " ", "0.2"}], ",", " ", 
     RowBox[{"gc", "\[Rule]", " ", "0.06"}], ",", " ", 
     RowBox[{"gca", "\[Rule]", " ", "0.055"}], ",", " ", 
     RowBox[{"gb", "\[Rule]", " ", "0.7"}], ",", " ", 
     RowBox[{"ap", "\[Rule]", " ", "0.0435"}], ",", " ", 
     RowBox[{"bp", "\[Rule]", " ", "0.42"}], ",", 
     RowBox[{"bpa", "\[Rule]", " ", 
      RowBox[{"0.42", "*", "1.67"}]}], ",", " ", 
     RowBox[{"bh", "\[Rule]", " ", "0.2"}], ",", " ", 
     RowBox[{"bha", "\[Rule]", " ", "0.25"}], ",", " ", 
     RowBox[{"n", "\[Rule]", " ", "0.4"}], ",", " ", 
     RowBox[{"muc", "\[Rule]", " ", "24"}], ",", " ", 
     RowBox[{"vp", "\[Rule]", " ", "235"}], ",", " ", 
     RowBox[{"vpa", "\[Rule]", " ", "470"}], ",", " ", 
     RowBox[{"vh", "\[Rule]", " ", "235"}], ",", " ", 
     RowBox[{"kp", "\[Rule]", " ", "0.000004"}], ",", " ", 
     RowBox[{"kpa", "\[Rule]", " ", "0.000005"}], ",", " ", 
     RowBox[{"kh", "\[Rule]", " ", "0.00001"}], ",", " ", 
     RowBox[{"np", "\[Rule]", " ", "23"}], ",", " ", 
     RowBox[{"nh", "\[Rule]", " ", "23"}]}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.79314398385992*^9, 3.793144005456154*^9}, {
  3.793144036112743*^9, 3.7931444435917625`*^9}, {3.7931527306720657`*^9, 
  3.793152782132967*^9}, {3.7931528662978907`*^9, 3.7931528945364017`*^9}},
 CellLabel->"In[16]:=",ExpressionUUID->"3323fe43-0401-41e6-a20c-d6113b784168"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"theta", "[", "t", "]"}], " ", "=", " ", 
   RowBox[{
    RowBox[{"gu", "*", 
     RowBox[{"pu", "[", "t", "]"}]}], " ", "+", " ", 
    RowBox[{"gc", "*", 
     RowBox[{"pc", "[", "t", "]"}]}], " ", "+", 
    RowBox[{"gua", "*", 
     RowBox[{"pua", "[", "t", "]"}]}], " ", "+", " ", 
    RowBox[{"gca", "*", 
     RowBox[{"pca", "[", "t", "]"}]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"epsilon", "[", "t", "]"}], " ", "=", " ", 
   RowBox[{"e0", "*", 
    RowBox[{"(", 
     RowBox[{"1", "+", 
      RowBox[{"e1", "*", 
       RowBox[{"Sin", "[", 
        RowBox[{
         FractionBox[
          RowBox[{"2", "Pi"}], "365"], "*", 
         RowBox[{"(", 
          RowBox[{"t", "-", "240"}], ")"}]}], "]"}]}]}], ")"}]}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.7931446062763968`*^9, 3.7931446599143934`*^9}, {
   3.7931448071382914`*^9, 3.7931448365601206`*^9}, {3.793144871461584*^9, 
   3.793144942726204*^9}, 3.7931449784164047`*^9},
 CellLabel->"In[17]:=",ExpressionUUID->"a3c3db5e-5674-48a1-b06e-89e3428a89e3"],

Cell[BoxData[
 RowBox[{
  RowBox[{"sol3", "=", " ", 
   RowBox[{"NDSolve", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"{", " ", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"pu", "'"}], "[", "t", "]"}], "\[Equal]", " ", 
         RowBox[{
          RowBox[{"thu", "*", 
           RowBox[{"theta", "[", "t", "]"}]}], " ", "-", " ", 
          RowBox[{"ap", "*", "bp", "*", 
           RowBox[{"(", 
            RowBox[{"1", "-", "n"}], ")"}], "*", 
           RowBox[{"pu", "[", "t", "]"}], "*", 
           RowBox[{"hc", "[", "t", "]"}]}], "-", 
          RowBox[{"kp", "*", 
           RowBox[{"pu", "[", "t", "]"}], 
           RowBox[{"be", "[", "t", "]"}]}], "-", 
          RowBox[{"gu", "*", 
           RowBox[{"pu", "[", "t", "]"}]}], "-", 
          RowBox[{
           RowBox[{"epsilon", "[", "t", "]"}], "*", 
           RowBox[{"pu", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"pc", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
         RowBox[{
          RowBox[{"thc", "*", 
           RowBox[{"theta", "[", "t", "]"}]}], " ", "+", 
          RowBox[{"ap", "*", "bp", "*", 
           RowBox[{"(", 
            RowBox[{"1", "-", "n"}], ")"}], "*", 
           RowBox[{"pu", "[", "t", "]"}], "*", 
           RowBox[{"hc", "[", "t", "]"}]}], "+", " ", 
          RowBox[{"kp", "*", 
           RowBox[{"pu", "[", "t", "]"}], 
           RowBox[{"be", "[", "t", "]"}]}], "-", 
          RowBox[{"gc", "*", 
           RowBox[{"pc", "[", "t", "]"}]}], " ", "-", " ", 
          RowBox[{
           RowBox[{"epsilon", "[", "t", "]"}], "*", 
           RowBox[{"pc", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"pua", "'"}], "[", "t", "]"}], "\[Equal]", " ", 
         RowBox[{
          RowBox[{"thua", "*", 
           RowBox[{"theta", "[", "t", "]"}]}], " ", "-", " ", 
          RowBox[{"ap", "*", "bpa", "*", 
           RowBox[{"(", 
            RowBox[{"1", "-", "n"}], ")"}], "*", 
           RowBox[{"pua", "[", "t", "]"}], "*", 
           RowBox[{"hc", "[", "t", "]"}]}], " ", "-", " ", 
          RowBox[{"kpa", "*", 
           RowBox[{"pua", "[", "t", "]"}], "*", 
           RowBox[{"be", "[", "t", "]"}]}], " ", "-", " ", 
          RowBox[{"gua", "*", 
           RowBox[{"pua", "[", "t", "]"}]}], " ", "+", 
          RowBox[{
           RowBox[{"epsilon", "[", "t", "]"}], "*", 
           RowBox[{"pu", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"pca", "'"}], "[", "t", "]"}], "\[Equal]", " ", 
         RowBox[{
          RowBox[{"thca", "*", 
           RowBox[{"theta", "[", "t", "]"}]}], " ", "+", " ", 
          RowBox[{"ap", "*", "bpa", "*", 
           RowBox[{"(", 
            RowBox[{"1", "-", "n"}], ")"}], "*", 
           RowBox[{"pua", "[", "t", "]"}], "*", 
           RowBox[{"hc", "[", "t", "]"}]}], " ", "+", " ", 
          RowBox[{"kpa", "*", 
           RowBox[{"pua", "[", "t", "]"}], "*", 
           RowBox[{"be", "[", "t", "]"}]}], " ", "-", " ", 
          RowBox[{"gca", "*", 
           RowBox[{"pca", "[", "t", "]"}]}], " ", "+", 
          RowBox[{
           RowBox[{"epsilon", "[", "t", "]"}], "*", 
           RowBox[{"pc", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"hu", "'"}], "[", "t", "]"}], " ", "\[Equal]", "  ", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "ap"}], "*", "bh", "*", 
           RowBox[{"(", 
            RowBox[{"1", "-", "n"}], ")"}], "*", 
           RowBox[{"pc", "[", "t", "]"}], "*", 
           RowBox[{"hu", "[", "t", "]"}]}], " ", "-", " ", 
          RowBox[{"ap", "*", "bha", "*", 
           RowBox[{"(", 
            RowBox[{"1", "-", "n"}], ")"}], "*", 
           RowBox[{"pca", "[", "t", "]"}], "*", 
           RowBox[{"hu", "[", "t", "]"}]}], " ", "-", " ", 
          RowBox[{"kh", "*", 
           RowBox[{"hu", "[", "t", "]"}], "*", 
           RowBox[{"be", "[", "t", "]"}]}], "+", 
          RowBox[{"muc", "*", 
           RowBox[{"hc", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
        " ", 
        RowBox[{
         RowBox[{
          RowBox[{"hc", "'"}], "[", "t", "]"}], " ", "\[Equal]", "  ", 
         RowBox[{
          RowBox[{"ap", "*", "bh", "*", 
           RowBox[{"(", 
            RowBox[{"1", "-", "n"}], ")"}], "*", 
           RowBox[{"pc", "[", "t", "]"}], "*", 
           RowBox[{"hu", "[", "t", "]"}]}], " ", "+", " ", 
          RowBox[{"ap", "*", "bha", "*", 
           RowBox[{"(", 
            RowBox[{"1", "-", "n"}], ")"}], "*", 
           RowBox[{"pca", "[", "t", "]"}], "*", 
           RowBox[{"hu", "[", "t", "]"}]}], " ", "+", " ", 
          RowBox[{"kh", "*", 
           RowBox[{"hu", "[", "t", "]"}], "*", 
           RowBox[{"be", "[", "t", "]"}]}], "-", 
          RowBox[{"muc", "*", 
           RowBox[{"hc", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"be", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
         RowBox[{
          RowBox[{"vp", "*", 
           RowBox[{"pc", "[", "t", "]"}]}], "+", " ", 
          RowBox[{"vpa", "*", 
           RowBox[{"pca", "[", "t", "]"}]}], "+", 
          RowBox[{"vh", "*", 
           RowBox[{"hc", "[", "t", "]"}]}], "-", 
          RowBox[{"gb", "*", 
           RowBox[{"be", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"pu", "[", "0", "]"}], "\[Equal]", " ", "4"}], ",", " ", 
        RowBox[{
         RowBox[{"pua", "[", "0", "]"}], "\[Equal]", "6"}], ",", 
        RowBox[{
         RowBox[{"pc", "[", "0", "]"}], "\[Equal]", " ", "7"}], ",", " ", 
        RowBox[{
         RowBox[{"pca", "[", "0", "]"}], "\[Equal]", "6"}], ",", " ", 
        RowBox[{
         RowBox[{"hu", "[", "0", "]"}], "\[Equal]", "17"}], ",", " ", 
        RowBox[{
         RowBox[{"hc", "[", "0", "]"}], "\[Equal]", "6"}], ",", " ", 
        RowBox[{
         RowBox[{"be", "[", "0", "]"}], "\[Equal]", "1000"}]}], "}"}], "/.", 
      " ", "param3"}], ",", "\[IndentingNewLine]", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"pu", "[", "t", "]"}], ",", " ", 
       RowBox[{"pua", "[", "t", "]"}], ",", 
       RowBox[{"pc", "[", "t", "]"}], ",", " ", 
       RowBox[{"pca", "[", "t", "]"}], ",", " ", 
       RowBox[{"hu", "[", "t", "]"}], ",", " ", 
       RowBox[{"hc", "[", "t", "]"}], ",", " ", 
       RowBox[{"be", "[", "t", "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", " ", "0", ",", "1000"}], "}"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7931444518909254`*^9, 3.793144485833975*^9}, {
  3.7931445777673607`*^9, 3.7931445824051485`*^9}, {3.7931449849216886`*^9, 
  3.793145023099779*^9}, {3.7931458478317647`*^9, 3.79314592774765*^9}, {
  3.7931460132406645`*^9, 3.7931460512351522`*^9}, {3.7931462840082674`*^9, 
  3.793146310980627*^9}, {3.793146369297439*^9, 3.7931466434670076`*^9}, {
  3.79314672654883*^9, 3.7931470139021697`*^9}, {3.7931470572529955`*^9, 
  3.793147233410972*^9}, {3.793152778604621*^9, 3.79315278541535*^9}, {
  3.7931529056048145`*^9, 3.793152911969782*^9}},
 CellLabel->"In[19]:=",ExpressionUUID->"cc80b1d6-eadf-4209-bfe8-dc6cdfe14220"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"pc", "[", "t", "]"}], "/", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"pu", "[", "t", "]"}], "+", 
          RowBox[{"pua", "[", "t", "]"}], "+", 
          RowBox[{"pc", "[", "t", "]"}], "+", 
          RowBox[{"pca", "[", "t", "]"}]}], " ", " ", ")"}]}], ",", " ", 
       RowBox[{
        RowBox[{"pca", "[", "t", "]"}], "/", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"pu", "[", "t", "]"}], "+", 
          RowBox[{"pua", "[", "t", "]"}], "+", 
          RowBox[{"pc", "[", "t", "]"}], "+", 
          RowBox[{"pca", "[", "t", "]"}]}], "  ", ")"}]}]}], "}"}], "/.", 
     "\[InvisibleSpace]", "sol3"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "1000"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "Automatic"}], ",", " ", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Blue", ",", "Red"}], "}"}]}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", " ", 
    RowBox[{"{", 
     RowBox[{"\"\<Time (days)\>\"", ",", " ", "\"\<Number\>\""}], "}"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.793152294097542*^9, 3.7931523723336873`*^9}, {
  3.7931528038569036`*^9, 3.7931528306881175`*^9}, {3.7931529141341844`*^9, 
  3.793152914330473*^9}},
 CellLabel->"In[20]:=",ExpressionUUID->"c3483ea2-84de-4e9c-8a4d-a98c17f532cc"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0, 0, 1], AbsoluteThickness[1.6], Opacity[1.], 
      LineBox[CompressedData["
1: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
14o9J9bT8bxUguTaVBxyyj9DIfx+TAjovKk4MMF6s4vwmR3rl7j5UvHSmYy4
LiJe38+uaorYmIrXmtuMLQmHtsx5z2xKRY3gVJ3XRLwphq8mHm5NxZvKtY0v
iXzgoY/m64oQ4xf2yJgTvjDRZ3ldNBXjrDbca69hQnFwQ3/xjlQczBgtiCTy
S6qzPI5fKhWfhK+7c5/Ix0s8uYcou1Lxs9SX7WKEW0tiGr3kU3Fdxz3nYiJ/
tb4EnRnfk4oi4fymD4l8v63qJWWqlIrDzjyBbIRHB8xzVdVSUdqU4axD1Mf0
7M6YFa1U9J0l7/QuYUKg1taDgdqpmGZzb9GlmAlLyby/3uukouHOfgELov64
xH+dHtRLxRt71+8RLmCChN5tU5pFKjY/6FQypDOhMuv6Wm6rVFRODs3mpDFh
z8u6nnAb4n2XH9m0ZBP9JpCu7uSQiqsf7NnCcYEJ/xWe3i7vkYq8JTk92qlM
2OJ6r37Uk1ivkJLyohQiPrIqWuFnU/G1tFXL9yQm2F/75zDgn4qCylppkRQi
v0dp+acjUpFPiNQkH8UEf+5egYrMVEzdnrT41ZsJyiOyLMPsVCwL89ToPMOE
X7QM1VlaKr7rpO2gEv0xVPLEf0cKUvGOZSv3aqJ/krV+Zk6wUvFUrqJGrj0T
0oIk1ondSMVPIWp5h3SZYKKZWNDbkYpCRbmtaTpM2Mg+LefdmYrM8feiT5AJ
ORnX9G/cTsUc3qIJC00mFNaYJNndJ/LDH1K/7WVCzUQkO/0DkT9m1Po7W5lw
x+jZIt/G8zjR1nmN0VsCQjGSnimbzqM4e173bAexvzX5POEQOI/ClyzFjl0r
AR4R9pZF4fN4rCpCov8isT99kiO9lTyP89Hh383TS2A0NvLrVfXzmKWXvZxi
VQKvWra/dTh1Hr+cvtV/8GUxzEt4DNXUn8e27F0kwydFAKdHXGQM0tDm2pDB
jfoCyEkuVhwySsNh0/cG/7EKYPKiz28f0zRU0moR/lpQAJnTvFlNlmn4Lulz
3K6UAngboNeldSoNjRLfiTW5FkBiZNd2q6A0fF2WLaMnXADDF5rGY4uJ5w3/
pP4m5sPJdob1i59p+CM6MfG5fx4cMTBkN59Lw5tX8maEvPJA+um/ur6FNCyl
Ka9zdM4j8tN99ZXlNOz+x5c1b54H5+RVm5O50jHCTfqbn0oe5OTf598vko5r
5+9NURZyYShs7b1M7XR86Rx1KIySC/VcHWFcR9NROfQAR0xULmTl+EtF6qaj
656pkvSQXLBtfBJx2jAdbc1kQzo9c+HjJ5acllU6Bh1iWYQa5wK7zZHkKc90
tE+OoKsL5cIBtQgd3cx0bD57rk6uiQFjEUfkVmen43uh1/fdahkQ3L2Wv5eW
jrFqAXbVLAZcMc19pV1AjBctfsUwlwEKZ66eO1yZjiravBs4yQyQKPnWoNqe
jvIPfveBIQPWrnUTlZxMR+fybB+2r3SoNpXnePslHfvO6/z2+0QHXfrPz8yv
6ZhNo5/5/IYOFMnYa+KzxHzZ8tl+j9Hh3+FiC5F/6dhG/C6riw4/A58m82/J
wFaegExmLnF+vl7id18wAx1Vrh1rIM7be9lOW2cIZyBFPO33nXQ6eKfNSa7f
noEiLg88tibQ4WPVplvcchn4n7SIu2IgMd7MM9YdhQz8Xru0L82HDpJqpecT
92agfnXA6nlPOjh177XnVMvAZoPFrg+niPlwL2CPegZy5X+95H2CDkWmN3fH
HczAzDq94r/WdDhET+DTPpyB/s8i83It6PB83GhuBTLwbsDfosMmdPgfux9l
oA==
       "]]},
     Annotation[#, "Charting`Private`Tag$18849#1"]& ], 
    TagBox[
     {RGBColor[1, 0, 0], AbsoluteThickness[1.6], Opacity[1.], 
      LineBox[CompressedData["
1:eJwV2Hc8FO4fAHAhiobsFGVmJ6QUng8pZUZFZO+9d8Kp7owzMhqkVEhSKpQ7
d9zha6SszIqQpLKThvV7fn95vV9398zP5/M8D3HnAAs3VhYWlgQ2Fpb///2x
sGJ8wv2XzjFuVcddLzpRcFGUmv69d+hrsIGnkEMXiuSedt957zMqt/XltJjt
Qof0RSszgqbRyQn5r1fCutHF2mIW9ns/0Qc5k/uV893o/XudhyjpD3rDc+0J
v+s7dOR3n8nFoFW0ltVe9vfNO/Q26VD0B8UNsOFXsMtbxR60euOyyd8CNrCM
917deKUHKRZ37BUS4IAX3Qn9e971INvKXYvqSZvAo/7UnlsivYhc79FsscoF
4s9/t83Y9CJaZ0VuYNBWGBCUzsrN7kVTw+t+aV+2w/wui6wdLb0obalob5/i
Dnh+/35Cw69eVLxqxPXFnRecYw4dERHrQ7XsCz9/FvCByM7Iy1G6faiP++YQ
6wd+QCdZBZBjH5rh1WneISAIWTfcntZH9yEOkfFne82E4NiO82B5rQ+JiSfn
7k8SBunZPjhR2Ic0ZFWu6DTshP4Hrv2DFX3IdH+fn8mqCBhbmyueYfQhd40Y
K9tDu0HLrq91trUPXdKW0PUJEoW6MyVtk519KFu/RT76sRgUhIyqh/T2oTIj
f/6kL3sgK/afCqO/DznLca23pe8F98WrTqvYM4pDIe8UxcG9Rp7nXF8filZ5
Nvm+VRwskh8HzXTj8apfthtzlwDrxKWh6bd9KPOQZfc3Nklgd/NjC2vG4z8q
ZzBfIAnmAdeEH9T1oVKdlZo/2lKgzHJqc85LPB+9DhWWD1Kg1z10362sD9Uf
v1/EGSkNwhTrGqV7eH6nwkS2C8iA4ve7Z9hz+tB745Ppgi9kgJisQlsj4fme
3sUuZrYP4vTZKlXw+sVaMacVk2Thw6UQ8cu2fYjrQrazuowcRLKaaTYa96Hr
9h79RxvkgP5Q80ysVh966raVabgqD10N0s6ZIn1oKMQ62zNICSianOUR3b3I
M0Jxc+A2ZbjHwxHVVNeLFqPXL0U8VoZhQa6Ho2W9aEtCkQfxy36QIZ25fIvY
i8RaIkW7FQ9Ausz3z9WHe5FpX+PcbIEaeHktSj/J60Fxn+ysty2pgWLuZb1k
Yg96NrnEVDRSB6erpZNRQT1ox7JsltcvdfhTcpwr16AH9exJPfj5lAbcbBOx
4/31Dtl4nYvuWzgMcgs9oWvn3qGU4JmxRQNNSA46PkrVe4doF0lGfPmakB/9
n8jt/e+QaBpl92mDI7DxatbQ283v0MgL0brWvKNQc2R5dL6uG3msfGGj6+tA
vHxKl6paN7q5Mc73wy0doIsrHUQS3ahlm3Dv3xkdQIpq5gE7upG8uGGxxi0E
BexT6ZpzXei3hJXUQDiAeDXzgV95F6Ia1DSZt+mChrOSBJd6F4Jrl7mPh+qD
ttpMTNGZTtQ8LKjDelsfzm2zTHU26ESmiqWBdQ36MFypEnrwaCeya+7s1eQ7
DhtlQup3SXai6FXRAuUXx6EiZWi06WsHqvSqVheeOwFP127Nn1HtQLJ603Y/
fE5B/r2/muJjb1F5enxGSdYpgCbie5X2t0hjiK/BreYUSPrOPLSnvkXHI4/I
jnAZgrsFPYQv6y1yfkpa6HlkCA8uuVYMHH+LbotIkGq/GsHiKfcX5Gdv0I6f
ls+uuZhCxar4oZKbbUjMTvwsKdkUQr88/oES25Bi84/fMc9NwXDuiv5URBs6
mRePPNdNwUpUUiDBqg3FHitt18kzg01KvaW3hdrQUmvsUpjXaRgZVpNyzXuN
XES6+SXvmUN6mqfD9metyNvs1UR+pTlMcPFPfL7XigKv3K4WbjGHm5wrb5uz
WlHsjLvttln8+cz+o/SIVpRbv/zgr5YFRDue5r8ArajTW1qtc8AC0O7c9wY9
LUinJtL8Es9ZSNLP3yvF0YL2dn9rvyN9Flw67oXf+dOMNnyzMWYcOQt8K9++
yfxoRo2C2gZsbmeBNtxJc+psRobBG7STKGeh68myQkxeM7KUS5bNcT4H2xUC
ipTVm1HAjbz1skpLaC877j3n34QKQmqffDxvDZJZw/Z7Of5Df2cs5HN8rUH1
xvJbzZVGZOH9tdgk3hoSTih+uLDQiNideApqH1rDkO+jSspwI/I0dc4sWLIG
Z/Hahx9eNSIVOY4I12wbqA7a3v/CpxHVDZvAVMcFGKn0dCcNNiBhmzFa4ecL
cFhWYeujzgYU2Buuaff7Ary+bV/c3dyAJN7cVW0Xs4WEF/0F2i8bEJEyL/XM
zxamXN3MgrMakGl2zuZQbjvoHXVpP2PWgIZPDXUvn7CHkVepF8ff1CPeh6v/
bGztwbhnlHmusR6dYBeTpAbZw/PI28sdNfXoSa19SORte0i4cF/3U2k9ilEb
4fs1bw/KNy+OeSbVo52in8/O3HYA2YuxP2VO1iP5yFCfwChHOFmrNa7/hoka
i6+s77niCG19cwVdjUxk35ud1ZHmCNIUhX0edCbKVK2qUS50BJc64dSyp0z0
d+oX93S7IxRklz8quMZELU4RZV5STpAe7ENWsmYiN6PoaecOJ7j3yDy0d4aB
9uoO5I8MOsHRiepHNyYZ6KOGhqn9uBP86Xik5zzGQBYSC0+t/zrBf+j4bZ4+
BoK/XoGnJZ1hXyNpsIvOQLsfWv/UjnCGjP7fb76kMdA7Vs2/wntcQN80jsvk
EAOl/bn+6LqcC1C6udZ2qjKQ4cyiNb+6C5Dlzx+cVWQgxuAz6vZT2NH7vV5I
MNDTZ7IxHCEu0Hk4syZvGwMl2wuv/2xyAR5Zdcv5jjqkS/3N3uHvCjnxxBf5
unXosPNX9ZuRrqDB4iXZpVmHVLj6XZ0SXMF240wKr2odErN52fgzxxX2iUSq
10nUoX9/Q68I012hVfKAfx17HarUXGBz5nYD1cfUSqu2WvR4dFRNQcANBDnV
7nk21qL7SV0ui2JuwFeeqkOi16KMwWcNRFU3mH9+K3K6vBb5RQVcfmztBnZW
iU52ObVIhjLF+uuhG7xfNYpocq5Fok4fVWufu4GTmiDPM9taxL/5jTOpxg3Y
Zjs3PrSsRazWj+t3drgBql6foxnWok9/vBJ0ltxglitXKlGtFt08/HVDor47
DCnUvr7OWYvSR/oOmJu6w8zhBd8zrLWImNjkJHLeHQ4czOQWXaWjsIEiZpmP
O3iUUiX7F+jIItKV0JXpDq68GzgmhumIu3qUZdeoO8hf9Kn2pNDR3OkbxFc/
3OGpe4tCZiUd9Xwz3nJ2yR1y2opcXpfTUf6uaqFUbg8gPtmy6l5MR/vj0pTX
D3qAy4HCd2bZdHTmxFHbz8keENPL+q4/mI4Of5objcvxgMzJnv3f/Olod2Sx
x+4CD5CXukPZ5ENHXx7tCDlX5QHVRV8Vg13oKGLrZFLzJw/4cNgqZvosHeX1
ZL96rO4Jh3WkhmOO0FG8n6H2SeQJH7bln/U9REeuHCwN46c8IXTpxDkvdTpS
OuzTLurgCSe2nmlLUaajujzdL+lJnrCHhcU1SJKOCtV/eytme8IrqVMb3+yl
o8S3ZXMtdzyB5v3rg5oYHZmvC61sqPSE5+7Ja/I76eiz8wxv6LAnLLRH/Kja
Tkctyw9u8nzzhGmmNlfUVjoqy7YWe/LTEzZHUzlPceP1bmqUm9jkBd/aN4Zs
56QjTvk8OK/mBcrs7f3q6zQ0VX+6aVHbCx5oD1TbrdJQ5wUO42snvYAmb7s3
a5mGbqUGWb2284LFd3qWkn9oSGHewF8r0QsuvIiXHpinIWOt9BCpTC8wSLW7
EDNHQ76kvsgtt71AxsxOWWGWhspE3S5/LPeC73e5SSVTNPTGsyyxkeIFv47Y
/Qv/gfuv+Jla1uAFar1CE2bfaUjRMOFmTL8XvLXdwio+idvPac13HfWC/qru
PTu/4vZHeB4Y/8Dj4xG6tmuChp6E332ye90Lmof+nkTjNNTOnHjBvtkbXp/f
dMnxMw3NbFGunuL1BvuvoZ9SxmhI+QGtnibjDdOnT3JtGKUh0xm2lkIVb2hU
38MwHKEhf02jt+Qj3jCmrR535xMNpV3J7A7Vx78P0tFZGaah8o7BfltTb8gM
//jTBbtTRHxI/7w3LLs/ud47RENzbp5jis7ecPw/S1FzbJ7n5V/5fb1hJ39s
bN9HGlJZWZpaCfMG6b6WZ27Ypw10FsbjvEEg7WPp2gcaCsy8+vtNkjdk19q7
3MPOGHqzUpnlDSbfFztNsJ/L8rPm53vDTJb+dzbs7pALnFcfesNenZ9FDe9p
aKH2/ha/595Q5Fz8j4zNy/V9x7kab8gLmxp2wFY9d0BI+z/sT2antLAtCiJ3
S3d4Q5u+j4oEdvCPOvGtg95gdWoweQd2pgbnvl9j3uByTd2MC7uCYKo4NOUN
Qkyh0C3YPW9yDvy35A13YkTnhLAXhYY0nrD4gKjnCEURm99FSiuHywfq9i03
G2KrP/XRvcTvAw8dNu0Ixj7798UJNzEfYKu8n3IfO1T/n5GJrA8Y9Fspf8TO
Ttc1P6jqAwuSD2fF8Hyr3idaimr5wNdK6SZv7D7pzgsbT/gAh7pXSR32UqCQ
07SZD8gbcaaK4vUVpNm791r7gHphjvcVbA3OYh+6iw+wfnt0aBHb0mI6sMjP
B4IbBr/74v0Kz1cPT43wAZchavQM9iu1hni7FB9AEV+5tuB4GIjlIh7P8YE4
9Ym/D7H/tJqnKN31Ab1LxneMcfwcdhzJWX3hA3cvS4yX4/g6/3hf3hca7i+m
NMgfx1/kkn/B2ybcn0RN+kEcnxTyamn+ex/o4SiyHcLxe4QiwtBm9YW9fBKq
mTj+Y9rKR39y+8I2HhnR9G80VDukz1Yq4AtpRoHLWThfdFkDTgjK+YLd0VD/
KpxfJ40a3syY+UJVk8shS5yfyXbnZwqtfSFVHP67toDzL2B6+wUXX5DPfrje
8xPHX7bQmeZwX1ggVlkGL9GQ1ZDP4N18X/CbG87hXKGhm7Msy+ce+sIxdpQR
h+vD+w3Xd2957gs33c7Nra3RkL0MwyGy0Re+Un1q+VjpyD2Af+L0D18I1K7P
zd5ER6Eb6AsbNP1gq86T3B+CdPSSz4K/Ws8PtCKC3vYK09Ef6a8H/Y394OKx
NwNNInQUY7gj6r2DH1xuFrKk4/p3Octt/QXRDw6qf1n8J0NHmdLbtrj2+EFU
+X7+54fpqPyUg3RTgD+0Ec9ebXOko2Fj6m2zaH9gkXz1jYrr97bTAvyDV/xh
8eI13ufudORr2cY6dcsfnpbtv/rcl45kXQ6N7Gj0h9QvuS83RNHR/ZjteXbC
AaCkwJHRm0lH2eV1PL8YATC78iFg9TUdNbwQSYxtC4Cl6Mnh8nY6WqgKW+fs
C4DqX57lHt24XtMUZkR+BMBi1uWTXwfpiDTe5lbAFQi66Welpb/Rkf78oWNN
6oFAEsr4cG1TLaJz8aztSAqEDt25jlF8vga7EaNWUgPh2Pn1kFHTWiTLWFmc
yAyEzzc7s8YtalFm2LcfNbcD4dfO/yR+2dQiz5H6QbdngXDT+WSCjg8+v1+G
VVH6AyGeXcDLm1yLfJ0++DrJBIGqnFfv185aJFJd/OFZQxAsD7wxiHesQxKX
l4OowiGQFerJmmHOQJ8oF4t/iYbA140vz7KeZaDbc8vvVSRDgCf35lKIJQMJ
2q8ce6gUAj45SXznLjAQl+aqQLZeCMR+/75rmxsDzc+sUfx8QyBtoqTaMhLf
n2xYWcUZIXD6VET37jsMdOlagobtf9izfbX+BQx0pIXV58brEFCGR6fr7jNQ
5UG2nq29ITDH9dbM9iEDlfCwF//7FgK6DpLyV58xUHrTRsMevlBwm5VgpNYz
kL3q5kySRyhsfSngbvmFgTT1LIievqGw/+VyvulXBuK3yIs+FRQKJlvYRY5/
Y6DWICUX7ouh0EeFdsVpBlJ/bq6enhYKaZJvqyYWGYhbJbfvelUoLDff/8fC
zkTVSgq7itnCYAMnz4uKvUyUpR26nbQpDK5ktFf6SjCRvwmdzXNrGHgVPrgk
KcVEkn5mU3JCYZCUbGCRvI+J0spC6E/kw8DYLfG2ljITuSrQHKrMw2DwsVSQ
ylEm2iFnUth4NwzEZ2cuHj3DRM4Hoo5tLwqDMmHNB41nmfj+VzRmXRoG7AIP
7htaMpGl4ere2cowOHTkq5AJvi/f9nmSv/N1GBxdnnFScGAi2adbb/gvhsFN
HSfqKW8min6pqUH5GwbjPXO2d3yYqK3WrZdtPQy6xjdmzfri8XfQ+W5tDodZ
4exHpADc35xfRoNYOKiLB/KkhTIRqLUnCZ8Kh2xN+om5S/g+f/SfrItpODz2
mNDdEsdEn4/JtDw5Ew46LMevScUzEfFsLMcx+3AYKXwjapjARG/ClC/7hYSD
q6wS0ZPIRGKxNhLVkeFwX1Cuxp3ERAFEIpM1NhyC+p/KOCUyEe+N4fUbieHw
lj0h0zCZic5Xp8XU54dDXYDQ+dlUJiplUHdtfRAOkyzmH9vTmGi5ZYJqVYLH
OzsSXZrORHcGdf5OvQiHBlO/v+fw+2L830yYUEs45HGJ5F/KZiINtl0Czm/D
gRY2ma2dw0QkboPKsu5w8BMfSfmLLb/77oLuUDjEeeh7u93A49M2C/BdCAeb
pLXMLblMNCym3277Oxy4X6+W3sM2ZdFUMlnB4+9sUlHLYyLFBokfShwRUBjS
eNHoNt6fQiFDMe4I2K7GotWNzU3c8mgbTwSErPI5nstnou8nl9xnd0bAzz9d
rafvMJG1/I//PolFAP+lTK5W7BbuEalOyQjQz04u0r7LRA/bW8eeKUXAjUzn
0V0FOJ7O5tsH60ZAon+UWtk9Juo5mEl3PhEB1+VrN3HeZ6JjQqTdZ4wiQO8h
TcYeW+J94Hu1cxGg9Xef+oYHTHStxk1TyiYCpq0P7jHBZsm3ucnvEAHsmdqG
OdifHPQtf3lGQP7f61YihXi+uppVX/wigOPP74NW2LUSyvx9wfj3njbGGdhK
7JIhTRERcAVN3PwP+/YXoe6XMRGwMaBh52/sLc1bDjwk4PX5vvOtVBETXSzZ
kHGDGAE5RTuem2J/T1qaIaVEAE9Wd0Moto3PD5PIjAg4VXyF7QZ2q/FImWdO
BER1m/lXYR9W7uW2zo2Abi5b1k7sku2vvU/djQCyXhd9AltovrZVszACv8/7
7/zFJnZXyMo/ioDlmOsPNhUz0VJFCUnkaQTsdNd4zYftlpM/wVURAbOTn3h2
YfeEZx5ffhUB7eNjYWLY+udJhT9oEaD7pem3KHaFZgzbR2YEOD0XytmJLbEr
yPlNUwSc5HEy3oGdueLGpLVFwJZW5d0bsTcM2+x90hkBLfe3sP3C4wmsM4vL
742ATFfi+gj2SIH+cOr7CCD27uNpxTZL0NSO/RQBFFqM2hPsWhfl2/7jEXBi
lMczFVv5uOSy/bcIOM4VWOaFnS8jbGM2g8e7Jr2ui71l01YK+onne7XWXhA7
5tsGYZU/EfDZ/b/WCbwfP14vhe9djYB7nk06FdivU0fUN3BGwjcODl3A1gzo
zZrnjgS+b8NtLNglp18vjPJEgkhDxwU6jg8SX+WzepFIkBzsJ8pjLy2WbK/Y
EwlWFsN7PuB4c+/L938gFQlt2h8oJGz9WyTFK8qRMPjl+lQPjlf5EAeNYbVI
CPkYecEPm8fkEBzWjISf6pr8G7A/snw9M3UsEmTy+OxFcLzXv6+1O3EqEvLm
yFN3cT6UVF73KDCNhKhDD+r2Yod6nrh41joS5uOalPlx/tjoiV19ah8JXc5C
rUScb7B7KW2TaySceA6Fizgft3QW3af5RwJtp5xIPc7fwkMbX0tdiYRDfSWz
kreYKHnH0LvYpEhQe8cfE3gT79ePyqGBtEg4bRJ8rBrXB627rvPkW5HwUndb
vOZ1HC8cjcK/nuLvd3DfYc1iIupInoRZZSR4qwTNyWYyUQE1RPERJRIeD+2N
NsT1yddfEuwacX+7xlTjcP1i70vw+G8wEr6LEDTKU3A+lNsE7fkUiev3W1SO
62FnkurFqPFIqB/wjitNwvmlPZamNBsJ2+jC9zJxPVUv0n2Zwx4FubVRgXKX
cX0IZdnovj8KPrEYlAVFMZGh6cA2hnoUeJcMaklHMpGK7DNhkSNRIBO8i6sn
nIlWPjgotutHQdbIc1tJXP+zj9Wd0bCJgqh/zf8S/ZmokTf2PsfVKDiTiY4E
OTPR0c4YqkEy7k+VI3XEkYlepF7sTkzH7e24aGOEz6O7m6JYuXOjwGTR1pvP
Fp9HayHO28ujYHwfIcHvHBMd+O4lITwYBV2vjI4YGeD9fOh5xHo4Cmr/Oa8F
H8fnhZuHRe7nKOgQSra5fgzv14hrwu6ZKIhWtvrcgZhostdhbC9bNHy9JRy0
7TCu/8xz9+WUouHEt/6CGnz+CsSdpXqrRoNZbtB6vjQTkbXOdD8+FA27dNrE
YiSZKOrVaVZlvWjgOyr1WGEPE519YuSsahUN/ZozhucFmYjrlq7EUUI08PJ8
IX9nY6KIQKX7xr3R+LzgIG75yEBbOH9Fqb2PBjLv7v9yBxmoIJ9mLvIpGtL5
yqul+xno9WujDZOT0fBO4mLbgW4G2i3t7Xh5JRrOqvBtk2xhoPrBYjGq5EXo
GN931a8Ct3dsb96+4IsQu3DqZB2Jge4J8GWzbo+BujSLfntZBooYeKkj6XIJ
1FxONowSalHjWMaHioJYGK638HRspqFYZQXFa0Wx8PviY7H3DPweif4vxr80
FsTKRrdYUfF7fMc/UbnKWKjxVmmxeYLfV+DieKc5FpIP2GmnZNGQ652DXxJn
YuEO97ribUcaYrd5P2OnFQfVl4YNP6zWoNqiUHRUNw6+TOwV7ftdgyLnt2UI
n4iDEOWYt73zNWgq8diBd2ZxcG9U99/nLzWo51VZyEmXOHgQS/qk1V6DCgXi
/qgmx8HPHd8O/Lhbg/S7JFk3DcTBxeu6eUkGNShM4N6q6VAcEB4PuDfo1qBi
a7G/OWO4/SPs19m1ahDnmPCc5HQc6DAETuer1CC3vxyzezbEg/WBB4lyIjVI
lmvl41HBeMiMuHDv1QwVQRnV5pNwPFgsjpv4faOi86ZRAwm74qHBR09EYZyK
kjKX3rXujYe0gUidukEq+i4y/9pKIR40imW+GP5HRU8UJqpDIB4WVpW8/+RT
UdPbQg2hY/GwvffatPotKhoOcKmkHo+HwsseKtHZVLStcqR8gxH2sprgnhQq
CtT6UJx+Lh4G3cZM30VSkapJZ/Zj73hg1/ItmTpHRdX+1MDP2fHAK3xlgV+I
ihwu2bVb34gHn5m0tCo+KuIgsyh23ooH3euZifY8VHTu0YmvtDvxcLs0pKh1
MxUtfO62u14SDzQh2R/sqxSkaP3D8BQtHtJ/rlTxfqGgdx5pJXW18SA1Wd93
ZIyCosMPcGgw4wEVuSX5fKKg1qwIpkRTPMAjhfKJQQpyb2c7vNIRD3v/yYJ+
BwUVHNstXf45Hkqmm7fdqaEgA4u6BOmJeGhnHDM8TaGgGUfnkbzJeLiVLHGQ
+xUFaceW5CVOx8OkttvuvBcU9L5andf5N55v05WTkqUURGjuDxj4Gw8Tc/mC
u0ooSLYv+q3pSjzoPe/O3VVMQRE/GYlHNxAgzWm+WeM+BfErm6zzcxPweGlV
vbkUVKM1Z5uylQDDb0OP8N2iIGejLOoGHgLIJG8Ot75BQc89B8Nm+Akg0P1s
B0s2BZk+cJtqFiOAcjuzryqVgpaebzLUEScAn27bFk0yBeUzHj+slCTAZy2j
pcZkCpoamne+J0uAkkd2I0skCkoSjh2MVsW/d8n+W59AQb4PMrfIHCQADVhZ
gwm4feWHqOsQAXJ27TiiEI/Hq99ZtE+bAEfxPYd2CffXPj7QjQjAK/T7R1YM
BQ1a/+WO1SPASedL7WEXKehOgERwjwEBJifPs56PoqD4fxpFcYYEsH3w2Ox8
JAW5XDUakDchgL5VDs05Aq9XXqgOwYIAR07zTeWEURCXTFKQ4jk8Hj7eR7Wh
FDT9LL+w34oA13h3XJwPoaAXTU1cynYEkJ/IsAgLpqBs8w/agw4EGDO2sGgK
wuv9cTbwijMBhnhzLohj23iwF+53I4AgIcqHGEhBWgvC/e89CJA4sifuVwAF
7bmkxEX0JsCltMwsf2zWTXraB/xwe6/PF837U9B4pmXgxwACPDZufRaL3Szq
84AUTICil0deCGCXlsT1qYYRoPAxW/FLPwoiq2VvHo4gQFh7dKITdkBtiVZS
NF4P5tI5QWyLU/QA9UsE6JBt5+r1pSD1nq77n+II8KfI6kE+tpDDRG9yAgHU
Pn7bFYj979u/TRpXCUBqehNojP0xdLvWKIkAU2l9+arYteuSAeRkAhxcKrkj
gX0v+fD9Q6l4/xO++O/GviJg0juWToCgGiWuvdjuBU6b0jIJYC0j6auEfUoh
/KhmDl4fQ48MfWzFl8n+4zcIIP0kL9gNe5vu3XvpuQRg63PaloE931bRcySf
AApGFxwasXssWzgn7hIg+P4eJ1Y8v5ejH49cu0+Ards+bzPEvuU776dVRIBb
dkUuedgxvzfe+/qQAOzW7jZL2PYJIj2ZpTgfWqRnbPB66m7dz6nzhACaIZ93
tmJzSJ73y35BAKXb56Xr8f5MPvEtQFUE4CzdvmyM97PtMOHd91cEcOVrPDuK
nWFaqqlLJwD3o6o4GRwfIYO1vlN1BNgQt/FEP7al67u7N+oJoNXQHn0Nx9Ou
6JWNM814PEHknRI4/tbYd2jeek2AbgPHyD/YI+nSvvpvCeDu4bt/IJyCiotM
u3O7CeByYSq9AsezSlfBHYMhAhy4PBc9iPPhw9uW8xOfCLB8UP3+Is4X4us5
3qtjBDD1lbojHIf3rwFI9V8J0Oe5czUa51viy5EA7QVcH9ozX5YQKUitYpP8
x0WcT46jo5sTKWi4XGU8+jcBWoT/vQhJwvHyKP589QoB1uvmlZxwvo/k7dVV
40yA2+qd7+9nUlDKzZPLXZsToOvUicSTuF5o5ARWBW5JAPN8vdKlHByfaQy5
pzsS4JZX/QFfXG8OExx55XYnQLdc9M2aArx+7gWfxQ4kAFvQC+6JZxR01KUl
n66WAJPO5rPbKyhowmHOylYjAUhytkO6VTifrOHNraMJoH7BgU7H9XPSaKSS
/0QClF76+Ia/gYLgwF4i14UEqM7euqrZT0E/lE7CI7sEEPz6SHcU1+fr8oH/
DBwTYFzw2p6Mj7heSTL8r7olQMo51mR2XN9vCjpasQQmQJuprYnBNAXNLd+V
XbqSAJekQjmUN1KRvFtZvQcJf/6uIklgExW5tlfbDiYlQEz5N102bioaKOjK
oKUlgI3M0cPz+LxhHGf7m3AzAcp1PNIERakoPd29dXtZAsQqqjkQNKhIWVLJ
W+5dAngtCr4u9aMiT7Ime15vAkgp7r1rHERF938dv7NlIAHG5pI//AylIsEW
++7Zjwmg7d8fYBFDRWu+GUdeTiTAxZIkIzN8Xr59+ZPr2L8EoDrPTeuWUpGv
IfWxrfhlKM8dUfvwg4pG9x/exSZ1Gf4bPcgXNUdFlgIvkx/JXIZdjmlGu39R
ke7Ic68lhctg1O/6IHgN9xf+aF+GxmVoz9NctNtRgxj3bj5oMLoMLabCSvsO
1yD+v+F58uGXoWljF+NYUg2iP1RL+fMat/fzCOP6IRp6LdviYux1BUiJCSxh
t+hofpfmhgT2q3AmscKsZaUW/bmw94kk51VQ0Z+6Vs5ah1huc1r/t/kq3DvJ
upC9qQ7x7O57tmn7VbC1GByx5q9DKrtDHNN3XgWxixTjNoU6FLj7Sd1t5atw
RS1tWc+mDs3uFo99df4qOLCJjhypqkPTopuXp8qugnR6etolFQa68rqH6FR+
FborNlh+UmUgkYgC3r7nV2FdYVUaHWSgk52H5OteXgXBc7s6/mgyUGGCu/U1
xlUInbR5d+YYA1342vDqYM9V2ELetb3oHAPhKh0au3wVBB4W/7sRyUCOdoYs
P1evQuXp5Z8vohloabMg2YOFCC21/GFtMQwk5fLkwemNRKA4HlxfjGegeIGP
3RLbiRDOkdwsl8RAh6I1DzRLEIFIbG8TvMVARccWp7cbEsFS65zD+EsGivQ9
YEYxJgKfh+REezUDGeb4P3M2IwKr+JO/VVQGmpmYDK46SwSapUBVVC0DaSQP
/bZxIIKH1T6W/v8YqKWzaUNxKBFKPOmcX94xUO5fNhezCCK8J98xuN7LQL4S
uo1/ooiwNzq9/Ri+f+8IrSEaxRGBveZNQdZ7BrIResY9n0SEn3nfRjaOMtCU
3S0BrbtEQP+stA9MM1AtsS/8yz0ilJe9YimaYaCMcr6BtEIiCH4hv+afY6CD
G9JyRx8RofTXlNPkAgPFFibsIVUSIVfir6rDHwba/sNHrruVCErGVQqJrEw0
xvco+eIbIjzUbMmm4vdDpdbED6kOvH7NPq2T7Ex0Ps3xaUQPEXj+7SId5sTv
wwPn1EQ/EcHZ7c9SITcTqUbqaHsuEuF0XVfXUz4mytrqGDu+RARuFP2GzM9E
i/cJdY5/ifj+tnfWXYCJXr5t1LVeI4JcO/+D7UL4fSZpdMJwEwmadH2uqIrg
92K1L6mJiwTnWdsvzWOvmaS16G0lwTx/GrlsFxMxIrsMj/KSwMK8b0RQFL/X
263MFHeTYIOJlyQNv4+KXKIySsRIsLKySLywl4k4/uZ2SYmTYMp6fnoJu0Vy
+IyoDAnU6Qa14hJMJEdZz74lS4LO7IeSz7GTTcX7BBRI8KPm8hUt/P4yiXI9
v02FBLJ5NBUDKSZ6uo14K1mVBKlSeyKbsHkKH77nOIj7u7u5Qhe/37rbv9uu
a5Lg0vaEZQUZJrKUCnKaO0YC1h0rdzvwe+8VJfO+7wkS5Bc7mijLMpGwWeXn
yZPYjUWfErHfR/12GzUhgYSBT9kBObw+23c+tDtNggsJ1Z/j5P7//7ojk4MW
JLD8Gfe3Fduh45J3txUJ/kkKUc3l8fq43n1sakOCs9QKp3RsiX+Mqde2JHin
5jragn05fUzJwIEEHctph9awx6XYAxqcSFBwKdd5vwITHadKP0OuJLgrNe1o
i11sZjBf406CjzenVa5ic37xVD3shddHSKbrEbZndHJIpQ8JelLc4TU2Lr6V
Kv4k0G0gXprAli96+6sskAR9ZHvSGjb5yKyGXAgJDr/6z5ZXkYmmO3gii8JI
sH1H9oo4tqmbKkU8Eu+n1z03Jexn/878y48mwfPU/66rY+/ICDsqcokEr00G
0g5hB0vfiLkeR4LpiOfGGtjvqNV03gQSNL6X7VDBVj/9fi3tCo4ffUGBfdg5
X5YRN4kEolfNRXdiL0WLEkhJ+PdeLyY4sK14UD0bmQQc9TyBc3i81UWObPFp
JGDa6Ff3YoscTdBfySAB3etw7Uvsi50PrkZmkeDGiBwhC7uwf8BkMocEe5Rk
unyx24e3Cp6/SYJy6f2ceth/vugNN+eSQOVFgQQftsR0RPGhfBKkUPskRvB+
GC+W+T+8S4JCGSXOR9hhy6MaQvdJ4Dq83u6H3bLZuHmpmASRnUkcP/D+L/AQ
0t0fkSDv/Z/QB9i7hF9a9T3G8dZ5ptEK219m72TVMxIc3a3NVonj66bSuWfS
FSQY0rs8fwGbqZ4cmVNFAudFqdp1HJ/8xxY3hVFJ4LEmPXcEW8dQrmuchtvP
/HG2G8ezh7n9rbN1JOAxe3jdDZvq0CKn3ojno2/3LA7H/7j76vyDJhJkx25M
5MDe6q9K5WslwePx9aNJOF8cY24b/nxLAsdDBocTcH4lX+7idekkQbW0Xvwf
nH8VyRwfurtJcPDYjwfe2By3An1e9JOAe3vhJT1xJiqr0icHjZKAQkThDDEm
6qNFnR39TILZieIbAtjrDU93m0/g9gqds91xfbDoFn6i8oMES8U64iu4fvyZ
mXo7u0iC7mbbzF/CeP2XxK87/CaBkeDRm3LYRquW9h1/SYDuaMVY4/p0h5s5
83SNBEktPCNluH7py+Zs99+UCCZRXXslePH67n/dP8SVCAMn/hM/uIOJbmis
3zXZmggznhbs+jxM9F3fS0WJNxHWSlqCzm1jogwnbfOpXYlQvkWA04CLiYZy
v2R6708EGdYnY24bmEhPjKyyXTURoj49uSXKgvPvnmp7hXoiQJZ3UucaAwWW
xG1e1UyE+7qXRWRXGIj95c74dP1EeBF19NCdJQZS6DLxq7ROhIv7BJYffsfn
w9lFLmvbRCi9xy3K/42BFvtzS1btE8FGIPT6xa/4PBn++vmEKx6vN1eu1jgD
WUwRbAb9E6HHxlqJNMRAUZwvDdYuJwJ5YvUNdDDQcLLtl/vERPhQvnbX5S0D
6W1ju2yQlAiDfyp/EdoYaIvA6dqMtEToO92i8byZgQokvqtL3sLf36zh/76O
gZq1xSROPk2E4+73SmzKGUgglLhybSARvp1SqFNMYaBNrjuiN39IhOIaT665
RAZaOXP7d/xQItjNvRksJzLQuNqLhYCxRJBQDOWXTmCgyp9DkyZTiTCStc9t
At8PLEIO9m5mSYLH94fXmt0YKD14/AlhXxKsFOp9l9ZmoM1Beg5B4UkQkbgo
2tBUhw4P6bwQjUoCCd7beecYdcjz1NGNry8mwZl9VqNjlDrUJK7+WIKQBIfU
Dm6cKatDCd3Sv9+lJIFq0tuAlsw6tKK2OV3jXhJ83X1/Js+uDs0sddQutyUB
7TM7Q22uFnXH2IkRxZOh2O0f246ttajq39n7Ma3J8PE43P1tSkNax0/ZzrYl
A4uaQyf9JA3Vp2sLOrcnwy85F2eSHg21S8kkG7xLBnketVEpDRqaNP0dxDuU
DJepBd3JojS0+8Et3ZK5ZIjbz3i6bboGXTEaHnknlAJVpqrjZ9JrENf17twT
IimQULJELMD3x2sjTWcpu1PgAvsWtYXLNehOWHnLHfEUmD66ZbAwsgZV341/
5qWQAtnhxi9POtegqZ8S8es6KSDE+f5btkYNOnPbY4+Cewrw7fvOnfaZivhd
3j7t9kyBG85vpmWGqahPTk0n2icF4i5F2TUPUJHNqzXb1sAUmAvdKrSnnYqc
u3NyPS6mwFnnLacUKFQUuKlRoDAjBXzv7frFyKAi1Q65IqOsFDgy+k53AN+3
F3PS1X/mpICcf1HPbyIVRUheOKOXlwKvcut+m12iolidhYyRohS4PCBi4OZN
Ramhe7eI1qRA+k7VIMUTVGR6lJjXSE8Bbwe+6je6VMTDOiXvy8Dz7Xr2IUyb
irLTX52q+Q9//475+zF1Krpdakqy7kyB/0pD8mWlqKh0JIb1+hc8Xt2wCS92
fN9/OHZNezIFTrNLPshjwe8L/5PiX76nQNcr/cq+FQp6vswH6nMpUO3794fn
LwqqFnx8qftfCrAdemS2NkFBzcaDf7bxkCHv55PW+TYKEo6X9EziJQO/wNWa
+RYK8qzw62cTIIPhoJjwv/8oiEuE9eWfnWR833+9R4pBQcZf5UPGJMnw8/Pt
tqFKCuomxExXHSLDFbMGke93KUiyqslW5QgZfE0ilILzKSh0kudNqRYZxMfo
A6x5FCRgVlR6V5cMQopaLDrXKej87naPJCMysPB51u5Kxe/Tl3vGbB3I8O/l
N8Nw/P7d/93LvN+JDHp7KvMToykoXrSSYe5KBj6HofwH+L0sfuXk3RNeZBh7
31XyM5SCXM2DbFVCyFDSMfBv2Y+Cqq7UtJWGkaHIjdB6xhe//6s3HpWOJENj
KOepSm8KeiiWu1PkEhnczajW6R4U9P1HfR8biQynlPbUPHHC79U9W0/EJpHB
rkGIy8gRv3ctrKr+pJDhRijXpnl7ClKi/MiaziCD02bJ7Va2FBQ7dZDNM4sM
+Td8BIUuUFD7nvjgsRwydARFtn6ypqBAIr95fy4Z3plWKKdYURCTYs8wzyfD
5tC2YT9LCuKdLtn/5i4ZFuViNKzPUVDFGe1tzEIyvCRfHDh1hoKW9rq3lT4l
w6feP02ZZhS0vamBKfycDBzutvRaUwqS9RGvJlaQIXHW6d+CCQXZVH0sdK7G
++GZqxtqTEEhNkfyOqlkqOUPOsk0wvNZv3FNh06Gk+oH0gWx606diRWpJ+Pz
pKp38BQFDcw8C01sJINwLF+3AfZC1jafpSa8nrL7OWtPUhC3pq+TaysZkHd1
sBa21HCrVXcbGeTr7XkbDChI+/I+U2gnw93yrs/m2JayV/WfdpJh9DljfPIE
BQW8HTuy+x0ZFE5+4E3ETgyGA8m9ZKiZ7/TZj31P6M6+P/1k6FQynx4+TkFU
2rKo+3syPLrInXMd+52TNX/PRxx/NuWOlthTHK+49D6RQVFs0kQMe2MZ/4Zn
o7j/KgGbGX0KEjMP/i06TobfrFYJTdiHlzqmUybI8LqjpaEY2zxPafzvJBnK
v5B2pWN7Q8p7jx9k0N72nBiHfeXLZGfvNBk28TmxRmLnJ59oPjaHx0OvTPm/
X+4vpD9fIENlf8seAnZHz4bKPb/IUC9PrbmGPRnlUJr6mwye8UW2pdgb9tAL
lv+SwcGreP01tkijyA2vFTLMSt279xNbzSsytX+NDHMvVJEUno/xtr7Lxzek
QgnnYo8ttluFWnQFWypYCsU65GPHnr8WKM6RCnp9Xh++YN9YnXFP35QK5YdP
H9fA6/nsvrHdKlcqfFJ9fSsN+/MUp+Hg9lTIr/u4aIn3Z+WaGxjwpsKLIw8X
m7AFDzVoVPGnQtk2ry4dvL8nCbGS13amwi52W74TOB6cZD7uXN+VCsS094G9
2NFtmjx+Yqkwqq1x29eQgsoEfq2clEwFug2vyQscX/9RLX6+lE6FxYDB1444
Hocdnn2Tkk2FuL9cnEI4XneU+vSxKKXCVPWRx7k4nuXNWt/470+F2Otx3J44
3vUXZRo+HkgFlXslItqnKShcZ6y8WiMVkG2F+po5BaV/RsUymqkwJ8h96LsF
BZUk5t/OPpoKiZPa/UM4f953n08KBDx/G/GRDzi/kEeHs6xhKogct7qtakNB
2Yl3lNuMU0HeKC0/FOfv5CO/f35mqSBRNulbh/M7Y4o7s+JsKuhmOtgHOFDQ
GE4jHYdUUOccnDjkRkEaWUKpo06p8E28qKLOnYJSKifOX3FNBd8dRntOe1KQ
+u8rc61euP2JwzXJPhREjGHuOReaCtV24+fcg/H48jN+/A5PBWqFqa8qrmf7
6xxe5UalQj/HzVmOcJyPG9ZMR2JTQZ+bKNkahdeHdCTWJykVhDWbUp8TcL25
VvGRcCcVthRY52/JoiCJioQSqXupYM/pHGybQ0ERPeahzQ9SoWhKwbDyBgXt
FZrj3vooFW5a801cvE1BwbcVj96sSIXVgVxu72K8/w+Lbj1tSYXZQOOxmhoK
sqfdsPywkApKsK+BdYqC9AyNWM1/pYJ77jvWrbMUJD2w9qTpdyqEvswOFF3A
+fjTbeOLlVSoM1egn/5DQVEK6pWJHGlQP37Fm2UjPv9yO3doiKSB2979ybF7
qKgtcvPbDN00+LZ8m9xynoqectAjOfTToNiTS4JsS0WZ2YFSMSfSQGy1TuCc
IxWdf9Z/0cMoDdZM51eWPKho4muRvM65NPAJmdoSHUFFrFZ6iT8800AlsVAv
4gYVHT548diJjDRwT1d+LvoB3xcu6slvzEqDJwMvMlhHqCisfvOOxpw0aFJ6
xD09TkUvzG4O6+alwduBY2XdM1Sk6F0VpV2cBhdYjsV9Yq1Be+/OlqvT0uBF
n1fhkkIN2rzZdbfkZBrcXT5NfUeoQSVmCmxj39Mge/6C/3lSDTpxfeFbwXQa
JBn9CR8l4/uSJOGV2M80uM3gtWW5WYPWtO9YiKylQSLPmGng0xq0EDyQuIM/
HbS07l7Z/rEGZVDuBnQKpkPGMVpyz2gN2s/iYZm+Mx1qxviP5n+tQb6pvyS3
7kmHlD1iAZo/a9DEQ966TfLpMLFZ4FceFw1dmRksalZMh1lGouglHhqSPHiP
TNyfDieuWN5yEqQhx/r9NuwH0yGzlM9BXYKG1jb9hoZD6fD59ZYsCVkayjer
3ZdwJB2OBIfM8Cnj++P1q9t0tdPhWJyx+yZ1Gnr/0fjXOkqHJ523Z9c1aeh/
Tzji5w==
       "]]},
     Annotation[#, "Charting`Private`Tag$18849#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"Time (days)\"", TraditionalForm], 
    FormBox["\"Number\"", TraditionalForm]},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 999.9999795918368}, {0., 0.3569329693198767}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.793152373168562*^9, {3.7931528124948378`*^9, 3.793152831416169*^9}, 
   3.793152926871936*^9},
 CellLabel->"Out[20]=",ExpressionUUID->"4c0165e9-b274-4685-a9b4-6c165a33ff5f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"be", "[", "t", "]"}], " ", "}"}], "/.", "\[InvisibleSpace]", 
     "sol3"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "1000"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "1000"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1000", ",", "7000"}], "}"}]}], "}"}]}], ",", " ", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", "Magenta", "}"}]}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", " ", 
    RowBox[{"{", 
     RowBox[{"\"\<Time (days)\>\"", ",", " ", "\"\<Number\>\""}], "}"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.793152632159461*^9, 3.7931526722161827`*^9}, {
  3.7931528384446545`*^9, 3.7931528386860065`*^9}, {3.7931529214117627`*^9, 
  3.7931529216159897`*^9}},
 CellLabel->"In[21]:=",ExpressionUUID->"2371eb9b-bffc-4547-946f-1a04b99f0f11"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[1, 0, 1], AbsoluteThickness[1.6], Opacity[1.], 
      LineBox[CompressedData["
1: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
       "]]},
     Annotation[#, "Charting`Private`Tag$18898#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"Time (days)\"", TraditionalForm], 
    FormBox["\"Number\"", TraditionalForm]},
  AxesOrigin->{0, 1000},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 1000}, {1000, 7000}},
  PlotRangeClipping->True,
  PlotRangePadding->{{0, 0}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.7931526476838007`*^9, 3.793152672914315*^9}, 
   3.7931528392606125`*^9, 3.7931529270913463`*^9},
 CellLabel->"Out[21]=",ExpressionUUID->"a75c34a5-a370-4edc-8aff-5fc2790a9fc0"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["BRN Stuff - Ooh Child!", "Section",
 CellChangeTimes->{{3.7932485948635607`*^9, 
  3.79324861822999*^9}},ExpressionUUID->"e6c77090-afad-438a-a8e1-\
4ee728e2fc15"],

Cell[BoxData[
 RowBox[{
  RowBox[{"fvMatrix", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", 
        RowBox[{"(", 
         RowBox[{"gc", "+", 
          RowBox[{"epsilon", "[", "t", "]"}]}], ")"}]}], ",", "0", ",", "0", 
       ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"epsilon", "[", "t", "]"}], ",", 
       RowBox[{"-", "gca"}], ",", 
       FractionBox[
        RowBox[{"ap", " ", "bpa", " ", 
         RowBox[{"(", 
          RowBox[{"1", "-", "n"}], ")"}], "np", " "}], "lambda"], ",", " ", 
       FractionBox[
        RowBox[{"kpa", " ", "np"}], "lambda"]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       FractionBox[
        RowBox[{"ap", " ", "bh", " ", 
         RowBox[{"(", 
          RowBox[{"1", "-", "n"}], ")"}], "nh", " "}], "lambda"], ",", 
       FractionBox[
        RowBox[{"ap", " ", "bha", " ", 
         RowBox[{"(", 
          RowBox[{"1", "-", "n"}], ")"}], "nh", " "}], "lambda"], " ", ",", 
       RowBox[{"-", "muc"}], " ", ",", 
       FractionBox[
        RowBox[{"kh", " ", "nh"}], "lambda"]}], " ", "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"vp", ",", " ", "vpa", ",", " ", "vh", ",", " ", 
       RowBox[{"-", "gb"}]}], "}"}]}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7932489483536825`*^9, 3.7932492394829955`*^9}, {
   3.7932493013260384`*^9, 3.7932493205296993`*^9}, {3.793249368239828*^9, 
   3.7932493949755135`*^9}, 3.7932498332386503`*^9},
 CellLabel->"In[3]:=",ExpressionUUID->"e9864d89-8a3e-4784-869e-762c64fe0566"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"fvMatrix", " ", "//", "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.7932493915893297`*^9, 3.793249403965509*^9}},
 CellLabel->"In[4]:=",ExpressionUUID->"a85d3062-3452-4a45-97ed-bfcf14341156"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{
       RowBox[{"-", "gc"}], "-", 
       RowBox[{"e0", " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"e1", " ", 
           RowBox[{"Sin", "[", 
            RowBox[{
             FractionBox["2", "365"], " ", "\[Pi]", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "240"}], "+", "t"}], ")"}]}], "]"}]}]}], 
         ")"}]}]}], "0", "0", "0"},
     {
      RowBox[{"e0", " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"e1", " ", 
          RowBox[{"Sin", "[", 
           RowBox[{
            FractionBox["2", "365"], " ", "\[Pi]", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "240"}], "+", "t"}], ")"}]}], "]"}]}]}], ")"}]}], 
      RowBox[{"-", "gca"}], 
      FractionBox[
       RowBox[{"ap", " ", "bpa", " ", 
        RowBox[{"(", 
         RowBox[{"1", "-", "n"}], ")"}], " ", "np"}], "lambda"], 
      FractionBox[
       RowBox[{"kpa", " ", "np"}], "lambda"]},
     {
      FractionBox[
       RowBox[{"ap", " ", "bh", " ", 
        RowBox[{"(", 
         RowBox[{"1", "-", "n"}], ")"}], " ", "nh"}], "lambda"], 
      FractionBox[
       RowBox[{"ap", " ", "bha", " ", 
        RowBox[{"(", 
         RowBox[{"1", "-", "n"}], ")"}], " ", "nh"}], "lambda"], 
      RowBox[{"-", "muc"}], 
      FractionBox[
       RowBox[{"kh", " ", "nh"}], "lambda"]},
     {"vp", "vpa", "vh", 
      RowBox[{"-", "gb"}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.793249404511284*^9, {3.7932978977402163`*^9, 3.7932979188554*^9}, 
   3.793306210874751*^9, 3.7933218512484336`*^9},
 CellLabel->
  "Out[4]//MatrixForm=",ExpressionUUID->"2766566e-0397-413d-8336-\
de577f0abef4"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"No", " ", "gamma_b"}], "*)"}]], "Input",
 CellChangeTimes->{{3.7933218862308693`*^9, 
  3.793321891183732*^9}},ExpressionUUID->"8d842270-8236-4dbe-a326-\
e8af3f617422"],

Cell[BoxData[
 RowBox[{
  RowBox[{"param2", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"e0", "\[Rule]", " ", "0.12"}], ",", " ", 
     RowBox[{"e1", "\[Rule]", " ", "0.25"}], ",", " ", 
     RowBox[{"thu", "\[Rule]", " ", "0.617"}], ",", " ", 
     RowBox[{"thua", "\[Rule]", " ", "0.349"}], ",", " ", 
     RowBox[{"thc", "\[Rule]", " ", "0.003"}], ",", " ", 
     RowBox[{"thca", "\[Rule]", " ", "0.031"}], ",", " ", 
     RowBox[{"gu", "\[Rule]", " ", "0.2"}], ",", 
     RowBox[{"gua", "\[Rule]", " ", "0.2"}], ",", " ", 
     RowBox[{"gc", "\[Rule]", " ", "0.06"}], ",", " ", 
     RowBox[{"gca", "\[Rule]", " ", "0.055"}], ",", " ", 
     RowBox[{"ap", "\[Rule]", " ", "0.0435"}], ",", " ", 
     RowBox[{"bp", "\[Rule]", " ", "0.42"}], ",", 
     RowBox[{"bpa", "\[Rule]", " ", 
      RowBox[{"0.42", "*", "1.67"}]}], ",", " ", 
     RowBox[{"bh", "\[Rule]", " ", "0.2"}], ",", " ", 
     RowBox[{"bha", "\[Rule]", " ", "0.25"}], ",", " ", 
     RowBox[{"n", "\[Rule]", " ", "0.4"}], ",", " ", 
     RowBox[{"muc", "\[Rule]", " ", "24"}], ",", " ", 
     RowBox[{"vp", "\[Rule]", " ", "235"}], ",", " ", 
     RowBox[{"vpa", "\[Rule]", " ", "470"}], ",", " ", 
     RowBox[{"vh", "\[Rule]", " ", "235"}], ",", " ", 
     RowBox[{"kp", "\[Rule]", " ", "0.000004"}], ",", " ", 
     RowBox[{"kpa", "\[Rule]", " ", "0.000005"}], ",", " ", 
     RowBox[{"kh", "\[Rule]", " ", "0.00001"}], ",", " ", 
     RowBox[{"np", "\[Rule]", " ", "23"}], ",", " ", 
     RowBox[{"nh", "\[Rule]", " ", "23"}]}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{3.793321881961873*^9},
 CellLabel->"In[5]:=",ExpressionUUID->"26cd6d30-5ca9-492c-befd-950964d8009d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"fvMatrix", "/.", "param2"}], "//", "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.7932494070386276`*^9, 3.7932494176405096`*^9}, 
   3.793249840666853*^9, {3.7933218981167192`*^9, 3.793321909597575*^9}},
 CellLabel->"In[6]:=",ExpressionUUID->"a8a0058e-3176-4746-b1cd-09dc525e2663"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{
       RowBox[{"-", "0.06`"}], "-", 
       RowBox[{"0.12`", " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"0.25`", " ", 
           RowBox[{"Sin", "[", 
            RowBox[{
             FractionBox["2", "365"], " ", "\[Pi]", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "240"}], "+", "t"}], ")"}]}], "]"}]}]}], 
         ")"}]}]}], "0", "0", "0"},
     {
      RowBox[{"0.12`", " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"0.25`", " ", 
          RowBox[{"Sin", "[", 
           RowBox[{
            FractionBox["2", "365"], " ", "\[Pi]", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "240"}], "+", "t"}], ")"}]}], "]"}]}]}], ")"}]}], 
      RowBox[{"-", "0.055`"}], 
      FractionBox["0.42105041999999987`", "lambda"], 
      FractionBox["0.000115`", "lambda"]},
     {
      FractionBox["0.12005999999999999`", "lambda"], 
      FractionBox["0.150075`", "lambda"], 
      RowBox[{"-", "24"}], 
      FractionBox["0.00023`", "lambda"]},
     {"235", "470", "235", 
      RowBox[{"-", "gb"}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.793322015097495*^9},
 CellLabel->
  "Out[6]//MatrixForm=",ExpressionUUID->"d30069cb-1eee-4279-aaa1-\
24e88e87cb8d"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"extraparam", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"gb", "\[Rule]", " ", "0.7"}], ",", " ", 
     RowBox[{"lambda", "\[Rule]", " ", "1.476"}], ",", " ", 
     RowBox[{"t", "\[Rule]", " ", 
      RowBox[{"2", "Pi"}]}]}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.793249603470462*^9, 3.793249614820613*^9}, {
   3.7932497662546897`*^9, 3.793249768349698*^9}, 3.7932498438705416`*^9, 
   3.7932500493422184`*^9, {3.7932978741363387`*^9, 3.7932978755385876`*^9}, {
   3.793297960785467*^9, 3.793297977442914*^9}, {3.7933028539743195`*^9, 
   3.793302872352826*^9}, {3.7933061971763897`*^9, 3.7933062290486507`*^9}, {
   3.793322449862732*^9, 3.79332245041608*^9}, {3.7933230355405307`*^9, 
   3.793323035994099*^9}, {3.7933230690514593`*^9, 3.793323107476762*^9}, 
   3.793325197485263*^9, {3.7933253514048166`*^9, 3.793325472742586*^9}, {
   3.7933779087579536`*^9, 3.7933779149388876`*^9}},
 CellLabel->
  "In[164]:=",ExpressionUUID->"15b725d6-2077-4dc6-82b0-722e3517993e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"testMat", " ", "=", " ", 
  RowBox[{
   RowBox[{"fvMatrix", "/.", "param2"}], "/.", "extraparam"}]}]], "Input",
 CellChangeTimes->{{3.7932494666001196`*^9, 3.793249495818406*^9}, {
   3.7932495512749662`*^9, 3.7932495516454735`*^9}, {3.793249612682415*^9, 
   3.7932496199723015`*^9}, 3.7933219050222583`*^9},
 CellLabel->
  "In[165]:=",ExpressionUUID->"663bb18d-be7d-4875-887e-5441d12615f4"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.20315380386845022`"}], ",", "0", ",", "0", ",", "0"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.14315380386845022`", ",", 
     RowBox[{"-", "0.055`"}], ",", "0.2852645121951219`", ",", 
     "0.00007791327913279133`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.08134146341463414`", ",", "0.10167682926829268`", ",", 
     RowBox[{"-", "24"}], ",", "0.00015582655826558266`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"235", ",", "470", ",", "235", ",", 
     RowBox[{"-", "0.7`"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.7932495557885914`*^9, 3.793249623897767*^9, {3.793249743261366*^9, 
   3.7932497712514544`*^9}, 3.793250060101448*^9, 3.7932978856822033`*^9, 
   3.7932979232385073`*^9, {3.7932979676182985`*^9, 3.793297984057336*^9}, {
   3.7933028632959948`*^9, 3.7933028808729925`*^9}, {3.793306214941876*^9, 
   3.7933062339216137`*^9}, 3.79332202521777*^9, {3.793323043616555*^9, 
   3.7933231092680583`*^9}, {3.7933253588166227`*^9, 3.793325474260973*^9}, 
   3.7933779227000413`*^9},
 CellLabel->
  "Out[165]=",ExpressionUUID->"cefc9216-2c09-4a46-a0c3-4bad522131d1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{
    RowBox[{"Max", "[", 
     RowBox[{"Eigenvalues", "[", 
      RowBox[{
       RowBox[{"MatrixExp", "[", 
        RowBox[{"testMat", " ", "t"}], "]"}], "/.", 
       RowBox[{"{", 
        RowBox[{"t", "\[Rule]", 
         RowBox[{"2", "Pi"}]}], "}"}]}], "]"}], "]"}], " ", "-", " ", "1"}], 
   " ", ")"}], "*", "100"}]], "Input",
 CellChangeTimes->{{3.79332087174107*^9, 3.793320873012794*^9}, 
   3.7933220492091036`*^9, {3.7933254334430637`*^9, 3.793325436852455*^9}},
 CellLabel->
  "In[166]:=",ExpressionUUID->"39902e08-b0a2-4202-83bd-a59de671f85f"],

Cell[BoxData[
 RowBox[{"-", "0.0023243136114681207`"}]], "Output",
 CellChangeTimes->{{3.79332204374547*^9, 3.793322049800519*^9}, {
   3.7933230450008545`*^9, 3.793323110360138*^9}, {3.7933253599043064`*^9, 
   3.7933254752385974`*^9}, 3.7933779242108946`*^9},
 CellLabel->
  "Out[166]=",ExpressionUUID->"d3f7b75d-8cf1-4d5a-b772-4a82c6541743"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"MatrixExp", "[", 
    RowBox[{"testMat", " ", "t"}], "]"}], "/.", "extraparam"}], "//", 
  "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.793249648297855*^9, 3.793249680649396*^9}},
 CellLabel->
  "In[167]:=",ExpressionUUID->"e674d8ad-2a76-417f-9e73-fb88119ea0d0"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0.279025251088173`", "3.359346532955447`*^-14", 
      "4.410554580862246`*^-16", "4.270691791523977`*^-18"},
     {"0.5563182705775314`", "0.9290138297428658`", "0.012071148121217248`", 
      "0.00010508140315802566`"},
     {"0.006176015552322116`", "0.007963384332321658`", 
      "0.00010409856078561645`", "9.64356411459112`*^-7"},
     {"443.3375988520264`", "620.484019437679`", "8.156110557966684`", 
      "0.07971577723245385`"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.793249663056473*^9, 3.7932496824459486`*^9}, {
   3.793249743905177*^9, 3.7932497729113317`*^9}, 3.7932500602353506`*^9, 
   3.793297885860221*^9, 3.7932979245047407`*^9, {3.7932979683033514`*^9, 
   3.7932979841908693`*^9}, 3.7933023439428077`*^9, 3.793302519934841*^9, 
   3.7933026822591887`*^9, {3.793302863420661*^9, 3.793302881007634*^9}, {
   3.793306216477768*^9, 3.7933062354605284`*^9}, 3.7933779274056206`*^9},
 CellLabel->
  "Out[167]//MatrixForm=",ExpressionUUID->"61e4a000-39a8-4a7b-8e15-\
9fb82f5f6500"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Eigenvalues", "[", "%", "]"}]], "Input",
 CellChangeTimes->{{3.7932497142168145`*^9, 3.7932497178088074`*^9}},
 CellLabel->
  "In[168]:=",ExpressionUUID->"6247bf08-9d84-416f-ad3a-d8f4e2d4384e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.9999767568638853`", ",", "0.2790252510881445`", ",", 
   "0.00885694867224905`", ",", 
   RowBox[{"-", "4.267918586869139`*^-20"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.7932497184283514`*^9, 3.7932497441266108`*^9}, 
   3.79324977461565*^9, 3.793250060403494*^9, 3.7932978860795517`*^9, 
   3.793297925716447*^9, {3.7932979684481173`*^9, 3.793297984329496*^9}, 
   3.793302345781888*^9, 3.7933025211635537`*^9, 3.7933026824494743`*^9, {
   3.793302863575249*^9, 3.793302881147262*^9}, {3.7933062181562815`*^9, 
   3.7933062367071657`*^9}, 3.793377928849065*^9},
 CellLabel->
  "Out[168]=",ExpressionUUID->"8879d434-42c4-4318-81a7-94216392a84a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Max", "[", "%", "]"}]], "Input",
 CellChangeTimes->{{3.7933023472001357`*^9, 3.793302349457243*^9}},
 CellLabel->
  "In[169]:=",ExpressionUUID->"6e8588c7-f57e-4b1d-b0a6-ed25cfc12c44"],

Cell[BoxData["0.9999767568638853`"], "Output",
 CellChangeTimes->{
  3.7933023499507403`*^9, 3.7933025221439333`*^9, 3.7933026826130366`*^9, {
   3.7933028637218556`*^9, 3.7933028812908754`*^9}, {3.7933062198098636`*^9, 
   3.7933062378132076`*^9}, 3.793377930278165*^9},
 CellLabel->
  "Out[169]=",ExpressionUUID->"84ff10c4-172e-4ca7-acd8-8bad85a1616c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Abs", "[", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"1", "-", "%"}], ")"}], "*", "100"}], "]"}]], "Input",
 CellChangeTimes->{{3.7933024204164*^9, 3.793302481977659*^9}},
 CellLabel->
  "In[170]:=",ExpressionUUID->"8c6ac487-1249-453b-84e1-86087751e837"],

Cell[BoxData["0.0023243136114681207`"], "Output",
 CellChangeTimes->{
  3.7933024600535755`*^9, 3.7933025230734463`*^9, 3.793302682794614*^9, {
   3.793302863891403*^9, 3.7933028814534407`*^9}, 3.793306238906316*^9, 
   3.7933779322486286`*^9},
 CellLabel->
  "Out[170]=",ExpressionUUID->"1522c504-a089-40ce-80a2-528f90b476c4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Abs", "[", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Max", "[", 
      RowBox[{"Eigenvalues", "[", 
       RowBox[{
        RowBox[{"MatrixExp", "[", 
         RowBox[{"testMat", " ", "t"}], "]"}], "/.", 
        RowBox[{"{", 
         RowBox[{"t", "\[Rule]", 
          RowBox[{"2", "Pi"}]}], "}"}]}], "]"}], "]"}], " ", "-", " ", "1"}], 
    " ", ")"}], "*", "100"}], "]"}]], "Input",
 CellChangeTimes->{{3.793304057548301*^9, 3.7933040625439415`*^9}},
 CellLabel->"In[94]:=",ExpressionUUID->"7033de58-68c4-48f5-8dc3-e04bdab44a03"],

Cell[BoxData["0.09323075789955393`"], "Output",
 CellChangeTimes->{3.79330342480774*^9, 3.7933040634644804`*^9, 
  3.79330624018786*^9},
 CellLabel->"Out[94]=",ExpressionUUID->"30d91521-6730-4345-b174-8753894114aa"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"%", "<", "0.01"}]], "Input",
 CellChangeTimes->{{3.7933024846738167`*^9, 3.7933025141835375`*^9}, 
   3.7933026778986454`*^9, 3.793302848600695*^9},
 CellLabel->"In[71]:=",ExpressionUUID->"8ce1ae3c-266b-4ef8-b91c-3ded6297a9f8"],

Cell[BoxData["False"], "Output",
 CellChangeTimes->{{3.793302507247087*^9, 3.7933025240758*^9}, 
   3.7933026829471426`*^9, {3.793302864013077*^9, 3.7933028815811005`*^9}},
 CellLabel->"Out[71]=",ExpressionUUID->"dc9d66de-5e7d-435e-9c53-d1baad104e6b"]
}, Open  ]],

Cell[CellGroupData[{

Cell["BRN - Figure 8 (a)", "Subsection",
 CellChangeTimes->{{3.7932980023333654`*^9, 
  3.79329800974263*^9}},ExpressionUUID->"f3dc2d83-1900-40e6-af6d-\
e6f0964a57d9"],

Cell[BoxData[
 RowBox[{"Remove", "[", "funcgb", "]"}]], "Input",
 CellChangeTimes->{{3.7933237864803934`*^9, 3.7933237917875624`*^9}},
 CellLabel->
  "In[103]:=",ExpressionUUID->"42642cf3-ccd7-49ef-ac5b-0f1fa284dc0f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"funcgb", "[", "gbval_", "]"}], ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "param", ",", "fvMatrix", ",", " ", "extraparam", ",", "val1", ",", 
      "testMat", ",", "start"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"param", "=", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"e0", "\[Rule]", " ", "0.12"}], ",", " ", 
        RowBox[{"e1", "\[Rule]", " ", "0.25"}], ",", " ", 
        RowBox[{"thu", "\[Rule]", " ", "0.617"}], ",", " ", 
        RowBox[{"thua", "\[Rule]", " ", "0.349"}], ",", " ", 
        RowBox[{"thc", "\[Rule]", " ", "0.003"}], ",", " ", 
        RowBox[{"thca", "\[Rule]", " ", "0.031"}], ",", " ", 
        RowBox[{"gu", "\[Rule]", " ", "0.2"}], ",", 
        RowBox[{"gua", "\[Rule]", " ", "0.2"}], ",", " ", 
        RowBox[{"gc", "\[Rule]", " ", "0.06"}], ",", " ", 
        RowBox[{"gca", "\[Rule]", " ", "0.055"}], ",", " ", 
        RowBox[{"ap", "\[Rule]", " ", "0.0435"}], ",", " ", 
        RowBox[{"bp", "\[Rule]", " ", "0.42"}], ",", 
        RowBox[{"bpa", "\[Rule]", " ", 
         RowBox[{"0.42", "*", "1.67"}]}], ",", " ", 
        RowBox[{"bh", "\[Rule]", " ", "0.2"}], ",", " ", 
        RowBox[{"bha", "\[Rule]", " ", "0.25"}], ",", " ", 
        RowBox[{"n", "\[Rule]", " ", "0.4"}], ",", " ", 
        RowBox[{"muc", "\[Rule]", " ", "24"}], ",", " ", 
        RowBox[{"vp", "\[Rule]", " ", "235"}], ",", " ", 
        RowBox[{"vpa", "\[Rule]", " ", "470"}], ",", " ", 
        RowBox[{"vh", "\[Rule]", " ", "235"}], ",", " ", 
        RowBox[{"kp", "\[Rule]", " ", "0.000004"}], ",", " ", 
        RowBox[{"kpa", "\[Rule]", " ", "0.000005"}], ",", " ", 
        RowBox[{"kh", "\[Rule]", " ", "0.00001"}], ",", " ", 
        RowBox[{"np", "\[Rule]", " ", "23"}], ",", " ", 
        RowBox[{"nh", "\[Rule]", " ", "23"}]}], "}"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"theta", "[", "t", "]"}], " ", "=", " ", 
      RowBox[{
       RowBox[{"gu", "*", 
        RowBox[{"pu", "[", "t", "]"}]}], " ", "+", " ", 
       RowBox[{"gc", "*", 
        RowBox[{"pc", "[", "t", "]"}]}], " ", "+", 
       RowBox[{"gua", "*", 
        RowBox[{"pua", "[", "t", "]"}]}], " ", "+", " ", 
       RowBox[{"gca", "*", 
        RowBox[{"pca", "[", "t", "]"}]}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"epsilon", "[", "t", "]"}], " ", "=", " ", 
      RowBox[{"e0", "*", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"e1", "*", 
          RowBox[{"Sin", "[", 
           RowBox[{
            FractionBox[
             RowBox[{"2", "Pi"}], "365"], "*", 
            RowBox[{"(", 
             RowBox[{"t", "-", "240"}], ")"}]}], "]"}]}]}], ")"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"fvMatrix", " ", "=", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", 
           RowBox[{"(", 
            RowBox[{"gc", "+", 
             RowBox[{"epsilon", "[", "t", "]"}]}], ")"}]}], ",", "0", ",", 
          "0", ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"epsilon", "[", "t", "]"}], ",", 
          RowBox[{"-", "gca"}], ",", 
          FractionBox[
           RowBox[{"ap", " ", "bpa", " ", 
            RowBox[{"(", 
             RowBox[{"1", "-", "n"}], ")"}], "np", " "}], "lambda"], ",", " ", 
          FractionBox[
           RowBox[{"kpa", " ", "np"}], "lambda"]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          FractionBox[
           RowBox[{"ap", " ", "bh", " ", 
            RowBox[{"(", 
             RowBox[{"1", "-", "n"}], ")"}], "nh", " "}], "lambda"], ",", 
          FractionBox[
           RowBox[{"ap", " ", "bha", " ", 
            RowBox[{"(", 
             RowBox[{"1", "-", "n"}], ")"}], "nh", " "}], "lambda"], " ", ",", 
          RowBox[{"-", "muc"}], " ", ",", 
          FractionBox[
           RowBox[{"kh", " ", "nh"}], "lambda"]}], " ", "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"vp", ",", " ", "vpa", ",", " ", "vh", ",", " ", 
          RowBox[{"-", "gb"}]}], "}"}]}], "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"start", " ", "=", "1.710"}], ";", "\[IndentingNewLine]", 
     RowBox[{"extraparam", " ", "=", "  ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"gb", "\[Rule]", " ", "gbval"}], ",", " ", 
        RowBox[{"lambda", "\[Rule]", " ", "start"}], ",", " ", 
        RowBox[{"t", "\[Rule]", " ", 
         RowBox[{"2", "Pi"}]}]}], "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"testMat", " ", "=", " ", 
      RowBox[{
       RowBox[{"fvMatrix", "/.", "param"}], "/.", "extraparam"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"While", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Abs", "[", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Max", "[", 
             RowBox[{"Eigenvalues", "[", 
              RowBox[{
               RowBox[{"MatrixExp", "[", 
                RowBox[{"testMat", " ", "t"}], "]"}], "/.", 
               RowBox[{"{", 
                RowBox[{"t", "\[Rule]", 
                 RowBox[{"2", "Pi"}]}], "}"}]}], "]"}], "]"}], " ", "-", " ", 
            "1"}], " ", ")"}], "*", "100"}], "]"}], ">", "0.04"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"start", " ", "=", " ", 
         RowBox[{"start", " ", "-", "0.001"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"extraparam", " ", "=", "  ", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"gb", "\[Rule]", " ", "gbval"}], ",", " ", 
           RowBox[{"lambda", "\[Rule]", " ", "start"}], ",", " ", 
           RowBox[{"t", "\[Rule]", " ", 
            RowBox[{"2", "Pi"}]}]}], "}"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"testMat", " ", "=", " ", 
         RowBox[{
          RowBox[{"fvMatrix", "/.", "param"}], "/.", "extraparam"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"maybe", " ", "=", " ", "start"}], ";"}]}], 
      "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"Return", "[", 
      RowBox[{"start", "-", "0.001"}], "]"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.793301678139467*^9, 3.793301709030758*^9}, {
   3.793301903792627*^9, 3.793302048256239*^9}, {3.793302822408986*^9, 
   3.7933028362667637`*^9}, {3.7933032153852034`*^9, 3.7933032440007324`*^9}, 
   3.7933032873139095`*^9, {3.793303319884988*^9, 3.793303409560515*^9}, {
   3.7933034490938115`*^9, 3.793303454489359*^9}, {3.793303774362136*^9, 
   3.7933038445998497`*^9}, {3.793304073856694*^9, 3.7933040774870243`*^9}, {
   3.793305540887975*^9, 3.7933055969260445`*^9}, {3.7933056384490027`*^9, 
   3.7933057224080067`*^9}, {3.7933058115145235`*^9, 3.793305829186271*^9}, {
   3.79332336800239*^9, 3.793323368861221*^9}, {3.7933234850855083`*^9, 
   3.7933234951065054`*^9}, {3.793323598738939*^9, 3.7933236074405375`*^9}, {
   3.793323750503416*^9, 3.7933237509781127`*^9}, {3.793325065726738*^9, 
   3.793325076226973*^9}, {3.793325261050844*^9, 3.793325263269373*^9}, {
   3.793325514285653*^9, 3.793325514799481*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"5b25d415-e4ac-4f56-a49d-c9b4355258ef"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"funcgb", "[", "0.7", "]"}]], "Input",
 CellChangeTimes->{{3.7933237562946553`*^9, 3.793323761387023*^9}},
 CellLabel->"In[2]:=",ExpressionUUID->"7df268b8-60b0-49bc-ac86-ff171b9997ba"],

Cell[BoxData["1.4760000000000257`"], "Output",
 CellChangeTimes->{{3.793323775152436*^9, 3.793323796095107*^9}, 
   3.7933252668369055`*^9, 3.7933255204259677`*^9, 3.8410788648158445`*^9},
 CellLabel->"Out[2]=",ExpressionUUID->"3b590397-932a-4cb2-b6d4-1ac443500696"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"testData1", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"(", 
        RowBox[{"funcgb", "[", "x", "]"}], ")"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0.6", ",", "1", ",", "0.05"}], "}"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.7933240171702533`*^9, 3.793324058140566*^9}, {
  3.793324290319997*^9, 3.79332429380053*^9}, {3.7933247934489317`*^9, 
  3.793324793989582*^9}, {3.79332513375016*^9, 3.793325134058814*^9}},
 CellLabel->"In[3]:=",ExpressionUUID->"1beceffa-1c66-4a18-bf83-9198414d47ae"],

Cell[CellGroupData[{

Cell[BoxData["testData1"], "Input",
 CellChangeTimes->{{3.7933240846179504`*^9, 3.7933240858007517`*^9}},
 CellLabel->
  "In[107]:=",ExpressionUUID->"98d5f8c9-a2ea-4d15-a52a-5d1da1f0f54a"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0.6`", ",", "1.7070000000000003`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.65`", ",", "1.583000000000014`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.7`", ",", "1.4760000000000257`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.75`", ",", "1.3840000000000359`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.8`", ",", "1.3040000000000447`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.85`", ",", "1.2330000000000525`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.9`", ",", "1.1710000000000593`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.95`", ",", "1.1150000000000655`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.`", ",", "1.065000000000071`"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.7933240863258677`*^9, 3.793324302932541*^9, 
  3.7933248438053975`*^9, 3.7933252774252105`*^9, 3.793325530615497*^9},
 CellLabel->
  "Out[107]=",ExpressionUUID->"fad64c7a-650c-4823-8d82-8ff10dd68d18"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListLinePlot", "[", 
  RowBox[{"testData1", ",", " ", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Disinfection Rate of Environment\>\"", ",", 
      "\"\<Basic Reproduction Number\>\""}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.793324095045204*^9, 3.793324109920904*^9}, {
  3.8410788846254125`*^9, 3.8410789701103086`*^9}},
 CellLabel->"In[8]:=",ExpressionUUID->"cce0d9a5-dd6f-47d1-8dac-6212eeec6d36"],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      NCache[
       Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
     LineBox[{{0.6, 1.7070000000000003`}, {0.65, 1.583000000000014}, {0.7, 
      1.4760000000000257`}, {0.75, 1.3840000000000359`}, {0.8, 
      1.3040000000000447`}, {0.85, 1.2330000000000525`}, {0.9, 
      1.1710000000000593`}, {0.95, 1.1150000000000655`}, {1., 
      1.065000000000071}}]}}, {}, {}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"Disinfection Rate of Environment\"", TraditionalForm], 
    FormBox["\"Basic Reproduction Number\"", TraditionalForm]},
  AxesOrigin->{0.59375, 1.0329000000000745`},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->{614., Automatic},
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0.6, 1.}, {1.065000000000071, 1.7070000000000003`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.793324105961289*^9, 3.793324110473428*^9}, 
   3.7933243043540897`*^9, 3.793324844028801*^9, 3.7933252784425173`*^9, 
   3.7933255318000884`*^9, {3.8410788740412207`*^9, 3.841078890032119*^9}, {
   3.841078939481643*^9, 3.8410789723032026`*^9}},
 CellLabel->"Out[8]=",ExpressionUUID->"6f0c8fb5-80bc-4863-b062-5ff02cadc060"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["BRN - Figure 8 (b)", "Subsection",
 CellChangeTimes->{{3.7932980023333654`*^9, 3.79329800974263*^9}, {
  3.793325720707017*^9, 
  3.793325720896491*^9}},ExpressionUUID->"c4e638b9-6574-4db1-b89c-\
e8bf24d75d65"],

Cell[BoxData[
 RowBox[{"Remove", "[", "funcvpa", "]"}]], "Input",
 CellChangeTimes->{{3.7933237864803934`*^9, 3.7933237917875624`*^9}, {
  3.793325748078021*^9, 3.7933257524105945`*^9}},
 CellLabel->"In[9]:=",ExpressionUUID->"6d8796e0-c51e-4ab9-87f0-ae6dbfa63389"],

Cell[BoxData[
 RowBox[{
  RowBox[{"funcvpa", "[", "vpaval_", "]"}], ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "param", ",", "fvMatrix", ",", " ", "extraparam", ",", "val1", ",", 
      "testMat", ",", "start"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"param", "=", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"e0", "\[Rule]", " ", "0.12"}], ",", " ", 
        RowBox[{"e1", "\[Rule]", " ", "0.25"}], ",", " ", 
        RowBox[{"thu", "\[Rule]", " ", "0.617"}], ",", " ", 
        RowBox[{"thua", "\[Rule]", " ", "0.349"}], ",", " ", 
        RowBox[{"thc", "\[Rule]", " ", "0.003"}], ",", " ", 
        RowBox[{"thca", "\[Rule]", " ", "0.031"}], ",", " ", 
        RowBox[{"gu", "\[Rule]", " ", "0.2"}], ",", 
        RowBox[{"gua", "\[Rule]", " ", "0.2"}], ",", " ", 
        RowBox[{"gc", "\[Rule]", " ", "0.06"}], ",", " ", 
        RowBox[{"gca", "\[Rule]", " ", "0.055"}], ",", " ", 
        RowBox[{"gb", "\[Rule]", " ", "0.7"}], ",", 
        RowBox[{"ap", "\[Rule]", " ", "0.0435"}], ",", " ", 
        RowBox[{"bp", "\[Rule]", " ", "0.42"}], ",", 
        RowBox[{"bpa", "\[Rule]", " ", 
         RowBox[{"0.42", "*", "1.67"}]}], ",", " ", 
        RowBox[{"bh", "\[Rule]", " ", "0.2"}], ",", " ", 
        RowBox[{"bha", "\[Rule]", " ", "0.25"}], ",", " ", 
        RowBox[{"n", "\[Rule]", " ", "0.4"}], ",", " ", 
        RowBox[{"muc", "\[Rule]", " ", "24"}], ",", " ", 
        RowBox[{"vp", "\[Rule]", " ", "235"}], ",", " ", 
        RowBox[{"vh", "\[Rule]", " ", "235"}], ",", " ", 
        RowBox[{"kp", "\[Rule]", " ", "0.000004"}], ",", " ", 
        RowBox[{"kpa", "\[Rule]", " ", "0.000005"}], ",", " ", 
        RowBox[{"kh", "\[Rule]", " ", "0.00001"}], ",", " ", 
        RowBox[{"np", "\[Rule]", " ", "23"}], ",", " ", 
        RowBox[{"nh", "\[Rule]", " ", "23"}]}], "}"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"theta", "[", "t", "]"}], " ", "=", " ", 
      RowBox[{
       RowBox[{"gu", "*", 
        RowBox[{"pu", "[", "t", "]"}]}], " ", "+", " ", 
       RowBox[{"gc", "*", 
        RowBox[{"pc", "[", "t", "]"}]}], " ", "+", 
       RowBox[{"gua", "*", 
        RowBox[{"pua", "[", "t", "]"}]}], " ", "+", " ", 
       RowBox[{"gca", "*", 
        RowBox[{"pca", "[", "t", "]"}]}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"epsilon", "[", "t", "]"}], " ", "=", " ", 
      RowBox[{"e0", "*", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"e1", "*", 
          RowBox[{"Sin", "[", 
           RowBox[{
            FractionBox[
             RowBox[{"2", "Pi"}], "365"], "*", 
            RowBox[{"(", 
             RowBox[{"t", "-", "240"}], ")"}]}], "]"}]}]}], ")"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"fvMatrix", " ", "=", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", 
           RowBox[{"(", 
            RowBox[{"gc", "+", 
             RowBox[{"epsilon", "[", "t", "]"}]}], ")"}]}], ",", "0", ",", 
          "0", ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"epsilon", "[", "t", "]"}], ",", 
          RowBox[{"-", "gca"}], ",", 
          FractionBox[
           RowBox[{"ap", " ", "bpa", " ", 
            RowBox[{"(", 
             RowBox[{"1", "-", "n"}], ")"}], "np", " "}], "lambda"], ",", " ", 
          FractionBox[
           RowBox[{"kpa", " ", "np"}], "lambda"]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          FractionBox[
           RowBox[{"ap", " ", "bh", " ", 
            RowBox[{"(", 
             RowBox[{"1", "-", "n"}], ")"}], "nh", " "}], "lambda"], ",", 
          FractionBox[
           RowBox[{"ap", " ", "bha", " ", 
            RowBox[{"(", 
             RowBox[{"1", "-", "n"}], ")"}], "nh", " "}], "lambda"], " ", ",", 
          RowBox[{"-", "muc"}], " ", ",", 
          FractionBox[
           RowBox[{"kh", " ", "nh"}], "lambda"]}], " ", "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"vp", ",", " ", "vpa", ",", " ", "vh", ",", " ", 
          RowBox[{"-", "gb"}]}], "}"}]}], "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"start", " ", "=", "0.800"}], ";", "\[IndentingNewLine]", 
     RowBox[{"extraparam", " ", "=", "  ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"vpa", "\[Rule]", " ", "vpaval"}], ",", " ", 
        RowBox[{"lambda", "\[Rule]", " ", "start"}], ",", " ", 
        RowBox[{"t", "\[Rule]", " ", 
         RowBox[{"2", "Pi"}]}]}], "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"testMat", " ", "=", " ", 
      RowBox[{
       RowBox[{"fvMatrix", "/.", "param"}], "/.", "extraparam"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"While", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Abs", "[", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Max", "[", 
             RowBox[{"Eigenvalues", "[", 
              RowBox[{
               RowBox[{"MatrixExp", "[", 
                RowBox[{"testMat", " ", "t"}], "]"}], "/.", 
               RowBox[{"{", 
                RowBox[{"t", "\[Rule]", 
                 RowBox[{"2", "Pi"}]}], "}"}]}], "]"}], "]"}], " ", "-", " ", 
            "1"}], " ", ")"}], "*", "100"}], "]"}], ">", "0.04"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"start", " ", "=", " ", 
         RowBox[{"start", " ", "+", "0.001"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"extraparam", " ", "=", "  ", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"vpa", "\[Rule]", " ", "vpaval"}], ",", " ", 
           RowBox[{"lambda", "\[Rule]", " ", "start"}], ",", " ", 
           RowBox[{"t", "\[Rule]", " ", 
            RowBox[{"2", "Pi"}]}]}], "}"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"testMat", " ", "=", " ", 
         RowBox[{
          RowBox[{"fvMatrix", "/.", "param"}], "/.", "extraparam"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"maybe", " ", "=", " ", "start"}], ";"}]}], 
      "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"Return", "[", 
      RowBox[{"start", "-", "0.001"}], "]"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.793301678139467*^9, 3.793301709030758*^9}, {
   3.793301903792627*^9, 3.793302048256239*^9}, {3.793302822408986*^9, 
   3.7933028362667637`*^9}, {3.7933032153852034`*^9, 3.7933032440007324`*^9}, 
   3.7933032873139095`*^9, {3.793303319884988*^9, 3.793303409560515*^9}, {
   3.7933034490938115`*^9, 3.793303454489359*^9}, {3.793303774362136*^9, 
   3.7933038445998497`*^9}, {3.793304073856694*^9, 3.7933040774870243`*^9}, {
   3.793305540887975*^9, 3.7933055969260445`*^9}, {3.7933056384490027`*^9, 
   3.7933057224080067`*^9}, {3.7933058115145235`*^9, 3.793305829186271*^9}, {
   3.79332336800239*^9, 3.793323368861221*^9}, {3.7933234850855083`*^9, 
   3.7933234951065054`*^9}, {3.793323598738939*^9, 3.7933236074405375`*^9}, {
   3.793323750503416*^9, 3.7933237509781127`*^9}, {3.793325065726738*^9, 
   3.793325076226973*^9}, {3.793325261050844*^9, 3.793325263269373*^9}, {
   3.793325514285653*^9, 3.793325514799481*^9}, {3.793325756308627*^9, 
   3.7933258110203443`*^9}, {3.793325859344008*^9, 3.793325882056994*^9}, {
   3.7933259328093724`*^9, 3.7933259377891083`*^9}},
 CellLabel->"In[10]:=",ExpressionUUID->"70a310c6-0197-408e-9218-5c4911f9fdd6"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"funcvpa", "[", "300", "]"}]], "Input",
 CellChangeTimes->{{3.7933237562946553`*^9, 3.793323761387023*^9}, {
  3.793325980724701*^9, 3.793325981108709*^9}, {3.7933260146654797`*^9, 
  3.79332601606397*^9}},
 CellLabel->"In[11]:=",ExpressionUUID->"d718b620-81c3-47e6-967b-2a819b5a0f13"],

Cell[BoxData["0.9830000000000002`"], "Output",
 CellChangeTimes->{{3.793323775152436*^9, 3.793323796095107*^9}, 
   3.7933252668369055`*^9, 3.7933255204259677`*^9, {3.793326012121815*^9, 
   3.793326017052288*^9}, 3.841079296352358*^9},
 CellLabel->"Out[11]=",ExpressionUUID->"b8b93eb0-24e5-4b56-8a29-c310e44e1bc6"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"testData2", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"(", 
        RowBox[{"funcvpa", "[", "x", "]"}], ")"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "250", ",", "480", ",", "1"}], "}"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.7933240171702533`*^9, 3.793324058140566*^9}, {
  3.793324290319997*^9, 3.79332429380053*^9}, {3.7933247934489317`*^9, 
  3.793324793989582*^9}, {3.79332513375016*^9, 3.793325134058814*^9}, {
  3.7933260294865913`*^9, 3.7933260545785437`*^9}},
 CellLabel->"In[12]:=",ExpressionUUID->"b4321b99-3d1e-4108-8c1c-2c64efd10243"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListLinePlot", "[", "testData2", "]"}]], "Input",
 CellChangeTimes->{{3.793324095045204*^9, 3.793324109920904*^9}, {
  3.793326059879037*^9, 3.7933260602542787`*^9}},
 CellLabel->
  "In[114]:=",ExpressionUUID->"63baa71c-a43d-4377-afa1-d37cc76ca6f4"],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      NCache[
       Rational[1, 72], 0.013888888888888888`]], AbsoluteThickness[1.6], 
     LineBox[CompressedData["
1:eJw11guMVOUZBuDhLgXLoNxsGztaQqxUnVrthlKyr7GbzWazYdYNopXqlHiv
cc99zsycQ0e3lGyR7GwpIYQSxxBCjC2O9VJqtY62CojIeKVrpQylhFikzFYt
NYTQ832+/0k27JMlc877/+//nbls9eBNd01MpVInkh/5Vy8M4pEHTpx9fPxf
ner8IL57+/M9Myee/MKVQTy7N/jTo1+ha4O47jty0Y1BPL3t9M7XeunWIK69
4Ddf++GddMrCh5+vuf8Fj05buO3OpUeWb6AzFj5488zAsR101sKtS55J7kjD
wl+3W8u+dIjOWXh4043rHzhB5y1M0F8+/sKWhUpyt40L6IqF8++GHy36Nl21
sKbz+iQhXbNw7vHxt/tW03ULO7f+JVN36IaFRVMfSu5INy3skMfZTrcsLPyb
BKTbFrZ3PffJuXfplI2+juEb8sfptI03HpP/QGds9M6cuHjdvFPMb+N1We5r
aNjoOVqas6ubztnY2ysfSOdtOPI4Fm3ZGE92o2OYrtiwLhpqvP4YXbVxOpIF
oGs2HpTtf5uu21gwJhtCN2xsluU+SzdtzNvVnTzRv5nfxqYFk2/+8lV028Yc
uV0XnXKw8ZTckE47WJbs/uYH6YyDF3pkAeisg6Wy/Y/ScPD8pWtP9u+mcw6W
yHI26byD3clqhx/RloMO7e9p5ndwVG53EV11kJc/L6ZrDo4slA2m6w5uH3nl
sytW0Q0Hh7W/dNPBKu0v3XIwNUn/u21028Faif8cnXIxOdndsTfptIsh7S+d
cdnfNvO70HrOpOEi1j7TORf9x3YkDaXzLkZ0/WnLxYG+1elbltAVFzN0P+iq
i57dsqB0zcU63R+67uK2u+WiGy626Hmgmy4ONS9PGk+3XMzV80G3XQzI8mym
Ux5G9bzQaQ8H5fHrdMbDdt1fk9/D0QEJaPJ7+Lrut8nv4UdyPA6b/B626v6b
/B7GrliV7KDJ72G+9mGc+T2cfF8GCl3z8E09f3Tdwz1yu8vphocdeh7ppodj
TyTjbSnd8nCZnk+67eGOeXKA6JSPbXpe6bQPW5bzXjrj40ntF531cerqw0kj
afhYrH2jcz7u2yIXnfexU+cnbfk4PkkKSVd8fEPnqcnv48xTMrBNfh/X6/k3
+X24Eu+Iye/jqX4pjMnv4/TPJaDJ7+Mqqefk/zC/j5/IOE3TqQCd2l86HSCW
7VtIZwL8UecznQ3w+fRknC2jEaBDDwSdC+DL7W6m8wGe1vlNWwHG/y4Hnq4E
uGaODCy6GmCSjIMhuhbgBjnuI3Q9wE9lObfSjQAvfis53TvpZoCzP06O1zN0
K8AS+biGyR+g8IZcJn8Bz06QAWDyFzAsdTlq8hew50nn3tFTJn8BU47LATP5
C7hRlmvqJ8xfwEM6z+h8AS/9LDk+l9JWAef+IPONrhSwVF7PHXS1gKLOO7pW
QJ++v+l6Aetl+26hGwXsmybvc7pZwDR939CtArrk8SO6XcCQvn/oVIiXP5Qb
0ukQ52fLQKIzIZbJ62QXnQ0xW+cnjRDLZXteMflDbLhS5qnJH2L/HbJgJn+I
6TpfTf4Q3fpxJn+IteflMvlD/Pk6GRCfMn+ICdpXuhHivX/IwKKbIS7WeUu3
QvTrvKXbIUYelgB0qogDv5cBR6eLmKHzls4U0SPj9H46W8S6lXJgaRTx6iNS
MDpXxCTtK50v4tD3ZN7SVhFzdd7SlSIGdN7S1SJGP5CBQ9eKODgrqfNek7+I
C/X7i8lfRK/21eQvYlj7avIXseef0leTv4gp2tfPmL+EsV/KgtHpEubr90k6
U8IKGd+L6GwJG6+V75c0SnjrnqRenXSuhFnaVzpfQp/2lbZKWK99pSsl7Pu+
9JWuljBN+0rXSujSvtL1Ei6R8TxKN0pYuULe73SzhE2/kC/MdKuEd16SgtHt
EmZrX03+MpZrX03+MjZoX03+Mvb/Svpq8pcxXftq8pfRrX01+cv4qozLC/7L
/GXc+ls5QLRVxmbtK10p47350le6WsbF2le6Vka/9pWulzGifaUbZRz4WPpK
N8uYoX2lW2X0aF/pdhnrtK90KsKrL8uC0OkIW7SvdCbCoUHpK52NMFf7SiPC
gPaVzkUY1b6a/BEO/kD6avJHuFD7avJH6NW+mvwRhrWvJn+EPZdIX88wf4Qp
Ol/pRoSxPdJXuhlhvvaVbkVYoX2l2xE2al/pVIy3fi19pdMxZmlf6UyMPu0r
nY2xXvtKI8Y+W/pK52JM077S+RhdOl9pK8aQzle6EmOl9pWuxtikfaVrMd75
VPpq8seYrX01+WMs176a/DE2aF9N/hj790lfTf4Y07WvJv8adOt8/V/n/wFy
E9KP
      "]]}}, {}, {}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{246.40625, 0.8089500000000028},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{250., 480.}, {0.8420000000000001, 1.5029999999999448`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.793324105961289*^9, 3.793324110473428*^9}, 
   3.7933243043540897`*^9, 3.793324844028801*^9, 3.7933252784425173`*^9, 
   3.7933255318000884`*^9, 3.7933262022172513`*^9},
 CellLabel->
  "Out[114]=",ExpressionUUID->"af1f3982-2fa6-47f9-947d-b81da547a1da"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["BRN - Figure 8 (c)", "Subsection",
 CellChangeTimes->{{3.7932980023333654`*^9, 3.79329800974263*^9}, {
  3.793326224035537*^9, 
  3.7933262242480025`*^9}},ExpressionUUID->"3770aca7-7b1b-4ab2-8668-\
f3440aac0931"],

Cell[BoxData[
 RowBox[{"Remove", "[", "funcgca", "]"}]], "Input",
 CellChangeTimes->{{3.7933237864803934`*^9, 3.7933237917875624`*^9}, {
  3.7933262590696898`*^9, 3.7933262619827833`*^9}},
 CellLabel->
  "In[115]:=",ExpressionUUID->"9593f619-0f92-44f9-a56a-c2c86a545771"],

Cell[BoxData[
 RowBox[{
  RowBox[{"funcgca", "[", "gcaval_", "]"}], ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "param", ",", "fvMatrix", ",", " ", "extraparam", ",", "val1", ",", 
      "testMat", ",", "start"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"param", "=", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"e0", "\[Rule]", " ", "0.12"}], ",", " ", 
        RowBox[{"e1", "\[Rule]", " ", "0.25"}], ",", " ", 
        RowBox[{"thu", "\[Rule]", " ", "0.617"}], ",", " ", 
        RowBox[{"thua", "\[Rule]", " ", "0.349"}], ",", " ", 
        RowBox[{"thc", "\[Rule]", " ", "0.003"}], ",", " ", 
        RowBox[{"thca", "\[Rule]", " ", "0.031"}], ",", " ", 
        RowBox[{"gb", "\[Rule]", " ", "0.7"}], ",", " ", 
        RowBox[{"gu", "\[Rule]", " ", "0.2"}], ",", 
        RowBox[{"gua", "\[Rule]", " ", "0.2"}], ",", " ", 
        RowBox[{"gc", "\[Rule]", " ", "0.06"}], ",", "  ", 
        RowBox[{"ap", "\[Rule]", " ", "0.0435"}], ",", " ", 
        RowBox[{"bp", "\[Rule]", " ", "0.42"}], ",", 
        RowBox[{"bpa", "\[Rule]", " ", 
         RowBox[{"0.42", "*", "1.67"}]}], ",", " ", 
        RowBox[{"bh", "\[Rule]", " ", "0.2"}], ",", " ", 
        RowBox[{"bha", "\[Rule]", " ", "0.25"}], ",", " ", 
        RowBox[{"n", "\[Rule]", " ", "0.4"}], ",", " ", 
        RowBox[{"muc", "\[Rule]", " ", "24"}], ",", " ", 
        RowBox[{"vp", "\[Rule]", " ", "235"}], ",", " ", 
        RowBox[{"vpa", "\[Rule]", " ", "470"}], ",", " ", 
        RowBox[{"vh", "\[Rule]", " ", "235"}], ",", " ", 
        RowBox[{"kp", "\[Rule]", " ", "0.000004"}], ",", " ", 
        RowBox[{"kpa", "\[Rule]", " ", "0.000005"}], ",", " ", 
        RowBox[{"kh", "\[Rule]", " ", "0.00001"}], ",", " ", 
        RowBox[{"np", "\[Rule]", " ", "23"}], ",", " ", 
        RowBox[{"nh", "\[Rule]", " ", "23"}]}], "}"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"theta", "[", "t", "]"}], " ", "=", " ", 
      RowBox[{
       RowBox[{"gu", "*", 
        RowBox[{"pu", "[", "t", "]"}]}], " ", "+", " ", 
       RowBox[{"gc", "*", 
        RowBox[{"pc", "[", "t", "]"}]}], " ", "+", 
       RowBox[{"gua", "*", 
        RowBox[{"pua", "[", "t", "]"}]}], " ", "+", " ", 
       RowBox[{"gca", "*", 
        RowBox[{"pca", "[", "t", "]"}]}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"epsilon", "[", "t", "]"}], " ", "=", " ", 
      RowBox[{"e0", "*", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"e1", "*", 
          RowBox[{"Sin", "[", 
           RowBox[{
            FractionBox[
             RowBox[{"2", "Pi"}], "365"], "*", 
            RowBox[{"(", 
             RowBox[{"t", "-", "240"}], ")"}]}], "]"}]}]}], ")"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"fvMatrix", " ", "=", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", 
           RowBox[{"(", 
            RowBox[{"gc", "+", 
             RowBox[{"epsilon", "[", "t", "]"}]}], ")"}]}], ",", "0", ",", 
          "0", ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"epsilon", "[", "t", "]"}], ",", 
          RowBox[{"-", "gca"}], ",", 
          FractionBox[
           RowBox[{"ap", " ", "bpa", " ", 
            RowBox[{"(", 
             RowBox[{"1", "-", "n"}], ")"}], "np", " "}], "lambda"], ",", " ", 
          FractionBox[
           RowBox[{"kpa", " ", "np"}], "lambda"]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          FractionBox[
           RowBox[{"ap", " ", "bh", " ", 
            RowBox[{"(", 
             RowBox[{"1", "-", "n"}], ")"}], "nh", " "}], "lambda"], ",", 
          FractionBox[
           RowBox[{"ap", " ", "bha", " ", 
            RowBox[{"(", 
             RowBox[{"1", "-", "n"}], ")"}], "nh", " "}], "lambda"], " ", ",", 
          RowBox[{"-", "muc"}], " ", ",", 
          FractionBox[
           RowBox[{"kh", " ", "nh"}], "lambda"]}], " ", "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"vp", ",", " ", "vpa", ",", " ", "vh", ",", " ", 
          RowBox[{"-", "gb"}]}], "}"}]}], "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"start", " ", "=", "4.500"}], ";", "\[IndentingNewLine]", 
     RowBox[{"extraparam", " ", "=", "  ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"gca", "\[Rule]", " ", "gcaval"}], ",", " ", 
        RowBox[{"lambda", "\[Rule]", " ", "start"}], ",", " ", 
        RowBox[{"t", "\[Rule]", " ", 
         RowBox[{"2", "Pi"}]}]}], "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"testMat", " ", "=", " ", 
      RowBox[{
       RowBox[{"fvMatrix", "/.", "param"}], "/.", "extraparam"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"While", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Abs", "[", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Max", "[", 
             RowBox[{"Eigenvalues", "[", 
              RowBox[{
               RowBox[{"MatrixExp", "[", 
                RowBox[{"testMat", " ", "t"}], "]"}], "/.", 
               RowBox[{"{", 
                RowBox[{"t", "\[Rule]", 
                 RowBox[{"2", "Pi"}]}], "}"}]}], "]"}], "]"}], " ", "-", " ", 
            "1"}], " ", ")"}], "*", "100"}], "]"}], ">", "0.04"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"start", " ", "=", " ", 
         RowBox[{"start", " ", "-", "0.001"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"extraparam", " ", "=", "  ", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"gca", "\[Rule]", " ", "gcaval"}], ",", " ", 
           RowBox[{"lambda", "\[Rule]", " ", "start"}], ",", " ", 
           RowBox[{"t", "\[Rule]", " ", 
            RowBox[{"2", "Pi"}]}]}], "}"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"testMat", " ", "=", " ", 
         RowBox[{
          RowBox[{"fvMatrix", "/.", "param"}], "/.", "extraparam"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"maybe", " ", "=", " ", "start"}], ";"}]}], 
      "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"Return", "[", 
      RowBox[{"start", "-", "0.001"}], "]"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.793301678139467*^9, 3.793301709030758*^9}, {
   3.793301903792627*^9, 3.793302048256239*^9}, {3.793302822408986*^9, 
   3.7933028362667637`*^9}, {3.7933032153852034`*^9, 3.7933032440007324`*^9}, 
   3.7933032873139095`*^9, {3.793303319884988*^9, 3.793303409560515*^9}, {
   3.7933034490938115`*^9, 3.793303454489359*^9}, {3.793303774362136*^9, 
   3.7933038445998497`*^9}, {3.793304073856694*^9, 3.7933040774870243`*^9}, {
   3.793305540887975*^9, 3.7933055969260445`*^9}, {3.7933056384490027`*^9, 
   3.7933057224080067`*^9}, {3.7933058115145235`*^9, 3.793305829186271*^9}, {
   3.79332336800239*^9, 3.793323368861221*^9}, {3.7933234850855083`*^9, 
   3.7933234951065054`*^9}, {3.793323598738939*^9, 3.7933236074405375`*^9}, {
   3.793323750503416*^9, 3.7933237509781127`*^9}, {3.793325065726738*^9, 
   3.793325076226973*^9}, {3.793325261050844*^9, 3.793325263269373*^9}, {
   3.793325514285653*^9, 3.793325514799481*^9}, {3.7933262555532303`*^9, 
   3.7933262558585567`*^9}, {3.7933263085764165`*^9, 3.79332640001033*^9}},
 CellLabel->
  "In[116]:=",ExpressionUUID->"bbda8bc2-cabc-4b06-a2b0-61125a8b0c19"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"funcgca", "[", "0.018", "]"}]], "Input",
 CellChangeTimes->{{3.7933237562946553`*^9, 3.793323761387023*^9}, {
  3.793326415929062*^9, 3.793326427591323*^9}, {3.7933266665874805`*^9, 
  3.793326763441186*^9}},
 CellLabel->
  "In[136]:=",ExpressionUUID->"555e2a26-d606-41f8-a433-618eb4c2c509"],

Cell[BoxData["4.377999999999959`"], "Output",
 CellChangeTimes->{{3.793323775152436*^9, 3.793323796095107*^9}, 
   3.7933252668369055`*^9, 3.7933255204259677`*^9, {3.7933264219100294`*^9, 
   3.793326433196432*^9}, {3.793326674057582*^9, 3.7933267643612237`*^9}},
 CellLabel->
  "Out[136]=",ExpressionUUID->"b7c69057-eae5-4fbd-92d4-7aa24d01f901"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Remove", "[", "testData3", "]"}]], "Input",
 CellChangeTimes->{{3.7933265981664267`*^9, 3.793326602788493*^9}},
 CellLabel->
  "In[122]:=",ExpressionUUID->"dc5c85c5-7219-47f1-baf8-475cb9b0b465"],

Cell[BoxData[
 RowBox[{
  RowBox[{"testData3", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"(", 
        RowBox[{"funcgca", "[", "x", "]"}], ")"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0.018", ",", "0.2", ",", "0.03"}], "}"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.7933240171702533`*^9, 3.793324058140566*^9}, {
  3.793324290319997*^9, 3.79332429380053*^9}, {3.7933247934489317`*^9, 
  3.793324793989582*^9}, {3.79332513375016*^9, 3.793325134058814*^9}, {
  3.7933264760113516`*^9, 3.793326512289595*^9}, {3.7933265489799213`*^9, 
  3.7933265502410994`*^9}, {3.793326643762648*^9, 3.7933266553032885`*^9}, {
  3.7933267687659006`*^9, 3.793326783972492*^9}, {3.793327243300229*^9, 
  3.7933272444681363`*^9}, {3.7933272841742983`*^9, 3.793327285142701*^9}, {
  3.7933273605889525`*^9, 3.7933273607604923`*^9}},
 CellLabel->
  "In[141]:=",ExpressionUUID->"65a0319a-335f-4f6c-b248-ca31ac5fc708"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListLinePlot", "[", "testData3", "]"}]], "Input",
 CellChangeTimes->{{3.793324095045204*^9, 3.793324109920904*^9}, {
  3.793326528021988*^9, 3.7933265282693577`*^9}},
 CellLabel->
  "In[142]:=",ExpressionUUID->"542d3954-ea0c-4632-808f-9fd2e1b20e0d"],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      NCache[
       Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
     LineBox[{{0.018, 4.377999999999959}, {0.048, 1.6820000000000888`}, {
      0.078, 1.0600000000001573`}, {0.108, 0.7830000000001637}, {
      0.13799999999999998`, 0.6260000000001635}, {0.16799999999999998`, 
      0.5250000000001634}, {0.19799999999999998`, 
      0.4540000000001634}}]}}, {}, {}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 0.19799999999999998`}, {0, 4.377999999999959}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.793324105961289*^9, 3.793324110473428*^9}, 
   3.7933243043540897`*^9, 3.793324844028801*^9, 3.7933252784425173`*^9, 
   3.7933255318000884`*^9, 3.7933265407739305`*^9, 3.793326630823215*^9, 
   3.793327265975585*^9, 3.793327398525506*^9},
 CellLabel->
  "Out[142]=",ExpressionUUID->"d0eeb90a-a44d-4d93-aafc-d73607badee7"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["BRN - Figure 8 (d)", "Subsection",
 CellChangeTimes->{{3.7932980023333654`*^9, 3.79329800974263*^9}, {
  3.79332741714073*^9, 
  3.79332741731129*^9}},ExpressionUUID->"faa3ecad-2478-4cb1-8df0-\
477caa22a103"],

Cell[BoxData[
 RowBox[{"Remove", "[", "funcn", "]"}]], "Input",
 CellChangeTimes->{{3.7933237864803934`*^9, 3.7933237917875624`*^9}, {
  3.793327424152977*^9, 
  3.793327424664612*^9}},ExpressionUUID->"c329a46c-7d29-42b6-92ef-\
e9e7ab3f3dbb"],

Cell[BoxData[
 RowBox[{
  RowBox[{"funcn", "[", "nval_", "]"}], ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "param", ",", "fvMatrix", ",", " ", "extraparam", ",", "val1", ",", 
      "testMat", ",", "start"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"param", "=", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"e0", "\[Rule]", " ", "0.12"}], ",", " ", 
        RowBox[{"e1", "\[Rule]", " ", "0.25"}], ",", " ", 
        RowBox[{"thu", "\[Rule]", " ", "0.617"}], ",", " ", 
        RowBox[{"thua", "\[Rule]", " ", "0.349"}], ",", " ", 
        RowBox[{"thc", "\[Rule]", " ", "0.003"}], ",", " ", 
        RowBox[{"thca", "\[Rule]", " ", "0.031"}], ",", " ", 
        RowBox[{"gu", "\[Rule]", " ", "0.2"}], ",", 
        RowBox[{"gua", "\[Rule]", " ", "0.2"}], ",", " ", 
        RowBox[{"gc", "\[Rule]", " ", "0.06"}], ",", " ", 
        RowBox[{"gca", "\[Rule]", " ", "0.055"}], ",", " ", 
        RowBox[{"gb", "\[Rule]", " ", "0.7"}], ",", 
        RowBox[{"ap", "\[Rule]", " ", "0.0435"}], ",", " ", 
        RowBox[{"bp", "\[Rule]", " ", "0.42"}], ",", 
        RowBox[{"bpa", "\[Rule]", " ", 
         RowBox[{"0.42", "*", "1.67"}]}], ",", " ", 
        RowBox[{"bh", "\[Rule]", " ", "0.2"}], ",", " ", 
        RowBox[{"bha", "\[Rule]", " ", "0.25"}], ",", " ", 
        RowBox[{"muc", "\[Rule]", " ", "24"}], ",", " ", 
        RowBox[{"vp", "\[Rule]", " ", "235"}], ",", " ", 
        RowBox[{"vpa", "\[Rule]", " ", "470"}], ",", " ", 
        RowBox[{"vh", "\[Rule]", " ", "235"}], ",", " ", 
        RowBox[{"kp", "\[Rule]", " ", "0.000004"}], ",", " ", 
        RowBox[{"kpa", "\[Rule]", " ", "0.000005"}], ",", " ", 
        RowBox[{"kh", "\[Rule]", " ", "0.00001"}], ",", " ", 
        RowBox[{"np", "\[Rule]", " ", "23"}], ",", " ", 
        RowBox[{"nh", "\[Rule]", " ", "23"}]}], "}"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"theta", "[", "t", "]"}], " ", "=", " ", 
      RowBox[{
       RowBox[{"gu", "*", 
        RowBox[{"pu", "[", "t", "]"}]}], " ", "+", " ", 
       RowBox[{"gc", "*", 
        RowBox[{"pc", "[", "t", "]"}]}], " ", "+", 
       RowBox[{"gua", "*", 
        RowBox[{"pua", "[", "t", "]"}]}], " ", "+", " ", 
       RowBox[{"gca", "*", 
        RowBox[{"pca", "[", "t", "]"}]}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"epsilon", "[", "t", "]"}], " ", "=", " ", 
      RowBox[{"e0", "*", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"e1", "*", 
          RowBox[{"Sin", "[", 
           RowBox[{
            FractionBox[
             RowBox[{"2", "Pi"}], "365"], "*", 
            RowBox[{"(", 
             RowBox[{"t", "-", "240"}], ")"}]}], "]"}]}]}], ")"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"fvMatrix", " ", "=", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", 
           RowBox[{"(", 
            RowBox[{"gc", "+", 
             RowBox[{"epsilon", "[", "t", "]"}]}], ")"}]}], ",", "0", ",", 
          "0", ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"epsilon", "[", "t", "]"}], ",", 
          RowBox[{"-", "gca"}], ",", 
          FractionBox[
           RowBox[{"ap", " ", "bpa", " ", 
            RowBox[{"(", 
             RowBox[{"1", "-", "n"}], ")"}], "np", " "}], "lambda"], ",", " ", 
          FractionBox[
           RowBox[{"kpa", " ", "np"}], "lambda"]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          FractionBox[
           RowBox[{"ap", " ", "bh", " ", 
            RowBox[{"(", 
             RowBox[{"1", "-", "n"}], ")"}], "nh", " "}], "lambda"], ",", 
          FractionBox[
           RowBox[{"ap", " ", "bha", " ", 
            RowBox[{"(", 
             RowBox[{"1", "-", "n"}], ")"}], "nh", " "}], "lambda"], " ", ",", 
          RowBox[{"-", "muc"}], " ", ",", 
          FractionBox[
           RowBox[{"kh", " ", "nh"}], "lambda"]}], " ", "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"vp", ",", " ", "vpa", ",", " ", "vh", ",", " ", 
          RowBox[{"-", "gb"}]}], "}"}]}], "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"start", " ", "=", "1.480"}], ";", "\[IndentingNewLine]", 
     RowBox[{"extraparam", " ", "=", "  ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"n", "\[Rule]", " ", "nval"}], ",", " ", 
        RowBox[{"lambda", "\[Rule]", " ", "start"}], ",", " ", 
        RowBox[{"t", "\[Rule]", " ", 
         RowBox[{"2", "Pi"}]}]}], "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"testMat", " ", "=", " ", 
      RowBox[{
       RowBox[{"fvMatrix", "/.", "param"}], "/.", "extraparam"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"While", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Abs", "[", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Max", "[", 
             RowBox[{"Eigenvalues", "[", 
              RowBox[{
               RowBox[{"MatrixExp", "[", 
                RowBox[{"testMat", " ", "t"}], "]"}], "/.", 
               RowBox[{"{", 
                RowBox[{"t", "\[Rule]", 
                 RowBox[{"2", "Pi"}]}], "}"}]}], "]"}], "]"}], " ", "-", " ", 
            "1"}], " ", ")"}], "*", "100"}], "]"}], ">", "0.04"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"start", " ", "=", " ", 
         RowBox[{"start", " ", "-", "0.001"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"extraparam", " ", "=", "  ", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"n", "\[Rule]", " ", "nval"}], ",", " ", 
           RowBox[{"lambda", "\[Rule]", " ", "start"}], ",", " ", 
           RowBox[{"t", "\[Rule]", " ", 
            RowBox[{"2", "Pi"}]}]}], "}"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"testMat", " ", "=", " ", 
         RowBox[{
          RowBox[{"fvMatrix", "/.", "param"}], "/.", "extraparam"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"maybe", " ", "=", " ", "start"}], ";"}]}], 
      "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"Return", "[", 
      RowBox[{"start", "-", "0.001"}], "]"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.793301678139467*^9, 3.793301709030758*^9}, {
   3.793301903792627*^9, 3.793302048256239*^9}, {3.793302822408986*^9, 
   3.7933028362667637`*^9}, {3.7933032153852034`*^9, 3.7933032440007324`*^9}, 
   3.7933032873139095`*^9, {3.793303319884988*^9, 3.793303409560515*^9}, {
   3.7933034490938115`*^9, 3.793303454489359*^9}, {3.793303774362136*^9, 
   3.7933038445998497`*^9}, {3.793304073856694*^9, 3.7933040774870243`*^9}, {
   3.793305540887975*^9, 3.7933055969260445`*^9}, {3.7933056384490027`*^9, 
   3.7933057224080067`*^9}, {3.7933058115145235`*^9, 3.793305829186271*^9}, {
   3.79332336800239*^9, 3.793323368861221*^9}, {3.7933234850855083`*^9, 
   3.7933234951065054`*^9}, {3.793323598738939*^9, 3.7933236074405375`*^9}, {
   3.793323750503416*^9, 3.7933237509781127`*^9}, {3.793325065726738*^9, 
   3.793325076226973*^9}, {3.793325261050844*^9, 3.793325263269373*^9}, {
   3.793325514285653*^9, 3.793325514799481*^9}, {3.793327427378353*^9, 
   3.793327498473241*^9}},
 CellLabel->
  "In[143]:=",ExpressionUUID->"43b160e5-6bfc-4d39-95c1-067b5228f8c8"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"funcn", "[", "0.4", "]"}]], "Input",
 CellChangeTimes->{{3.7933237562946553`*^9, 3.793323761387023*^9}, {
  3.7933275137743597`*^9, 3.7933275178215523`*^9}},
 CellLabel->
  "In[144]:=",ExpressionUUID->"810e8545-f1b1-4c21-a05b-4a92752c2918"],

Cell[BoxData["1.4760000000000004`"], "Output",
 CellChangeTimes->{{3.793323775152436*^9, 3.793323796095107*^9}, 
   3.7933252668369055`*^9, 3.7933255204259677`*^9, 3.793327518255374*^9},
 CellLabel->
  "Out[144]=",ExpressionUUID->"8494741b-accd-45b7-9645-0d26e35fda03"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"testData4", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"(", 
        RowBox[{"funcn", "[", "x", "]"}], ")"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0.4", ",", "1", ",", "0.05"}], "}"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.7933240171702533`*^9, 3.793324058140566*^9}, {
  3.793324290319997*^9, 3.79332429380053*^9}, {3.7933247934489317`*^9, 
  3.793324793989582*^9}, {3.79332513375016*^9, 3.793325134058814*^9}, {
  3.793327522652583*^9, 3.793327541324653*^9}},
 CellLabel->
  "In[146]:=",ExpressionUUID->"7f37c51c-0afb-4fcd-9244-625cee6be07c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListLinePlot", "[", "testData4", "]"}]], "Input",
 CellChangeTimes->{{3.793324095045204*^9, 3.793324109920904*^9}, {
  3.7933275492823744`*^9, 3.7933275495137596`*^9}},
 CellLabel->
  "In[147]:=",ExpressionUUID->"9b001000-73bc-41f9-8d78-1921979fb763"],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      NCache[
       Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
     LineBox[{{0.4, 1.4760000000000004`}, {0.45, 1.4680000000000013`}, {0.5, 
      1.461000000000002}, {0.55, 1.4540000000000028`}, {0.6000000000000001, 
      1.4470000000000036`}, {0.65, 1.4400000000000044`}, {0.7000000000000001, 
      1.434000000000005}, {0.75, 1.4290000000000056`}, {0.8, 
      1.4240000000000061`}, {0.8500000000000001, 1.4190000000000067`}, {0.9, 
      1.4150000000000071`}, {0.9500000000000001, 1.4110000000000076`}, {1., 
      1.407000000000008}}]}}, {}, {}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0.390625, 1.4035500000000085`},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0.4, 1.}, {1.407000000000008, 1.4760000000000004`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.793324105961289*^9, 3.793324110473428*^9}, 
   3.7933243043540897`*^9, 3.793324844028801*^9, 3.7933252784425173`*^9, 
   3.7933255318000884`*^9, 3.7933275499795413`*^9},
 CellLabel->
  "Out[147]=",ExpressionUUID->"9a86d07a-f361-4e7b-9781-2e962478abe7"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["BRN - Figure 8 (e)", "Subsection",
 CellChangeTimes->{{3.7932980023333654`*^9, 3.79329800974263*^9}, {
  3.793327591808734*^9, 
  3.793327592125847*^9}},ExpressionUUID->"366aea10-45d0-4545-b265-\
6dd68e918bd7"],

Cell[BoxData[
 RowBox[{"Remove", "[", "funcap", "]"}]], "Input",
 CellChangeTimes->{{3.7933237864803934`*^9, 3.7933237917875624`*^9}, {
  3.7933275966258492`*^9, 
  3.793327597725907*^9}},ExpressionUUID->"417ae430-e59f-4199-8bb6-\
da3a273d827b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"funcap", "[", "apval_", "]"}], ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "param", ",", "fvMatrix", ",", " ", "extraparam", ",", "val1", ",", 
      "testMat", ",", "start"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"param", "=", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"e0", "\[Rule]", " ", "0.12"}], ",", " ", 
        RowBox[{"e1", "\[Rule]", " ", "0.25"}], ",", " ", 
        RowBox[{"thu", "\[Rule]", " ", "0.617"}], ",", " ", 
        RowBox[{"thua", "\[Rule]", " ", "0.349"}], ",", " ", 
        RowBox[{"thc", "\[Rule]", " ", "0.003"}], ",", " ", 
        RowBox[{"thca", "\[Rule]", " ", "0.031"}], ",", " ", 
        RowBox[{"gu", "\[Rule]", " ", "0.2"}], ",", 
        RowBox[{"gua", "\[Rule]", " ", "0.2"}], ",", " ", 
        RowBox[{"gc", "\[Rule]", " ", "0.06"}], ",", " ", 
        RowBox[{"gca", "\[Rule]", " ", "0.055"}], ",", " ", 
        RowBox[{"gb", "\[Rule]", " ", "0.7"}], ",", " ", 
        RowBox[{"bp", "\[Rule]", " ", "0.42"}], ",", 
        RowBox[{"bpa", "\[Rule]", " ", 
         RowBox[{"0.42", "*", "1.67"}]}], ",", " ", 
        RowBox[{"bh", "\[Rule]", " ", "0.2"}], ",", " ", 
        RowBox[{"bha", "\[Rule]", " ", "0.25"}], ",", " ", 
        RowBox[{"n", "\[Rule]", " ", "0.4"}], ",", " ", 
        RowBox[{"muc", "\[Rule]", " ", "24"}], ",", " ", 
        RowBox[{"vp", "\[Rule]", " ", "235"}], ",", " ", 
        RowBox[{"vpa", "\[Rule]", " ", "470"}], ",", " ", 
        RowBox[{"vh", "\[Rule]", " ", "235"}], ",", " ", 
        RowBox[{"kp", "\[Rule]", " ", "0.000004"}], ",", " ", 
        RowBox[{"kpa", "\[Rule]", " ", "0.000005"}], ",", " ", 
        RowBox[{"kh", "\[Rule]", " ", "0.00001"}], ",", " ", 
        RowBox[{"np", "\[Rule]", " ", "23"}], ",", " ", 
        RowBox[{"nh", "\[Rule]", " ", "23"}]}], "}"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"theta", "[", "t", "]"}], " ", "=", " ", 
      RowBox[{
       RowBox[{"gu", "*", 
        RowBox[{"pu", "[", "t", "]"}]}], " ", "+", " ", 
       RowBox[{"gc", "*", 
        RowBox[{"pc", "[", "t", "]"}]}], " ", "+", 
       RowBox[{"gua", "*", 
        RowBox[{"pua", "[", "t", "]"}]}], " ", "+", " ", 
       RowBox[{"gca", "*", 
        RowBox[{"pca", "[", "t", "]"}]}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"epsilon", "[", "t", "]"}], " ", "=", " ", 
      RowBox[{"e0", "*", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"e1", "*", 
          RowBox[{"Sin", "[", 
           RowBox[{
            FractionBox[
             RowBox[{"2", "Pi"}], "365"], "*", 
            RowBox[{"(", 
             RowBox[{"t", "-", "240"}], ")"}]}], "]"}]}]}], ")"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"fvMatrix", " ", "=", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", 
           RowBox[{"(", 
            RowBox[{"gc", "+", 
             RowBox[{"epsilon", "[", "t", "]"}]}], ")"}]}], ",", "0", ",", 
          "0", ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"epsilon", "[", "t", "]"}], ",", 
          RowBox[{"-", "gca"}], ",", 
          FractionBox[
           RowBox[{"ap", " ", "bpa", " ", 
            RowBox[{"(", 
             RowBox[{"1", "-", "n"}], ")"}], "np", " "}], "lambda"], ",", " ", 
          FractionBox[
           RowBox[{"kpa", " ", "np"}], "lambda"]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          FractionBox[
           RowBox[{"ap", " ", "bh", " ", 
            RowBox[{"(", 
             RowBox[{"1", "-", "n"}], ")"}], "nh", " "}], "lambda"], ",", 
          FractionBox[
           RowBox[{"ap", " ", "bha", " ", 
            RowBox[{"(", 
             RowBox[{"1", "-", "n"}], ")"}], "nh", " "}], "lambda"], " ", ",", 
          RowBox[{"-", "muc"}], " ", ",", 
          FractionBox[
           RowBox[{"kh", " ", "nh"}], "lambda"]}], " ", "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"vp", ",", " ", "vpa", ",", " ", "vh", ",", " ", 
          RowBox[{"-", "gb"}]}], "}"}]}], "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"start", " ", "=", "1.405"}], ";", "\[IndentingNewLine]", 
     RowBox[{"extraparam", " ", "=", "  ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"ap", "\[Rule]", " ", "apval"}], ",", " ", 
        RowBox[{"lambda", "\[Rule]", " ", "start"}], ",", " ", 
        RowBox[{"t", "\[Rule]", " ", 
         RowBox[{"2", "Pi"}]}]}], "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"testMat", " ", "=", " ", 
      RowBox[{
       RowBox[{"fvMatrix", "/.", "param"}], "/.", "extraparam"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"While", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Abs", "[", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Max", "[", 
             RowBox[{"Eigenvalues", "[", 
              RowBox[{
               RowBox[{"MatrixExp", "[", 
                RowBox[{"testMat", " ", "t"}], "]"}], "/.", 
               RowBox[{"{", 
                RowBox[{"t", "\[Rule]", 
                 RowBox[{"2", "Pi"}]}], "}"}]}], "]"}], "]"}], " ", "-", " ", 
            "1"}], " ", ")"}], "*", "100"}], "]"}], ">", "0.04"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"start", " ", "=", " ", 
         RowBox[{"start", " ", "+", "0.001"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"extraparam", " ", "=", "  ", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"ap", "\[Rule]", " ", "apval"}], ",", " ", 
           RowBox[{"lambda", "\[Rule]", " ", "start"}], ",", " ", 
           RowBox[{"t", "\[Rule]", " ", 
            RowBox[{"2", "Pi"}]}]}], "}"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"testMat", " ", "=", " ", 
         RowBox[{
          RowBox[{"fvMatrix", "/.", "param"}], "/.", "extraparam"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"maybe", " ", "=", " ", "start"}], ";"}]}], 
      "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"Return", "[", 
      RowBox[{"start", "-", "0.001"}], "]"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.793301678139467*^9, 3.793301709030758*^9}, {
   3.793301903792627*^9, 3.793302048256239*^9}, {3.793302822408986*^9, 
   3.7933028362667637`*^9}, {3.7933032153852034`*^9, 3.7933032440007324`*^9}, 
   3.7933032873139095`*^9, {3.793303319884988*^9, 3.793303409560515*^9}, {
   3.7933034490938115`*^9, 3.793303454489359*^9}, {3.793303774362136*^9, 
   3.7933038445998497`*^9}, {3.793304073856694*^9, 3.7933040774870243`*^9}, {
   3.793305540887975*^9, 3.7933055969260445`*^9}, {3.7933056384490027`*^9, 
   3.7933057224080067`*^9}, {3.7933058115145235`*^9, 3.793305829186271*^9}, {
   3.79332336800239*^9, 3.793323368861221*^9}, {3.7933234850855083`*^9, 
   3.7933234951065054`*^9}, {3.793323598738939*^9, 3.7933236074405375`*^9}, {
   3.793323750503416*^9, 3.7933237509781127`*^9}, {3.793325065726738*^9, 
   3.793325076226973*^9}, {3.793325261050844*^9, 3.793325263269373*^9}, {
   3.793325514285653*^9, 3.793325514799481*^9}, {3.79332760283422*^9, 
   3.7933276604511747`*^9}},
 CellLabel->
  "In[148]:=",ExpressionUUID->"3b8a630c-df79-40ca-b12b-b779805be7bb"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"funcap", "[", "0", "]"}]], "Input",
 CellChangeTimes->{{3.7933237562946553`*^9, 3.793323761387023*^9}, {
  3.7933276692436333`*^9, 3.793327703543917*^9}},
 CellLabel->
  "In[150]:=",ExpressionUUID->"97069d10-de19-40d7-95ed-86d394dcde50"],

Cell[BoxData["1.405`"], "Output",
 CellChangeTimes->{{3.793323775152436*^9, 3.793323796095107*^9}, 
   3.7933252668369055`*^9, 3.7933255204259677`*^9, {3.7933276793904963`*^9, 
   3.7933277041263666`*^9}},
 CellLabel->
  "Out[150]=",ExpressionUUID->"eb8f97f3-4fd6-4cbe-a6dc-28472b7a35a9"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"testData5", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"(", 
        RowBox[{"funcap", "[", "x", "]"}], ")"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0.", ",", "0.05", ",", "0.01"}], "}"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.7933240171702533`*^9, 3.793324058140566*^9}, {
  3.793324290319997*^9, 3.79332429380053*^9}, {3.7933247934489317`*^9, 
  3.793324793989582*^9}, {3.79332513375016*^9, 3.793325134058814*^9}, {
  3.7933276866859894`*^9, 3.7933277187472534`*^9}},
 CellLabel->
  "In[151]:=",ExpressionUUID->"c74e75a8-29ae-4704-b30d-7dcbbdd5c48c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListLinePlot", "[", "testData5", "]"}]], "Input",
 CellChangeTimes->{{3.793324095045204*^9, 3.793324109920904*^9}, {
  3.7933277392434464`*^9, 3.793327739625425*^9}},
 CellLabel->
  "In[153]:=",ExpressionUUID->"fadefb51-4c54-4728-8527-665d5a1adca1"],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      NCache[
       Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
     LineBox[{{0., 1.405}, {0.01, 1.414999999999999}, {0.02, 
      1.4289999999999974`}, {0.03, 1.4459999999999955`}, {0.04, 
      1.4659999999999933`}, {0.05, 1.4889999999999908`}}]}}, {}, {}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 1.4008000000000007`},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 0.05}, {1.405, 1.4889999999999908`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.793324105961289*^9, 3.793324110473428*^9}, 
   3.7933243043540897`*^9, 3.793324844028801*^9, 3.7933252784425173`*^9, 
   3.7933255318000884`*^9, {3.793327737114174*^9, 3.7933277401589975`*^9}},
 CellLabel->
  "Out[153]=",ExpressionUUID->"a52178c9-7a72-4803-85b4-a95acad3872b"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["BRN - Figure 8 (f)", "Subsection",
 CellChangeTimes->{{3.7932980023333654`*^9, 3.79329800974263*^9}, {
  3.793327761464027*^9, 
  3.793327761725362*^9}},ExpressionUUID->"11476eb1-ad93-4dff-a008-\
82fe8965d3ba"],

Cell[BoxData[
 RowBox[{"Remove", "[", "funcmuc", "]"}]], "Input",
 CellChangeTimes->{{3.7933237864803934`*^9, 3.7933237917875624`*^9}, {
  3.793327767551781*^9, 3.793327768727604*^9}},
 CellLabel->
  "In[154]:=",ExpressionUUID->"68383757-d39f-4c83-92a3-a29df9abd0e4"],

Cell[BoxData[
 RowBox[{
  RowBox[{"funcmuc", "[", "mucval_", "]"}], ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "param", ",", "fvMatrix", ",", " ", "extraparam", ",", "val1", ",", 
      "testMat", ",", "start"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"param", "=", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"e0", "\[Rule]", " ", "0.12"}], ",", " ", 
        RowBox[{"e1", "\[Rule]", " ", "0.25"}], ",", " ", 
        RowBox[{"thu", "\[Rule]", " ", "0.617"}], ",", " ", 
        RowBox[{"thua", "\[Rule]", " ", "0.349"}], ",", " ", 
        RowBox[{"thc", "\[Rule]", " ", "0.003"}], ",", " ", 
        RowBox[{"thca", "\[Rule]", " ", "0.031"}], ",", " ", 
        RowBox[{"gu", "\[Rule]", " ", "0.2"}], ",", 
        RowBox[{"gua", "\[Rule]", " ", "0.2"}], ",", " ", 
        RowBox[{"gc", "\[Rule]", " ", "0.06"}], ",", " ", 
        RowBox[{"gca", "\[Rule]", " ", "0.055"}], ",", 
        RowBox[{"gb", "\[Rule]", " ", "0.7"}], ",", " ", 
        RowBox[{"ap", "\[Rule]", " ", "0.0435"}], ",", " ", 
        RowBox[{"bp", "\[Rule]", " ", "0.42"}], ",", 
        RowBox[{"bpa", "\[Rule]", " ", 
         RowBox[{"0.42", "*", "1.67"}]}], ",", " ", 
        RowBox[{"bh", "\[Rule]", " ", "0.2"}], ",", " ", 
        RowBox[{"bha", "\[Rule]", " ", "0.25"}], ",", " ", 
        RowBox[{"n", "\[Rule]", " ", "0.4"}], ",", "  ", 
        RowBox[{"vp", "\[Rule]", " ", "235"}], ",", " ", 
        RowBox[{"vpa", "\[Rule]", " ", "470"}], ",", " ", 
        RowBox[{"vh", "\[Rule]", " ", "235"}], ",", " ", 
        RowBox[{"kp", "\[Rule]", " ", "0.000004"}], ",", " ", 
        RowBox[{"kpa", "\[Rule]", " ", "0.000005"}], ",", " ", 
        RowBox[{"kh", "\[Rule]", " ", "0.00001"}], ",", " ", 
        RowBox[{"np", "\[Rule]", " ", "23"}], ",", " ", 
        RowBox[{"nh", "\[Rule]", " ", "23"}]}], "}"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"theta", "[", "t", "]"}], " ", "=", " ", 
      RowBox[{
       RowBox[{"gu", "*", 
        RowBox[{"pu", "[", "t", "]"}]}], " ", "+", " ", 
       RowBox[{"gc", "*", 
        RowBox[{"pc", "[", "t", "]"}]}], " ", "+", 
       RowBox[{"gua", "*", 
        RowBox[{"pua", "[", "t", "]"}]}], " ", "+", " ", 
       RowBox[{"gca", "*", 
        RowBox[{"pca", "[", "t", "]"}]}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"epsilon", "[", "t", "]"}], " ", "=", " ", 
      RowBox[{"e0", "*", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"e1", "*", 
          RowBox[{"Sin", "[", 
           RowBox[{
            FractionBox[
             RowBox[{"2", "Pi"}], "365"], "*", 
            RowBox[{"(", 
             RowBox[{"t", "-", "240"}], ")"}]}], "]"}]}]}], ")"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"fvMatrix", " ", "=", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", 
           RowBox[{"(", 
            RowBox[{"gc", "+", 
             RowBox[{"epsilon", "[", "t", "]"}]}], ")"}]}], ",", "0", ",", 
          "0", ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"epsilon", "[", "t", "]"}], ",", 
          RowBox[{"-", "gca"}], ",", 
          FractionBox[
           RowBox[{"ap", " ", "bpa", " ", 
            RowBox[{"(", 
             RowBox[{"1", "-", "n"}], ")"}], "np", " "}], "lambda"], ",", " ", 
          FractionBox[
           RowBox[{"kpa", " ", "np"}], "lambda"]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          FractionBox[
           RowBox[{"ap", " ", "bh", " ", 
            RowBox[{"(", 
             RowBox[{"1", "-", "n"}], ")"}], "nh", " "}], "lambda"], ",", 
          FractionBox[
           RowBox[{"ap", " ", "bha", " ", 
            RowBox[{"(", 
             RowBox[{"1", "-", "n"}], ")"}], "nh", " "}], "lambda"], " ", ",", 
          RowBox[{"-", "muc"}], " ", ",", 
          FractionBox[
           RowBox[{"kh", " ", "nh"}], "lambda"]}], " ", "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"vp", ",", " ", "vpa", ",", " ", "vh", ",", " ", 
          RowBox[{"-", "gb"}]}], "}"}]}], "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"start", " ", "=", "1.485"}], ";", "\[IndentingNewLine]", 
     RowBox[{"extraparam", " ", "=", "  ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"muc", "\[Rule]", " ", "mucval"}], ",", " ", 
        RowBox[{"lambda", "\[Rule]", " ", "start"}], ",", " ", 
        RowBox[{"t", "\[Rule]", " ", 
         RowBox[{"2", "Pi"}]}]}], "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"testMat", " ", "=", " ", 
      RowBox[{
       RowBox[{"fvMatrix", "/.", "param"}], "/.", "extraparam"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"While", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Abs", "[", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Max", "[", 
             RowBox[{"Eigenvalues", "[", 
              RowBox[{
               RowBox[{"MatrixExp", "[", 
                RowBox[{"testMat", " ", "t"}], "]"}], "/.", 
               RowBox[{"{", 
                RowBox[{"t", "\[Rule]", 
                 RowBox[{"2", "Pi"}]}], "}"}]}], "]"}], "]"}], " ", "-", " ", 
            "1"}], " ", ")"}], "*", "100"}], "]"}], ">", "0.04"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"start", " ", "=", " ", 
         RowBox[{"start", " ", "-", "0.001"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"extraparam", " ", "=", "  ", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"muc", "\[Rule]", " ", "mucval"}], ",", " ", 
           RowBox[{"lambda", "\[Rule]", " ", "start"}], ",", " ", 
           RowBox[{"t", "\[Rule]", " ", 
            RowBox[{"2", "Pi"}]}]}], "}"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"testMat", " ", "=", " ", 
         RowBox[{
          RowBox[{"fvMatrix", "/.", "param"}], "/.", "extraparam"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"maybe", " ", "=", " ", "start"}], ";"}]}], 
      "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"Return", "[", 
      RowBox[{"start", "-", "0.001"}], "]"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.793301678139467*^9, 3.793301709030758*^9}, {
   3.793301903792627*^9, 3.793302048256239*^9}, {3.793302822408986*^9, 
   3.7933028362667637`*^9}, {3.7933032153852034`*^9, 3.7933032440007324`*^9}, 
   3.7933032873139095`*^9, {3.793303319884988*^9, 3.793303409560515*^9}, {
   3.7933034490938115`*^9, 3.793303454489359*^9}, {3.793303774362136*^9, 
   3.7933038445998497`*^9}, {3.793304073856694*^9, 3.7933040774870243`*^9}, {
   3.793305540887975*^9, 3.7933055969260445`*^9}, {3.7933056384490027`*^9, 
   3.7933057224080067`*^9}, {3.7933058115145235`*^9, 3.793305829186271*^9}, {
   3.79332336800239*^9, 3.793323368861221*^9}, {3.7933234850855083`*^9, 
   3.7933234951065054`*^9}, {3.793323598738939*^9, 3.7933236074405375`*^9}, {
   3.793323750503416*^9, 3.7933237509781127`*^9}, {3.793325065726738*^9, 
   3.793325076226973*^9}, {3.793325261050844*^9, 3.793325263269373*^9}, {
   3.793325514285653*^9, 3.793325514799481*^9}, {3.793327773445987*^9, 
   3.793327827185285*^9}},
 CellLabel->
  "In[155]:=",ExpressionUUID->"7aea1a41-86fa-4e0c-9634-f46e25567383"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"funcmuc", "[", "24", "]"}]], "Input",
 CellChangeTimes->{{3.7933237562946553`*^9, 3.793323761387023*^9}, {
  3.793327850504976*^9, 3.7933278580647135`*^9}},
 CellLabel->
  "In[156]:=",ExpressionUUID->"7a74eb99-8f93-48f7-bfdf-d85621d23d48"],

Cell[BoxData["1.476000000000001`"], "Output",
 CellChangeTimes->{{3.793323775152436*^9, 3.793323796095107*^9}, 
   3.7933252668369055`*^9, 3.7933255204259677`*^9, 3.7933278586680956`*^9},
 CellLabel->
  "Out[156]=",ExpressionUUID->"fc354017-48cb-42b2-b15f-141a5612e1c2"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"testData6", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"(", 
        RowBox[{"funcmuc", "[", "x", "]"}], ")"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "21", ",", "60", ",", "1"}], "}"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.7933240171702533`*^9, 3.793324058140566*^9}, {
  3.793324290319997*^9, 3.79332429380053*^9}, {3.7933247934489317`*^9, 
  3.793324793989582*^9}, {3.79332513375016*^9, 3.793325134058814*^9}, {
  3.793327863097252*^9, 3.793327896936765*^9}},
 CellLabel->
  "In[162]:=",ExpressionUUID->"40ac560d-e69d-4188-adc6-352736e8cd6d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListLinePlot", "[", "testData6", "]"}]], "Input",
 CellChangeTimes->{{3.793324095045204*^9, 3.793324109920904*^9}, {
  3.7933278894687386`*^9, 3.7933278898606873`*^9}},
 CellLabel->
  "In[163]:=",ExpressionUUID->"bf353abf-783f-4918-b9f4-c6274ac64e8b"],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      NCache[
       Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
     LineBox[CompressedData["
1:eJxTTMoPSmViYGDQAGIQDQGmDpGWW06U7ftuD+GbObQeOLXQdRuMb+7g3p3z
/PdKGN/CgTOMT3fTXBjf0uG0woaijIkwvpXD9+XHvM07YXxrh51A2bc1ML6N
w9OfdVl7SmB8WwfBxqnO3Tkwvp2DLccamagUGN/eIbP/0FeNGBjfweH/Jd8k
gQgov8HBQTsqxfq+P0ze0eHg3PdAF8DkHR3eqrABbYDJOzk0g5xjD5N3cpAE
WWcNk3d2cDUGAZi8s8Ptsn3zpfRh8i4Ohbs8eZi0YfIuDuz/rlS8VIPJuzrM
dUx4ekEJJu/qYNz6OnCHHEzezeHkCZCBMHk3h3igae1iMHl3VH6Du8NX/97p
eUIweQ+H7skSLGF8MHkPB8XriwtsuWDynqj8Bk+H7VL6d1XYYPJeDr5xIA/A
5NH4DN4Oj4Gx//nvN6i8t0Ml0De3f0L5DD6o/AYfB37NGGAMweR9UfkNvg5L
QcnnI0zeD84HALyQv6E=
      "]]}}, {}, {}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{20.390625, 1.431500000000006},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{21., 60.}, {1.4340000000000057`, 1.4840000000000002`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.793324105961289*^9, 3.793324110473428*^9}, 
   3.7933243043540897`*^9, 3.793324844028801*^9, 3.7933252784425173`*^9, 
   3.7933255318000884`*^9, {3.793327886294223*^9, 3.7933279207082357`*^9}},
 CellLabel->
  "Out[163]=",ExpressionUUID->"c11cf445-3398-4a08-bf89-4cab31ec4dc8"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1264, 637},
WindowMargins->{{-8, Automatic}, {Automatic, 0}},
FrontEndVersion->"11.3 for Microsoft Windows (64-bit) (March 6, 2018)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 217, 4, 53, "Subsection",ExpressionUUID->"4210d16c-fa1b-4e69-9b2b-98f36f244ccc"],
Cell[CellGroupData[{
Cell[822, 30, 11179, 258, 419, "Input",ExpressionUUID->"1b62ed40-bd77-438b-bf0f-9859c235286f"],
Cell[12004, 290, 7325, 134, 323, "Output",ExpressionUUID->"6e7d653e-5e3b-4d1b-84a1-8b7cbb908c67"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[19378, 430, 262, 4, 53, "Subsection",ExpressionUUID->"e9256344-6958-4a82-bd0b-1756cb35fb84"],
Cell[19643, 436, 1792, 34, 67, "Input",ExpressionUUID->"90837d4b-ed86-46f1-9297-686a8a0d96e0"],
Cell[21438, 472, 1097, 30, 74, "Input",ExpressionUUID->"8de4868f-c5bf-410d-aa71-2fffc1704a0e"],
Cell[22538, 504, 7264, 170, 219, "Input",ExpressionUUID->"4eabee48-600c-48bc-855c-bcbb3c22aeb3"],
Cell[CellGroupData[{
Cell[29827, 678, 1008, 25, 48, "Input",ExpressionUUID->"29741bad-8731-4164-a4c4-81be4e85bfeb"],
Cell[30838, 705, 81126, 1358, 219, 72643, 1218, "CachedBoxData", "BoxData", "Output",ExpressionUUID->"9df23a78-53e0-4cf0-85bf-cb77751b4808"]
}, Open  ]],
Cell[CellGroupData[{
Cell[112001, 2068, 1456, 37, 48, "Input",ExpressionUUID->"61230ccf-2c6b-4a4d-a144-6f9caab89e36"],
Cell[113460, 2107, 54353, 915, 219, "Output",ExpressionUUID->"f96f3b29-7298-4c98-a706-87eacef1dbbd"]
}, Open  ]],
Cell[CellGroupData[{
Cell[167850, 3027, 889, 24, 28, "Input",ExpressionUUID->"93ef4fcc-fab7-41f1-8d09-396d21fa5c13"],
Cell[168742, 3053, 18888, 325, 219, "Output",ExpressionUUID->"2777defb-9445-453c-9b36-255271cd6f48"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[187679, 3384, 258, 4, 53, "Subsection",ExpressionUUID->"6ef9abae-3735-4baf-aeb1-273d82d89216"],
Cell[187940, 3390, 1830, 35, 67, "Input",ExpressionUUID->"352cefe4-17c6-4e46-850d-9aa6accb9140"],
Cell[189773, 3427, 1098, 30, 74, "Input",ExpressionUUID->"a7094d73-c8ab-4675-8f5f-575991ab0510"],
Cell[190874, 3459, 7311, 170, 219, "Input",ExpressionUUID->"e392140c-6c49-4fe4-b942-1813111fab6f"],
Cell[CellGroupData[{
Cell[198210, 3633, 1401, 36, 48, "Input",ExpressionUUID->"076cab87-cdfa-403c-ac2f-389a1c95f591"],
Cell[199614, 3671, 39593, 670, 219, "Output",ExpressionUUID->"17f9c2fa-88b3-4a78-93c5-9ce0770c6f86"]
}, Open  ]],
Cell[CellGroupData[{
Cell[239244, 4346, 943, 25, 28, "Input",ExpressionUUID->"a178f6f2-cffb-42d4-9d66-fb67c1bc0ee2"],
Cell[240190, 4373, 19125, 330, 219, "Output",ExpressionUUID->"8cd5f063-f65f-46c9-9b66-c4e83d12c68b"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[259364, 4709, 307, 5, 53, "Subsection",ExpressionUUID->"ed9072c5-bea8-44b9-9af8-d1bee7a119bb"],
Cell[259674, 4716, 1877, 35, 67, "Input",ExpressionUUID->"3323fe43-0401-41e6-a20c-d6113b784168"],
Cell[261554, 4753, 1098, 30, 74, "Input",ExpressionUUID->"a3c3db5e-5674-48a1-b06e-89e3428a89e3"],
Cell[262655, 4785, 7357, 171, 219, "Input",ExpressionUUID->"cc80b1d6-eadf-4209-bfe8-dc6cdfe14220"],
Cell[CellGroupData[{
Cell[270037, 4960, 1452, 37, 48, "Input",ExpressionUUID->"c3483ea2-84de-4e9c-8a4d-a98c17f532cc"],
Cell[271492, 4999, 37847, 643, 216, "Output",ExpressionUUID->"4c0165e9-b274-4685-a9b4-6c165a33ff5f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[309376, 5647, 996, 26, 28, "Input",ExpressionUUID->"2371eb9b-bffc-4547-946f-1a04b99f0f11"],
Cell[310375, 5675, 19201, 330, 219, "Output",ExpressionUUID->"a75c34a5-a370-4edc-8aff-5fc2790a9fc0"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[329625, 6011, 168, 3, 67, "Section",ExpressionUUID->"e6c77090-afad-438a-a8e1-4ee728e2fc15"],
Cell[329796, 6016, 1567, 41, 52, "Input",ExpressionUUID->"e9864d89-8a3e-4784-869e-762c64fe0566"],
Cell[CellGroupData[{
Cell[331388, 6061, 217, 3, 28, "Input",ExpressionUUID->"a85d3062-3452-4a45-97ed-bfcf14341156"],
Cell[331608, 6066, 2248, 67, 135, "Output",ExpressionUUID->"2766566e-0397-413d-8336-de577f0abef4"]
}, Open  ]],
Cell[333871, 6136, 209, 5, 28, "Input",ExpressionUUID->"8d842270-8236-4dbe-a326-e8af3f617422"],
Cell[334083, 6143, 1658, 32, 67, "Input",ExpressionUUID->"26cd6d30-5ca9-492c-befd-950964d8009d"],
Cell[CellGroupData[{
Cell[335766, 6179, 317, 5, 28, "Input",ExpressionUUID->"a8a0058e-3176-4746-b1cd-09dc525e2663"],
Cell[336086, 6186, 1836, 54, 134, "Output",ExpressionUUID->"d30069cb-1eee-4279-aaa1-24e88e87cb8d"]
}, Open  ]],
Cell[337937, 6243, 1033, 19, 28, "Input",ExpressionUUID->"15b725d6-2077-4dc6-82b0-722e3517993e"],
Cell[CellGroupData[{
Cell[338995, 6266, 416, 8, 28, "Input",ExpressionUUID->"663bb18d-be7d-4875-887e-5441d12615f4"],
Cell[339414, 6276, 1198, 26, 32, "Output",ExpressionUUID->"cefc9216-2c09-4a46-a0c3-4bad522131d1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[340649, 6307, 607, 16, 28, "Input",ExpressionUUID->"39902e08-b0a2-4202-83bd-a59de671f85f"],
Cell[341259, 6325, 344, 6, 32, "Output",ExpressionUUID->"d3f7b75d-8cf1-4d5a-b772-4a82c6541743"]
}, Open  ]],
Cell[CellGroupData[{
Cell[341640, 6336, 312, 8, 28, "Input",ExpressionUUID->"e674d8ad-2a76-417f-9e73-fb88119ea0d0"],
Cell[341955, 6346, 1540, 32, 100, "Output",ExpressionUUID->"61e4a000-39a8-4a7b-8e15-9fb82f5f6500"]
}, Open  ]],
Cell[CellGroupData[{
Cell[343532, 6383, 217, 4, 28, "Input",ExpressionUUID->"6247bf08-9d84-416f-ad3a-d8f4e2d4384e"],
Cell[343752, 6389, 694, 13, 36, "Output",ExpressionUUID->"8879d434-42c4-4318-81a7-94216392a84a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[344483, 6407, 207, 4, 28, "Input",ExpressionUUID->"6e8588c7-f57e-4b1d-b0a6-ed25cfc12c44"],
Cell[344693, 6413, 354, 6, 32, "Output",ExpressionUUID->"84ff10c4-172e-4ca7-acd8-8bad85a1616c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[345084, 6424, 277, 7, 28, "Input",ExpressionUUID->"8c6ac487-1249-453b-84e1-86087751e837"],
Cell[345364, 6433, 327, 6, 32, "Output",ExpressionUUID->"1522c504-a089-40ce-80a2-528f90b476c4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[345728, 6444, 571, 15, 28, "Input",ExpressionUUID->"7033de58-68c4-48f5-8dc3-e04bdab44a03"],
Cell[346302, 6461, 215, 3, 32, "Output",ExpressionUUID->"30d91521-6730-4345-b174-8753894114aa"]
}, Open  ]],
Cell[CellGroupData[{
Cell[346554, 6469, 251, 4, 28, "Input",ExpressionUUID->"8ce1ae3c-266b-4ef8-b91c-3ded6297a9f8"],
Cell[346808, 6475, 251, 3, 32, "Output",ExpressionUUID->"dc9d66de-5e7d-435e-9c53-d1baad104e6b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[347096, 6483, 167, 3, 53, "Subsection",ExpressionUUID->"f3dc2d83-1900-40e6-af6d-e6f0964a57d9"],
Cell[347266, 6488, 217, 4, 28, "Input",ExpressionUUID->"42642cf3-ccd7-49ef-ac5b-0f1fa284dc0f"],
Cell[347486, 6494, 7263, 161, 475, "Input",ExpressionUUID->"5b25d415-e4ac-4f56-a49d-c9b4355258ef"],
Cell[CellGroupData[{
Cell[354774, 6659, 207, 3, 28, "Input",ExpressionUUID->"7df268b8-60b0-49bc-ac86-ff171b9997ba"],
Cell[354984, 6664, 266, 3, 32, "Output",ExpressionUUID->"3b590397-932a-4cb2-b6d4-1ac443500696"]
}, Open  ]],
Cell[355265, 6670, 634, 15, 28, "Input",ExpressionUUID->"1beceffa-1c66-4a18-bf83-9198414d47ae"],
Cell[CellGroupData[{
Cell[355924, 6689, 188, 3, 28, "Input",ExpressionUUID->"98d5f8c9-a2ea-4d15-a52a-5d1da1f0f54a"],
Cell[356115, 6694, 996, 24, 32, "Output",ExpressionUUID->"fad64c7a-650c-4823-8d82-8ff10dd68d18"]
}, Open  ]],
Cell[CellGroupData[{
Cell[357148, 6723, 471, 10, 28, "Input",ExpressionUUID->"cce0d9a5-dd6f-47d1-8dac-6212eeec6d36"],
Cell[357622, 6735, 1978, 46, 289, "Output",ExpressionUUID->"6f0c8fb5-80bc-4863-b062-5ff02cadc060"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[359649, 6787, 216, 4, 53, "Subsection",ExpressionUUID->"c4e638b9-6574-4db1-b89c-e8bf24d75d65"],
Cell[359868, 6793, 264, 4, 28, "Input",ExpressionUUID->"6d8796e0-c51e-4ab9-87f0-ae6dbfa63389"],
Cell[360135, 6799, 7416, 163, 475, "Input",ExpressionUUID->"70a310c6-0197-408e-9218-5c4911f9fdd6"],
Cell[CellGroupData[{
Cell[367576, 6966, 308, 5, 28, "Input",ExpressionUUID->"d718b620-81c3-47e6-967b-2a819b5a0f13"],
Cell[367887, 6973, 315, 4, 32, "Output",ExpressionUUID->"b8b93eb0-24e5-4b56-8a29-c310e44e1bc6"]
}, Open  ]],
Cell[368217, 6980, 688, 16, 28, "Input",ExpressionUUID->"b4321b99-3d1e-4108-8c1c-2c64efd10243"],
Cell[CellGroupData[{
Cell[368930, 7000, 273, 5, 28, "Input",ExpressionUUID->"63baa71c-a43d-4377-afa1-d37cc76ca6f4"],
Cell[369206, 7007, 3888, 80, 245, "Output",ExpressionUUID->"af1f3982-2fa6-47f9-947d-b81da547a1da"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[373143, 7093, 218, 4, 53, "Subsection",ExpressionUUID->"3770aca7-7b1b-4ab2-8668-f3440aac0931"],
Cell[373364, 7099, 271, 5, 28, "Input",ExpressionUUID->"9593f619-0f92-44f9-a56a-c2c86a545771"],
Cell[373638, 7106, 7373, 163, 475, "Input",ExpressionUUID->"bbda8bc2-cabc-4b06-a2b0-61125a8b0c19"],
Cell[CellGroupData[{
Cell[381036, 7273, 315, 6, 28, "Input",ExpressionUUID->"555e2a26-d606-41f8-a433-618eb4c2c509"],
Cell[381354, 7281, 346, 5, 32, "Output",ExpressionUUID->"b7c69057-eae5-4fbd-92d4-7aa24d01f901"]
}, Open  ]],
Cell[381715, 7289, 218, 4, 28, "Input",ExpressionUUID->"dc5c85c5-7219-47f1-baf8-475cb9b0b465"],
Cell[381936, 7295, 999, 21, 28, "Input",ExpressionUUID->"65a0319a-335f-4f6c-b248-ca31ac5fc708"],
Cell[CellGroupData[{
Cell[382960, 7320, 273, 5, 28, "Input",ExpressionUUID->"542d3954-ea0c-4632-808f-9fd2e1b20e0d"],
Cell[383236, 7327, 1794, 44, 246, "Output",ExpressionUUID->"d0eeb90a-a44d-4d93-aafc-d73607badee7"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[385079, 7377, 214, 4, 53, "Subsection",ExpressionUUID->"faa3ecad-2478-4cb1-8df0-477caa22a103"],
Cell[385296, 7383, 242, 5, 28, "Input",ExpressionUUID->"c329a46c-7d29-42b6-92ef-e9e7ab3f3dbb"],
Cell[385541, 7390, 7308, 163, 475, "Input",ExpressionUUID->"43b160e5-6bfc-4d39-95c1-067b5228f8c8"],
Cell[CellGroupData[{
Cell[392874, 7557, 264, 5, 28, "Input",ExpressionUUID->"810e8545-f1b1-4c21-a05b-4a92752c2918"],
Cell[393141, 7564, 269, 4, 32, "Output",ExpressionUUID->"8494741b-accd-45b7-9645-0d26e35fda03"]
}, Open  ]],
Cell[393425, 7571, 687, 17, 28, "Input",ExpressionUUID->"7f37c51c-0afb-4fcd-9244-625cee6be07c"],
Cell[CellGroupData[{
Cell[394137, 7592, 275, 5, 28, "Input",ExpressionUUID->"9b001000-73bc-41f9-8d78-1921979fb763"],
Cell[394415, 7599, 1937, 45, 241, "Output",ExpressionUUID->"9a86d07a-f361-4e7b-9781-2e962478abe7"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[396401, 7650, 216, 4, 53, "Subsection",ExpressionUUID->"366aea10-45d0-4545-b265-6dd68e918bd7"],
Cell[396620, 7656, 245, 5, 28, "Input",ExpressionUUID->"417ae430-e59f-4199-8bb6-da3a273d827b"],
Cell[396868, 7663, 7316, 163, 475, "Input",ExpressionUUID->"3b8a630c-df79-40ca-b12b-b779805be7bb"],
Cell[CellGroupData[{
Cell[404209, 7830, 261, 5, 28, "Input",ExpressionUUID->"97069d10-de19-40d7-95ed-86d394dcde50"],
Cell[404473, 7837, 288, 5, 32, "Output",ExpressionUUID->"eb8f97f3-4fd6-4cbe-a6dc-28472b7a35a9"]
}, Open  ]],
Cell[404776, 7845, 694, 17, 28, "Input",ExpressionUUID->"c74e75a8-29ae-4704-b30d-7dcbbdd5c48c"],
Cell[CellGroupData[{
Cell[405495, 7866, 273, 5, 28, "Input",ExpressionUUID->"fadefb51-4c54-4728-8527-665d5a1adca1"],
Cell[405771, 7873, 1649, 41, 242, "Output",ExpressionUUID->"a52178c9-7a72-4803-85b4-a95acad3872b"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[407469, 7920, 216, 4, 53, "Subsection",ExpressionUUID->"11476eb1-ad93-4dff-a008-82fe8965d3ba"],
Cell[407688, 7926, 267, 5, 28, "Input",ExpressionUUID->"68383757-d39f-4c83-92a3-a29df9abd0e4"],
Cell[407958, 7933, 7320, 163, 475, "Input",ExpressionUUID->"7aea1a41-86fa-4e0c-9634-f46e25567383"],
Cell[CellGroupData[{
Cell[415303, 8100, 263, 5, 28, "Input",ExpressionUUID->"7a74eb99-8f93-48f7-bfdf-d85621d23d48"],
Cell[415569, 8107, 270, 4, 32, "Output",ExpressionUUID->"fc354017-48cb-42b2-b15f-141a5612e1c2"]
}, Open  ]],
Cell[415854, 8114, 686, 17, 28, "Input",ExpressionUUID->"40ac560d-e69d-4188-adc6-352736e8cd6d"],
Cell[CellGroupData[{
Cell[416565, 8135, 275, 5, 28, "Input",ExpressionUUID->"bf353abf-783f-4918-b9f4-c6274ac64e8b"],
Cell[416843, 8142, 2036, 49, 241, "Output",ExpressionUUID->"c11cf445-3398-4a08-bf89-4cab31ec4dc8"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

